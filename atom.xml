<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>八角书屋</title>
  
  <subtitle>Engineering House</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-11-09T22:23:31.795Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>leaf</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>905. Sort Array By Parity(easy)</title>
    <link href="http://example.com/2022/11/09/905/"/>
    <id>http://example.com/2022/11/09/905/</id>
    <published>2022-11-09T22:18:43.000Z</published>
    <updated>2022-11-09T22:23:31.795Z</updated>
    
    <content type="html"><![CDATA[<h1 id="905-Sort-Array-By-Parity-easy"><a href="#905-Sort-Array-By-Parity-easy" class="headerlink" title="905. Sort Array By Parity(easy)"></a>905. Sort Array By Parity(easy)</h1><h2 id="Given-an-integer-array-nums-move-all-the-even-integers-at-the-beginning-of-the-array-followed-by-all-the-odd-integers"><a href="#Given-an-integer-array-nums-move-all-the-even-integers-at-the-beginning-of-the-array-followed-by-all-the-odd-integers" class="headerlink" title="Given an integer array nums, move all the even integers at the beginning of the array followed by all the odd integers."></a>Given an integer array nums, move all the even integers at the beginning of the array followed by all the odd integers.</h2><h2 id="Return-any-array-that-satisfies-this-condition"><a href="#Return-any-array-that-satisfies-this-condition" class="headerlink" title="Return any array that satisfies this condition."></a>Return any array that satisfies this condition.</h2><p>偶数放前面，奇数放后面<br>第一种对%2的值排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sortArrayByParity</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span></span><br><span class="line">        nums.sort(key = <span class="keyword">lambda</span> x: x % <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> nums</span><br></pre></td></tr></table></figure><p>第二种方法通过交换队首和队尾的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sortArrayByParity</span>(<span class="params">self, nums</span>):</span></span><br><span class="line">        i, j = <span class="number">0</span>, <span class="built_in">len</span>(nums) - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j:</span><br><span class="line">            <span class="keyword">if</span> nums[i] % <span class="number">2</span> &gt; nums[j] % <span class="number">2</span>:</span><br><span class="line">                nums[i], nums[j] = nums[j], nums[i]</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> nums[i] % <span class="number">2</span> == <span class="number">0</span>: i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> nums[j] % <span class="number">2</span> == <span class="number">1</span>: j -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> nums</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;905-Sort-Array-By-Parity-easy&quot;&gt;&lt;a href=&quot;#905-Sort-Array-By-Parity-easy&quot; class=&quot;headerlink&quot; title=&quot;905. Sort Array By Parity(easy)&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="sort" scheme="http://example.com/tags/sort/"/>
    
  </entry>
  
  <entry>
    <title>904. Fruit Into Baskets(medium)</title>
    <link href="http://example.com/2022/11/09/904/"/>
    <id>http://example.com/2022/11/09/904/</id>
    <published>2022-11-09T22:13:16.000Z</published>
    <updated>2022-11-09T22:18:38.892Z</updated>
    
    <content type="html"><![CDATA[<h1 id="904-Fruit-Into-Baskets-medium"><a href="#904-Fruit-Into-Baskets-medium" class="headerlink" title="904. Fruit Into Baskets(medium)"></a>904. Fruit Into Baskets(medium)</h1><h2 id="You-are-visiting-a-farm-that-has-a-single-row-of-fruit-trees-arranged-from-left-to-right-The-trees-are-represented-by-an-integer-array-fruits-where-fruits-i-is-the-type-of-fruit-the-ith-tree-produces"><a href="#You-are-visiting-a-farm-that-has-a-single-row-of-fruit-trees-arranged-from-left-to-right-The-trees-are-represented-by-an-integer-array-fruits-where-fruits-i-is-the-type-of-fruit-the-ith-tree-produces" class="headerlink" title="You are visiting a farm that has a single row of fruit trees arranged from left to right. The trees are represented by an integer array fruits where fruits[i] is the type of fruit the ith tree produces."></a>You are visiting a farm that has a single row of fruit trees arranged from left to right. The trees are represented by an integer array fruits where fruits[i] is the type of fruit the ith tree produces.</h2><h2 id="You-want-to-collect-as-much-fruit-as-possible-However-the-owner-has-some-strict-rules-that-you-must-follow"><a href="#You-want-to-collect-as-much-fruit-as-possible-However-the-owner-has-some-strict-rules-that-you-must-follow" class="headerlink" title="You want to collect as much fruit as possible. However, the owner has some strict rules that you must follow:"></a>You want to collect as much fruit as possible. However, the owner has some strict rules that you must follow:</h2><h2 id="You-only-have-two-baskets-and-each-basket-can-only-hold-a-single-type-of-fruit-There-is-no-limit-on-the-amount-of-fruit-each-basket-can-hold"><a href="#You-only-have-two-baskets-and-each-basket-can-only-hold-a-single-type-of-fruit-There-is-no-limit-on-the-amount-of-fruit-each-basket-can-hold" class="headerlink" title="You only have two baskets, and each basket can only hold a single type of fruit. There is no limit on the amount of fruit each basket can hold."></a>You only have two baskets, and each basket can only hold a single type of fruit. There is no limit on the amount of fruit each basket can hold.</h2><h2 id="Starting-from-any-tree-of-your-choice-you-must-pick-exactly-one-fruit-from-every-tree-including-the-start-tree-while-moving-to-the-right-The-picked-fruits-must-fit-in-one-of-your-baskets"><a href="#Starting-from-any-tree-of-your-choice-you-must-pick-exactly-one-fruit-from-every-tree-including-the-start-tree-while-moving-to-the-right-The-picked-fruits-must-fit-in-one-of-your-baskets" class="headerlink" title="Starting from any tree of your choice, you must pick exactly one fruit from every tree (including the start tree) while moving to the right. The picked fruits must fit in one of your baskets."></a>Starting from any tree of your choice, you must pick exactly one fruit from every tree (including the start tree) while moving to the right. The picked fruits must fit in one of your baskets.</h2><h2 id="Once-you-reach-a-tree-with-fruit-that-cannot-fit-in-your-baskets-you-must-stop"><a href="#Once-you-reach-a-tree-with-fruit-that-cannot-fit-in-your-baskets-you-must-stop" class="headerlink" title="Once you reach a tree with fruit that cannot fit in your baskets, you must stop."></a>Once you reach a tree with fruit that cannot fit in your baskets, you must stop.</h2><p>Given the integer array fruits, return the maximum number of fruits you can pick.</p><p>这道题的本质是求连续子序列</p><h2 id="力扣官方题解"><a href="#力扣官方题解" class="headerlink" title="力扣官方题解"></a><a href="https://leetcode.cn/problems/fruit-into-baskets/solutions/1893352/shui-guo-cheng-lan-by-leetcode-solution-1uyu/">力扣官方题解</a></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">totalFruit</span>(<span class="params">self, fruits: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        cnt = Counter()</span><br><span class="line"></span><br><span class="line">        left = ans = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> right, x <span class="keyword">in</span> <span class="built_in">enumerate</span>(fruits):</span><br><span class="line">            cnt[x] += <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> <span class="built_in">len</span>(cnt) &gt; <span class="number">2</span>:</span><br><span class="line">                cnt[fruits[left]] -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> cnt[fruits[left]] == <span class="number">0</span>:</span><br><span class="line">                    cnt.pop(fruits[left])</span><br><span class="line">                left += <span class="number">1</span></span><br><span class="line">            ans = <span class="built_in">max</span>(ans, right - left + <span class="number">1</span>)        </span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;904-Fruit-Into-Baskets-medium&quot;&gt;&lt;a href=&quot;#904-Fruit-Into-Baskets-medium&quot; class=&quot;headerlink&quot; title=&quot;904. Fruit Into Baskets(medium)&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="hashmap" scheme="http://example.com/tags/hashmap/"/>
    
    <category term="two-pointer" scheme="http://example.com/tags/two-pointer/"/>
    
    <category term="sliding window" scheme="http://example.com/tags/sliding-window/"/>
    
  </entry>
  
  <entry>
    <title>901. Online Stock Span(medium)</title>
    <link href="http://example.com/2022/11/09/901/"/>
    <id>http://example.com/2022/11/09/901/</id>
    <published>2022-11-09T21:03:58.000Z</published>
    <updated>2022-11-09T21:35:16.262Z</updated>
    
    <content type="html"><![CDATA[<h1 id="901-Online-Stock-Span-medium"><a href="#901-Online-Stock-Span-medium" class="headerlink" title="901. Online Stock Span(medium)"></a>901. Online Stock Span(medium)</h1><h2 id="Design-an-algorithm-that-collects-daily-price-quotes-for-some-stock-and-returns-the-span-of-that-stock’s-price-for-the-current-day"><a href="#Design-an-algorithm-that-collects-daily-price-quotes-for-some-stock-and-returns-the-span-of-that-stock’s-price-for-the-current-day" class="headerlink" title="Design an algorithm that collects daily price quotes for some stock and returns the span of that stock’s price for the current day."></a>Design an algorithm that collects daily price quotes for some stock and returns the span of that stock’s price for the current day.</h2><h2 id="The-span-of-the-stock’s-price-today-is-defined-as-the-maximum-number-of-consecutive-days-starting-from-today-and-going-backward-for-which-the-stock-price-was-less-than-or-equal-to-today’s-price"><a href="#The-span-of-the-stock’s-price-today-is-defined-as-the-maximum-number-of-consecutive-days-starting-from-today-and-going-backward-for-which-the-stock-price-was-less-than-or-equal-to-today’s-price" class="headerlink" title="The span of the stock’s price today is defined as the maximum number of consecutive days (starting from today and going backward) for which the stock price was less than or equal to today’s price."></a>The span of the stock’s price today is defined as the maximum number of consecutive days (starting from today and going backward) for which the stock price was less than or equal to today’s price.</h2><h2 id="For-example-if-the-price-of-a-stock-over-the-next-7-days-were-100-80-60-70-60-75-85-then-the-stock-spans-would-be-1-1-1-2-1-4-6"><a href="#For-example-if-the-price-of-a-stock-over-the-next-7-days-were-100-80-60-70-60-75-85-then-the-stock-spans-would-be-1-1-1-2-1-4-6" class="headerlink" title="For example, if the price of a stock over the next 7 days were [100,80,60,70,60,75,85], then the stock spans would be [1,1,1,2,1,4,6]."></a>For example, if the price of a stock over the next 7 days were [100,80,60,70,60,75,85], then the stock spans would be [1,1,1,2,1,4,6].</h2><h2 id="Implement-the-StockSpanner-class"><a href="#Implement-the-StockSpanner-class" class="headerlink" title="Implement the StockSpanner class:"></a>Implement the StockSpanner class:</h2><p>StockSpanner() Initializes the object of the class.<br>int next(int price) Returns the span of the stock’s price given that today’s price is price.</p><h3 id="官方题解"><a href="#官方题解" class="headerlink" title="官方题解"></a><a href="https://leetcode.cn/problems/online-stock-span/solutions/1906765/gu-piao-jie-ge-kua-du-by-leetcode-soluti-5cm7/">官方题解</a></h3><p>一开始我先试了直接用数组记录数据，然后每次往前遍历一遍记录有多少小于当前price的值，但是在后面的testcase中遇到了超时的问题。<br>官方解答是用了stack来解决这个问题</p><p>调用 next 时，输入是新的一天的股票价格，需要返回包含此日在内的，往前数最多有连续多少日的股票价格是小于等于今日股票价格的。如果把每日的 price 当成数组不同下标的值，即需要求出每个值与上一个更大元素之间的下标之差。这种题目可以用单调栈求解，具体原理可以参考「496. 下一个更大元素 I 的官方题解的方法二」。<br>此题的具体解法上，栈的元素可以是股票价格的下标（即天数）和股票价格的二元数对，并且在栈中先插入一个最大值作为天数为 −1 天的价格，来保证栈不会为空。调用 next 时，先将栈中价格小于等于此时 price 的元素都弹出，直到遇到一个大于 price 的值，并将 price 入栈，计算下标差返回。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StockSpanner</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.stack = [(-<span class="number">1</span>, inf)]</span><br><span class="line">        self.idx = -<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">next</span>(<span class="params">self, price: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        self.idx += <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> price &gt;= self.stack[-<span class="number">1</span>][<span class="number">1</span>]:</span><br><span class="line">            self.stack.pop()</span><br><span class="line">        self.stack.append((self.idx, price))</span><br><span class="line">        <span class="keyword">return</span> self.idx - self.stack[-<span class="number">2</span>][<span class="number">0</span>]</span><br></pre></td></tr></table></figure><p>作者：力扣官方题解<br>链接：<a href="https://leetcode.cn/problems/online-stock-span/solutions/1906765/gu-piao-jie-ge-kua-du-by-leetcode-soluti-5cm7/">https://leetcode.cn/problems/online-stock-span/solutions/1906765/gu-piao-jie-ge-kua-du-by-leetcode-soluti-5cm7/</a><br>来源：力扣（LeetCode）<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;901-Online-Stock-Span-medium&quot;&gt;&lt;a href=&quot;#901-Online-Stock-Span-medium&quot; class=&quot;headerlink&quot; title=&quot;901. Online Stock Span(medium)&quot;&gt;&lt;/a&gt;</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="stack" scheme="http://example.com/tags/stack/"/>
    
    <category term="Data structure design" scheme="http://example.com/tags/Data-structure-design/"/>
    
  </entry>
  
  <entry>
    <title>2244. Minimum Rounds to Complete All Tasks(medium)</title>
    <link href="http://example.com/2022/11/09/2244/"/>
    <id>http://example.com/2022/11/09/2244/</id>
    <published>2022-11-09T20:24:14.000Z</published>
    <updated>2022-11-09T20:30:00.834Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2244-Minimum-Rounds-to-Complete-All-Tasks-medium"><a href="#2244-Minimum-Rounds-to-Complete-All-Tasks-medium" class="headerlink" title="2244. Minimum Rounds to Complete All Tasks(medium)"></a>2244. Minimum Rounds to Complete All Tasks(medium)</h1><h2 id="You-are-given-a-0-indexed-integer-array-tasks-where-tasks-i-represents-the-difficulty-level-of-a-task-In-each-round-you-can-complete-either-2-or-3-tasks-of-the-same-difficulty-level"><a href="#You-are-given-a-0-indexed-integer-array-tasks-where-tasks-i-represents-the-difficulty-level-of-a-task-In-each-round-you-can-complete-either-2-or-3-tasks-of-the-same-difficulty-level" class="headerlink" title="You are given a 0-indexed integer array tasks, where tasks[i] represents the difficulty level of a task. In each round, you can complete either 2 or 3 tasks of the same difficulty level."></a>You are given a 0-indexed integer array tasks, where tasks[i] represents the difficulty level of a task. In each round, you can complete either 2 or 3 tasks of the same difficulty level.</h2><h2 id="Return-the-minimum-rounds-required-to-complete-all-the-tasks-or-1-if-it-is-not-possible-to-complete-all-the-tasks"><a href="#Return-the-minimum-rounds-required-to-complete-all-the-tasks-or-1-if-it-is-not-possible-to-complete-all-the-tasks" class="headerlink" title="Return the minimum rounds required to complete all the tasks, or -1 if it is not possible to complete all the tasks."></a>Return the minimum rounds required to complete all the tasks, or -1 if it is not possible to complete all the tasks.</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Input: tasks = [2,2,3,3,2,4,4,4,4,4]</span><br><span class="line">Output: 4</span><br><span class="line">Explanation: To complete all the tasks, a possible plan is:</span><br><span class="line">- In the first round, you complete 3 tasks of difficulty level 2. </span><br><span class="line">- In the second round, you complete 2 tasks of difficulty level 3. </span><br><span class="line">- In the third round, you complete 3 tasks of difficulty level 4. </span><br><span class="line">- In the fourth round, you complete 2 tasks of difficulty level 4.  </span><br><span class="line">It can be shown that all the tasks cannot be completed in fewer than 4 rounds, so the answer is 4.</span><br></pre></td></tr></table></figure><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution:"></a>Solution:</h2><p>通过Counter记录相同task，然后遍历每个value的个数count分情况讨论，遇到只有一个的直接返回-1，对3能整除的ans加上count除3<br>剩下的都是除三向下取整加1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#from collections import Counter</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minimumRounds</span>(<span class="params">self, tasks: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        ans=<span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(tasks)==<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">        hashmap=Counter(tasks)</span><br><span class="line">        ans=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> count <span class="keyword">in</span> hashmap.values():</span><br><span class="line">            <span class="keyword">if</span> count==<span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> count%<span class="number">3</span>==<span class="number">0</span>:</span><br><span class="line">                ans+=count/<span class="number">3</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ans+=count//<span class="number">3</span>+<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(ans)        </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2244-Minimum-Rounds-to-Complete-All-Tasks-medium&quot;&gt;&lt;a href=&quot;#2244-Minimum-Rounds-to-Complete-All-Tasks-medium&quot; class=&quot;headerlink&quot; tit</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="hashmap" scheme="http://example.com/tags/hashmap/"/>
    
  </entry>
  
  <entry>
    <title>746. Min Cost Climbing Stairs(easy)</title>
    <link href="http://example.com/2022/11/08/746/"/>
    <id>http://example.com/2022/11/08/746/</id>
    <published>2022-11-08T22:14:38.000Z</published>
    <updated>2022-11-08T23:20:48.987Z</updated>
    
    <content type="html"><![CDATA[<h1 id="746-Min-Cost-Climbing-Stairs-easy"><a href="#746-Min-Cost-Climbing-Stairs-easy" class="headerlink" title="746. Min Cost Climbing Stairs(easy)"></a>746. Min Cost Climbing Stairs(easy)</h1><h2 id="You-are-given-an-integer-array-cost-where-cost-i-is-the-cost-of-ith-step-on-a-staircase-Once-you-pay-the-cost-you-can-either-climb-one-or-two-steps"><a href="#You-are-given-an-integer-array-cost-where-cost-i-is-the-cost-of-ith-step-on-a-staircase-Once-you-pay-the-cost-you-can-either-climb-one-or-two-steps" class="headerlink" title="You are given an integer array cost where cost[i] is the cost of ith step on a staircase. Once you pay the cost, you can either climb one or two steps."></a>You are given an integer array cost where cost[i] is the cost of ith step on a staircase. Once you pay the cost, you can either climb one or two steps.</h2><h2 id="You-can-either-start-from-the-step-with-index-0-or-the-step-with-index-1"><a href="#You-can-either-start-from-the-step-with-index-0-or-the-step-with-index-1" class="headerlink" title="You can either start from the step with index 0, or the step with index 1."></a>You can either start from the step with index 0, or the step with index 1.</h2><h2 id="Return-the-minimum-cost-to-reach-the-top-of-the-floor"><a href="#Return-the-minimum-cost-to-reach-the-top-of-the-floor" class="headerlink" title="Return the minimum cost to reach the top of the floor."></a>Return the minimum cost to reach the top of the floor.</h2><h2 id="官方题解"><a href="#官方题解" class="headerlink" title="官方题解"></a><a href="https://leetcode.cn/problems/min-cost-climbing-stairs/solutions/528955/shi-yong-zui-xiao-hua-fei-pa-lou-ti-by-l-ncf8/">官方题解</a></h2><p>创建长度为 n+1的数组 dp，其中 dp[i] 表示达到下标 i 的最小花费。</p><p>由于可以选择下标 0 或 1 作为初始阶梯，因此有 dp[0]=dp[1]=0</p><p>状态转移方程如下：</p><p>dp[i]=min(dp[i−1]+cost[i−1],dp[i−2]+cost[i−2])</p><p>有了这个方程，这道题就好下手了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minCostClimbingStairs</span>(<span class="params">self, cost: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        n=<span class="built_in">len</span>(cost)</span><br><span class="line">        dp=[<span class="number">0</span>]*(n+<span class="number">1</span>)</span><br><span class="line">        dp[<span class="number">0</span>]=dp[<span class="number">1</span>]=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,n+<span class="number">1</span>):</span><br><span class="line">            dp[i]=<span class="built_in">min</span>(dp[i-<span class="number">1</span>]+cost[i-<span class="number">1</span>],dp[i-<span class="number">2</span>]+cost[i-<span class="number">2</span>])</span><br><span class="line">        <span class="keyword">return</span> dp[n]</span><br></pre></td></tr></table></figure><p>优化：<br>利用滚动数组</p><p>注意到当 i≥2时，dp[i] 只和 dp[i−1] 与 dp[i−2] 有关，因此可以使用滚动数组的思想，将空间复杂度优化到 O(1)。<br>类似于不维护一个完整数组，只计算到最后一个数字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minCostClimbingStairs</span>(<span class="params">self, cost: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        n = <span class="built_in">len</span>(cost)</span><br><span class="line">        prev = curr = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, n + <span class="number">1</span>):</span><br><span class="line">            nxt = <span class="built_in">min</span>(curr + cost[i - <span class="number">1</span>], prev + cost[i - <span class="number">2</span>])</span><br><span class="line">            prev, curr = curr, nxt</span><br><span class="line">        <span class="keyword">return</span> curr</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;746-Min-Cost-Climbing-Stairs-easy&quot;&gt;&lt;a href=&quot;#746-Min-Cost-Climbing-Stairs-easy&quot; class=&quot;headerlink&quot; title=&quot;746. Min Cost Climbing Sta</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="dynamic programming" scheme="http://example.com/tags/dynamic-programming/"/>
    
  </entry>
  
  <entry>
    <title>6. Zigzag Conversion(medium)</title>
    <link href="http://example.com/2022/11/07/6/"/>
    <id>http://example.com/2022/11/07/6/</id>
    <published>2022-11-07T22:13:20.000Z</published>
    <updated>2022-11-08T22:17:23.256Z</updated>
    
    <content type="html"><![CDATA[<h1 id="6-Zigzag-Conversion-medium"><a href="#6-Zigzag-Conversion-medium" class="headerlink" title="6. Zigzag Conversion(medium)"></a>6. Zigzag Conversion(medium)</h1><h2 id="The-string-“PAYPALISHIRING”-is-written-in-a-zigzag-pattern-on-a-given-number-of-rows-like-this-you-may-want-to-display-this-pattern-in-a-fixed-font-for-better-legibility"><a href="#The-string-“PAYPALISHIRING”-is-written-in-a-zigzag-pattern-on-a-given-number-of-rows-like-this-you-may-want-to-display-this-pattern-in-a-fixed-font-for-better-legibility" class="headerlink" title="The string “PAYPALISHIRING” is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)"></a>The string “PAYPALISHIRING” is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">P   A   H   N</span><br><span class="line">A P L S I I G</span><br><span class="line">Y   I   R</span><br></pre></td></tr></table></figure><p>And then read line by line: “PAHNAPLSIIGYIR”</p><p>Write the code that will take a string and make this conversion given a number of rows:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string convert(string s, int numRows);</span><br></pre></td></tr></table></figure><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a><a href="https://leetcode.cn/problems/zigzag-conversion/solutions/21610/zzi-xing-bian-huan-by-jyd/">题解</a></h3><p>这道题没有用到什么独特的数据结构或者算法，但是这里用一个flag记录是否要反方向记录</p><p>解题思路：<br>题目理解：<br>字符串 s 是以 Z 字形为顺序存储的字符串，目标是按行打印。<br>设 numRows 行字符串分别为 s1, s2s_2s<br>2,…, sn，则容易发现：按顺序遍历字符串 s 时，每个字符 c 在 Z 字形中对应的行索引先从 s1增大至 sn，再从 sn减小至 s1…… 如此反复。<br>因此，解决方案为：模拟这个行索引的变化，在遍历 s 中把每个字符填到正确的行 res[i] 。<br>算法流程： 按顺序遍历字符串 s；<br>res[i] += c： 把每个字符 c 填入对应行 si；<br>i += flag： 更新当前字符 c 对应的行索引；<br>flag = - flag： 在达到 ZZZ 字形转折点时，执行反向。<br>复杂度分析：<br>时间复杂度 O(N) ：遍历一遍字符串 s；<br>空间复杂度 O(N) ：各行字符串共占用 O(N)额外空间。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">convert</span>(<span class="params">self, s: <span class="built_in">str</span>, numRows: <span class="built_in">int</span></span>) -&gt; <span class="built_in">str</span>:</span></span><br><span class="line">        <span class="keyword">if</span> numRows &lt; <span class="number">2</span>: <span class="keyword">return</span> s</span><br><span class="line">        res = [<span class="string">&quot;&quot;</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(numRows)]</span><br><span class="line">        i, flag = <span class="number">0</span>, -<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> s:</span><br><span class="line">            res[i] += c</span><br><span class="line">            <span class="keyword">if</span> i == <span class="number">0</span> <span class="keyword">or</span> i == numRows - <span class="number">1</span>: flag = -flag</span><br><span class="line">            i += flag</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>.join(res)</span><br></pre></td></tr></table></figure><p>确实是非常巧妙的方法</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;6-Zigzag-Conversion-medium&quot;&gt;&lt;a href=&quot;#6-Zigzag-Conversion-medium&quot; class=&quot;headerlink&quot; title=&quot;6. Zigzag Conversion(medium)&quot;&gt;&lt;/a&gt;6. Zig</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="string" scheme="http://example.com/tags/string/"/>
    
  </entry>
  
  <entry>
    <title>1684. Count the Number of Consistent Strings(easy)</title>
    <link href="http://example.com/2022/11/07/1684/"/>
    <id>http://example.com/2022/11/07/1684/</id>
    <published>2022-11-07T21:56:53.000Z</published>
    <updated>2022-11-08T22:16:45.208Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1684-Count-the-Number-of-Consistent-Strings-easy"><a href="#1684-Count-the-Number-of-Consistent-Strings-easy" class="headerlink" title="1684. Count the Number of Consistent Strings(easy)"></a>1684. Count the Number of Consistent Strings(easy)</h1><h2 id="You-are-given-a-string-allowed-consisting-of-distinct-characters-and-an-array-of-strings-words-A-string-is-consistent-if-all-characters-in-the-string-appear-in-the-string-allowed"><a href="#You-are-given-a-string-allowed-consisting-of-distinct-characters-and-an-array-of-strings-words-A-string-is-consistent-if-all-characters-in-the-string-appear-in-the-string-allowed" class="headerlink" title="You are given a string allowed consisting of distinct characters and an array of strings words. A string is consistent if all characters in the string appear in the string allowed."></a>You are given a string allowed consisting of distinct characters and an array of strings words. A string is consistent if all characters in the string appear in the string allowed.</h2><h2 id="Return-the-number-of-consistent-strings-in-the-array-words"><a href="#Return-the-number-of-consistent-strings-in-the-array-words" class="headerlink" title="Return the number of consistent strings in the array words."></a>Return the number of consistent strings in the array words.</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: allowed = &quot;ab&quot;, words = [&quot;ad&quot;,&quot;bd&quot;,&quot;aaab&quot;,&quot;baa&quot;,&quot;badab&quot;]</span><br><span class="line">Output: 2</span><br><span class="line">Explanation: Strings &quot;aaab&quot; and &quot;baa&quot; are consistent since they only contain characters &#x27;a&#x27; and &#x27;b&#x27;.</span><br></pre></td></tr></table></figure><p>这道题原本是想对words进行set操作的，后面发现对list里的每一个数都操作太麻烦，所以换一个思路，选择从反方向入手。<br>题目是要我们找words里的字母只含有allowed里的字母，所以将allowed去重后，如果words的单词里的字母如果不在allowed里，就记录下来cnt<br>最后输出的是有相同字母的，那么就用words的总个数减去cnt即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">countConsistentStrings</span>(<span class="params">self, allowed: <span class="built_in">str</span>, words: <span class="type">List</span>[<span class="built_in">str</span>]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        allowed=<span class="built_in">set</span>(allowed)</span><br><span class="line">        cnt=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> cha <span class="keyword">in</span> words:</span><br><span class="line">            <span class="keyword">for</span> letter <span class="keyword">in</span> cha:</span><br><span class="line">                <span class="keyword">if</span> letter <span class="keyword">not</span> <span class="keyword">in</span> allowed:</span><br><span class="line">                    cnt+=<span class="number">1</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(words)-cnt</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1684-Count-the-Number-of-Consistent-Strings-easy&quot;&gt;&lt;a href=&quot;#1684-Count-the-Number-of-Consistent-Strings-easy&quot; class=&quot;headerlink&quot; tit</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="string" scheme="http://example.com/tags/string/"/>
    
    <category term="set" scheme="http://example.com/tags/set/"/>
    
  </entry>
  
  <entry>
    <title>1137. N-th Tribonacci Number(easy)</title>
    <link href="http://example.com/2022/11/07/1137/"/>
    <id>http://example.com/2022/11/07/1137/</id>
    <published>2022-11-07T21:41:07.000Z</published>
    <updated>2022-11-08T22:16:28.780Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1137-N-th-Tribonacci-Number-easy"><a href="#1137-N-th-Tribonacci-Number-easy" class="headerlink" title="1137. N-th Tribonacci Number(easy)"></a>1137. N-th Tribonacci Number(easy)</h1><h2 id="The-Tribonacci-sequence-Tn-is-defined-as-follows"><a href="#The-Tribonacci-sequence-Tn-is-defined-as-follows" class="headerlink" title="The Tribonacci sequence Tn is defined as follows:"></a>The Tribonacci sequence Tn is defined as follows:</h2><p>T0 = 0, T1 = 1, T2 = 1, and Tn+3 = Tn + Tn+1 + Tn+2 for n &gt;= 0.</p><p>Given n, return the value of Tn.</p><p>三个数连续相加的斐波那契数列，还是动态规划的思路</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tribonacci</span>(<span class="params">self, n: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        <span class="keyword">if</span> n&lt;<span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        <span class="keyword">elif</span> n==<span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">        dp=[<span class="number">0</span>]*(n+<span class="number">1</span>)</span><br><span class="line">        dp[<span class="number">1</span>]=<span class="number">1</span></span><br><span class="line">        dp[<span class="number">2</span>]=<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>,n+<span class="number">1</span>):</span><br><span class="line">            dp[i]=dp[i-<span class="number">1</span>]+dp[i-<span class="number">2</span>]+dp[i-<span class="number">3</span>]</span><br><span class="line">        <span class="keyword">return</span> dp[n]</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1137-N-th-Tribonacci-Number-easy&quot;&gt;&lt;a href=&quot;#1137-N-th-Tribonacci-Number-easy&quot; class=&quot;headerlink&quot; title=&quot;1137. N-th Tribonacci Number</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="dynamic programming" scheme="http://example.com/tags/dynamic-programming/"/>
    
  </entry>
  
  <entry>
    <title>509. Fibonacci Number(easy)</title>
    <link href="http://example.com/2022/11/07/509/"/>
    <id>http://example.com/2022/11/07/509/</id>
    <published>2022-11-07T21:12:54.000Z</published>
    <updated>2022-11-08T22:16:12.770Z</updated>
    
    <content type="html"><![CDATA[<h1 id="509-Fibonacci-Number-easy"><a href="#509-Fibonacci-Number-easy" class="headerlink" title="509. Fibonacci Number(easy)"></a>509. Fibonacci Number(easy)</h1><h2 id="The-Fibonacci-numbers-commonly-denoted-F-n-form-a-sequence-called-the-Fibonacci-sequence-such-that-each-number-is-the-sum-of-the-two-preceding-ones-starting-from-0-and-1-That-is"><a href="#The-Fibonacci-numbers-commonly-denoted-F-n-form-a-sequence-called-the-Fibonacci-sequence-such-that-each-number-is-the-sum-of-the-two-preceding-ones-starting-from-0-and-1-That-is" class="headerlink" title="The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,"></a>The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">F(0) = 0, F(1) = 1</span><br><span class="line">F(n) = F(n - 1) + F(n - 2), for n &gt; 1.</span><br></pre></td></tr></table></figure><p>Given n, calculate F(n).</p><p>斐波那契数列<br>F(0)=0,F(1)=1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fib</span>(<span class="params">self, n: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        <span class="keyword">if</span> n&lt;<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        dp=[<span class="number">0</span>]*(n+<span class="number">1</span>)</span><br><span class="line">        dp[<span class="number">1</span>]=<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,n+<span class="number">1</span>):</span><br><span class="line">            dp[i]=dp[i-<span class="number">1</span>]+dp[i-<span class="number">2</span>]</span><br><span class="line">        <span class="keyword">return</span> dp[n]</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;509-Fibonacci-Number-easy&quot;&gt;&lt;a href=&quot;#509-Fibonacci-Number-easy&quot; class=&quot;headerlink&quot; title=&quot;509. Fibonacci Number(easy)&quot;&gt;&lt;/a&gt;509. Fibo</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="dynamic programming" scheme="http://example.com/tags/dynamic-programming/"/>
    
  </entry>
  
  <entry>
    <title>1323. Maximum 69 Number(easy)</title>
    <link href="http://example.com/2022/11/06/1323/"/>
    <id>http://example.com/2022/11/06/1323/</id>
    <published>2022-11-07T03:57:00.000Z</published>
    <updated>2022-11-07T03:59:25.023Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1323-Maximum-69-Number-easy"><a href="#1323-Maximum-69-Number-easy" class="headerlink" title="1323. Maximum 69 Number(easy)"></a>1323. Maximum 69 Number(easy)</h1><h2 id="You-are-given-a-positive-integer-num-consisting-only-of-digits-6-and-9"><a href="#You-are-given-a-positive-integer-num-consisting-only-of-digits-6-and-9" class="headerlink" title="You are given a positive integer num consisting only of digits 6 and 9."></a>You are given a positive integer num consisting only of digits 6 and 9.</h2><h2 id="Return-the-maximum-number-you-can-get-by-changing-at-most-one-digit-6-becomes-9-and-9-becomes-6"><a href="#Return-the-maximum-number-you-can-get-by-changing-at-most-one-digit-6-becomes-9-and-9-becomes-6" class="headerlink" title="Return the maximum number you can get by changing at most one digit (6 becomes 9, and 9 becomes 6)."></a>Return the maximum number you can get by changing at most one digit (6 becomes 9, and 9 becomes 6).</h2><p>将num转换为字符串，然后再转换成list<br>判断list有没有6，如果没有直接输出num<br>index(x)返回找到的第一个x<br>最后join把字符串连在一起</p><pre><code class="python">class Solution:    def maximum69Number (self, num: int) -&gt; int:        s=list(str(num))        if &#39;6&#39; not in s:            return num        s[s.index(&#39;6&#39;)]=&#39;9&#39;        return &#39;&#39;.join(s)</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1323-Maximum-69-Number-easy&quot;&gt;&lt;a href=&quot;#1323-Maximum-69-Number-easy&quot; class=&quot;headerlink&quot; title=&quot;1323. Maximum 69 Number(easy)&quot;&gt;&lt;/a&gt;132</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="string" scheme="http://example.com/tags/string/"/>
    
  </entry>
  
  <entry>
    <title>408. Valid Word Abbreviation(easy)</title>
    <link href="http://example.com/2022/11/06/408/"/>
    <id>http://example.com/2022/11/06/408/</id>
    <published>2022-11-07T03:50:54.000Z</published>
    <updated>2022-11-07T03:52:07.012Z</updated>
    
    <content type="html"><![CDATA[<h1 id="408-Valid-Word-Abbreviation-easy"><a href="#408-Valid-Word-Abbreviation-easy" class="headerlink" title="408. Valid Word Abbreviation(easy)"></a>408. Valid Word Abbreviation(easy)</h1><h2 id="A-string-can-be-abbreviated-by-replacing-any-number-of-non-adjacent-non-empty-substrings-with-their-lengths-The-lengths-should-not-have-leading-zeros"><a href="#A-string-can-be-abbreviated-by-replacing-any-number-of-non-adjacent-non-empty-substrings-with-their-lengths-The-lengths-should-not-have-leading-zeros" class="headerlink" title="A string can be abbreviated by replacing any number of non-adjacent, non-empty substrings with their lengths. The lengths should not have leading zeros."></a>A string can be abbreviated by replacing any number of non-adjacent, non-empty substrings with their lengths. The lengths should not have leading zeros.</h2><p>For example, a string such as “substitution” could be abbreviated as (but not limited to):</p><p>“s10n” (“s ubstitutio n”)<br>“sub4u4” (“sub stit u tion”)<br>“12” (“substitution”)<br>“su3i1u2on” (“su bst i t u ti on”)<br>“substitution” (no substrings replaced)<br>The following are not valid abbreviations:</p><p>“s55n” (“s ubsti tutio n”, the replaced substrings are adjacent)<br>“s010n” (has leading zeros)<br>“s0ubstitution” (replaces an empty substring)<br>Given a string word and an abbreviation abbr, return whether the string matches the given abbreviation.</p><p>A substring is a contiguous non-empty sequence of characters within a string.</p><p>这道题就是直接模拟计算<br><a href="https://leetcode.com/problems/valid-word-abbreviation/solutions/144195/python-straightforward-solution-beats-100/">题解</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validWordAbbreviation</span>(<span class="params">self, word, abbr</span>):</span></span><br><span class="line">        i = j = <span class="number">0</span></span><br><span class="line">        m, n = <span class="built_in">len</span>(word), <span class="built_in">len</span>(abbr)</span><br><span class="line">        <span class="keyword">while</span> i &lt; m <span class="keyword">and</span> j &lt; n:</span><br><span class="line">            <span class="keyword">if</span> word[i] == abbr[j]:</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> abbr[j] == <span class="string">&quot;0&quot;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            <span class="keyword">elif</span> abbr[j].isnumeric():</span><br><span class="line">                k = j</span><br><span class="line">                <span class="keyword">while</span> k &lt; n <span class="keyword">and</span> abbr[k].isnumeric():</span><br><span class="line">                    k += <span class="number">1</span></span><br><span class="line">                i += <span class="built_in">int</span>(abbr[j:k])</span><br><span class="line">                j = k</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> i == m <span class="keyword">and</span> j == n</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;408-Valid-Word-Abbreviation-easy&quot;&gt;&lt;a href=&quot;#408-Valid-Word-Abbreviation-easy&quot; class=&quot;headerlink&quot; title=&quot;408. Valid Word Abbreviation</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="string" scheme="http://example.com/tags/string/"/>
    
  </entry>
  
  <entry>
    <title>459. Repeated Substring Pattern(easy)</title>
    <link href="http://example.com/2022/11/06/459/"/>
    <id>http://example.com/2022/11/06/459/</id>
    <published>2022-11-07T03:31:10.000Z</published>
    <updated>2022-11-07T03:41:32.883Z</updated>
    
    <content type="html"><![CDATA[<h1 id="459-Repeated-Substring-Pattern-easy"><a href="#459-Repeated-Substring-Pattern-easy" class="headerlink" title="459. Repeated Substring Pattern(easy)"></a>459. Repeated Substring Pattern(easy)</h1><h2 id="Given-a-string-s-check-if-it-can-be-constructed-by-taking-a-substring-of-it-and-appending-multiple-copies-of-the-substring-together"><a href="#Given-a-string-s-check-if-it-can-be-constructed-by-taking-a-substring-of-it-and-appending-multiple-copies-of-the-substring-together" class="headerlink" title="Given a string s, check if it can be constructed by taking a substring of it and appending multiple copies of the substring together."></a>Given a string s, check if it can be constructed by taking a substring of it and appending multiple copies of the substring together.</h2><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a><a href="https://leetcode.com/problems/repeated-substring-pattern/solutions/94334/easy-python-solution-with-explaination/">题解</a></h3><p>这道题的题解非常有技巧：</p><ol><li>First char of input string is first char of repeated substring</li><li>Last char of input string is last char of repeated substring</li><li>Let S1 = S + S (where S in input string)</li><li>Remove 1 and last char of S1. Let this be S2</li><li>If S exists in S2 then return true else false</li><li>Let i be index in S2 where S starts then repeated substring length i + 1 and repeated substring S[0: i+1]</li></ol><p>这里最基础的一点是，新字符串s2=s+s，s是一开始的字符串。如果s是重复的，那么s2从第二个字符到倒数第二个字符里一定包含了s</p><pre><code class="python">class Solution:    def repeatedSubstringPattern(self, s: str) -&gt; bool:        if not s:            return False        s2=(s+s)[1:-1]        return s2.find(s)!=-1</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;459-Repeated-Substring-Pattern-easy&quot;&gt;&lt;a href=&quot;#459-Repeated-Substring-Pattern-easy&quot; class=&quot;headerlink&quot; title=&quot;459. Repeated Substrin</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="string" scheme="http://example.com/tags/string/"/>
    
  </entry>
  
  <entry>
    <title>422. Valid Word Square(easy)</title>
    <link href="http://example.com/2022/11/06/422/"/>
    <id>http://example.com/2022/11/06/422/</id>
    <published>2022-11-07T03:29:24.000Z</published>
    <updated>2022-11-07T03:41:17.823Z</updated>
    
    <content type="html"><![CDATA[<h1 id="422-Valid-Word-Square-easy"><a href="#422-Valid-Word-Square-easy" class="headerlink" title="422. Valid Word Square(easy)"></a>422. Valid Word Square(easy)</h1><h2 id="Given-an-array-of-strings-words-return-true-if-it-forms-a-valid-word-square"><a href="#Given-an-array-of-strings-words-return-true-if-it-forms-a-valid-word-square" class="headerlink" title="Given an array of strings words, return true if it forms a valid word square."></a>Given an array of strings words, return true if it forms a valid word square.</h2><h2 id="A-sequence-of-strings-forms-a-valid-word-square-if-the-kth-row-and-column-read-the-same-string-where-0-lt-k-lt-max-numRows-numColumns"><a href="#A-sequence-of-strings-forms-a-valid-word-square-if-the-kth-row-and-column-read-the-same-string-where-0-lt-k-lt-max-numRows-numColumns" class="headerlink" title="A sequence of strings forms a valid word square if the kth row and column read the same string, where 0 &lt;= k &lt; max(numRows, numColumns)."></a>A sequence of strings forms a valid word square if the kth row and column read the same string, where 0 &lt;= k &lt; max(numRows, numColumns).</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Input: words = [&quot;abcd&quot;,&quot;bnrt&quot;,&quot;crmy&quot;,&quot;dtye&quot;]</span><br><span class="line">Output: true</span><br><span class="line">Explanation:</span><br><span class="line">The 1st row and 1st column both read &quot;abcd&quot;.</span><br><span class="line">The 2nd row and 2nd column both read &quot;bnrt&quot;.</span><br><span class="line">The 3rd row and 3rd column both read &quot;crmy&quot;.</span><br><span class="line">The 4th row and 4th column both read &quot;dtye&quot;.</span><br><span class="line">Therefore, it is a valid word square.</span><br></pre></td></tr></table></figure><p>找矩阵是否对称</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validWordSquare</span>(<span class="params">self, words: <span class="type">List</span>[<span class="built_in">str</span>]</span>) -&gt; <span class="built_in">bool</span>:</span></span><br><span class="line">        <span class="keyword">if</span> words==<span class="literal">None</span> <span class="keyword">or</span> <span class="built_in">len</span>(words)==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        row=<span class="built_in">len</span>(words)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(row):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(words[i])):</span><br><span class="line">                <span class="keyword">if</span> j&gt;=<span class="built_in">len</span>(words) <span class="keyword">or</span> i &gt;=<span class="built_in">len</span>(words[j]) <span class="keyword">or</span> words[i][j]!=words[j][i]:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;422-Valid-Word-Square-easy&quot;&gt;&lt;a href=&quot;#422-Valid-Word-Square-easy&quot; class=&quot;headerlink&quot; title=&quot;422. Valid Word Square(easy)&quot;&gt;&lt;/a&gt;422. V</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="string" scheme="http://example.com/tags/string/"/>
    
    <category term="matrix" scheme="http://example.com/tags/matrix/"/>
    
  </entry>
  
  <entry>
    <title>463. Island Perimeter(easy)</title>
    <link href="http://example.com/2022/11/06/463/"/>
    <id>http://example.com/2022/11/06/463/</id>
    <published>2022-11-07T02:45:13.000Z</published>
    <updated>2022-11-07T02:47:04.406Z</updated>
    
    <content type="html"><![CDATA[<h1 id="463-Island-Perimeter-easy"><a href="#463-Island-Perimeter-easy" class="headerlink" title="463. Island Perimeter(easy)"></a>463. Island Perimeter(easy)</h1><h2 id="You-are-given-row-x-col-grid-representing-a-map-where-grid-i-j-1-represents-land-and-grid-i-j-0-represents-water"><a href="#You-are-given-row-x-col-grid-representing-a-map-where-grid-i-j-1-represents-land-and-grid-i-j-0-represents-water" class="headerlink" title="You are given row x col grid representing a map where grid[i][j] = 1 represents land and grid[i][j] = 0 represents water."></a>You are given row x col grid representing a map where grid[i][j] = 1 represents land and grid[i][j] = 0 represents water.</h2><h2 id="Grid-cells-are-connected-horizontally-vertically-not-diagonally-The-grid-is-completely-surrounded-by-water-and-there-is-exactly-one-island-i-e-one-or-more-connected-land-cells"><a href="#Grid-cells-are-connected-horizontally-vertically-not-diagonally-The-grid-is-completely-surrounded-by-water-and-there-is-exactly-one-island-i-e-one-or-more-connected-land-cells" class="headerlink" title="Grid cells are connected horizontally/vertically (not diagonally). The grid is completely surrounded by water, and there is exactly one island (i.e., one or more connected land cells)."></a>Grid cells are connected horizontally/vertically (not diagonally). The grid is completely surrounded by water, and there is exactly one island (i.e., one or more connected land cells).</h2><h2 id="The-island-doesn’t-have-“lakes”-meaning-the-water-inside-isn’t-connected-to-the-water-around-the-island-One-cell-is-a-square-with-side-length-1-The-grid-is-rectangular-width-and-height-don’t-exceed-100-Determine-the-perimeter-of-the-island"><a href="#The-island-doesn’t-have-“lakes”-meaning-the-water-inside-isn’t-connected-to-the-water-around-the-island-One-cell-is-a-square-with-side-length-1-The-grid-is-rectangular-width-and-height-don’t-exceed-100-Determine-the-perimeter-of-the-island" class="headerlink" title="The island doesn’t have “lakes”, meaning the water inside isn’t connected to the water around the island. One cell is a square with side length 1. The grid is rectangular, width and height don’t exceed 100. Determine the perimeter of the island."></a>The island doesn’t have “lakes”, meaning the water inside isn’t connected to the water around the island. One cell is a square with side length 1. The grid is rectangular, width and height don’t exceed 100. Determine the perimeter of the island.</h2><p>直接模拟，看当前为1的格子四边有没有其他为1的格子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">islandPerimeter</span>(<span class="params">self, grid: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        row=<span class="built_in">len</span>(grid)</span><br><span class="line">        col=<span class="built_in">len</span>(grid[<span class="number">0</span>])</span><br><span class="line">        ans=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(row):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(col):</span><br><span class="line">                <span class="keyword">if</span> grid[i][j]==<span class="number">1</span>:</span><br><span class="line">                    ans+=<span class="number">4</span></span><br><span class="line">                    <span class="keyword">if</span> i+<span class="number">1</span>&lt;row <span class="keyword">and</span> grid[i+<span class="number">1</span>][j]==<span class="number">1</span>:</span><br><span class="line">                        ans-=<span class="number">1</span></span><br><span class="line">                    <span class="keyword">if</span> i-<span class="number">1</span>&gt;=<span class="number">0</span> <span class="keyword">and</span> grid[i-<span class="number">1</span>][j]==<span class="number">1</span>:</span><br><span class="line">                        ans-=<span class="number">1</span></span><br><span class="line">                    <span class="keyword">if</span> j+<span class="number">1</span>&lt;col <span class="keyword">and</span> grid[i][j+<span class="number">1</span>]==<span class="number">1</span>:</span><br><span class="line">                        ans-=<span class="number">1</span></span><br><span class="line">                    <span class="keyword">if</span> j-<span class="number">1</span>&gt;=<span class="number">0</span> <span class="keyword">and</span> grid[i][j-<span class="number">1</span>]==<span class="number">1</span>:</span><br><span class="line">                        ans-=<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> ans </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;463-Island-Perimeter-easy&quot;&gt;&lt;a href=&quot;#463-Island-Perimeter-easy&quot; class=&quot;headerlink&quot; title=&quot;463. Island Perimeter(easy)&quot;&gt;&lt;/a&gt;463. Isla</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="matrix" scheme="http://example.com/tags/matrix/"/>
    
  </entry>
  
  <entry>
    <title>461. Hamming Distance(easy)</title>
    <link href="http://example.com/2022/11/06/461/"/>
    <id>http://example.com/2022/11/06/461/</id>
    <published>2022-11-07T02:25:00.000Z</published>
    <updated>2022-11-07T02:28:58.640Z</updated>
    
    <content type="html"><![CDATA[<h1 id="461-Hamming-Distance-easy"><a href="#461-Hamming-Distance-easy" class="headerlink" title="461. Hamming Distance(easy)"></a>461. Hamming Distance(easy)</h1><h2 id="The-Hamming-distance-between-two-integers-is-the-number-of-positions-at-which-the-corresponding-bits-are-different"><a href="#The-Hamming-distance-between-two-integers-is-the-number-of-positions-at-which-the-corresponding-bits-are-different" class="headerlink" title="The Hamming distance between two integers is the number of positions at which the corresponding bits are different."></a>The Hamming distance between two integers is the number of positions at which the corresponding bits are different.</h2><h2 id="Given-two-integers-x-and-y-return-the-Hamming-distance-between-them"><a href="#Given-two-integers-x-and-y-return-the-Hamming-distance-between-them" class="headerlink" title="Given two integers x and y, return the Hamming distance between them."></a>Given two integers x and y, return the Hamming distance between them.</h2><p>这个用运位算的方法很巧妙<br>设x=1(0001),y=4(0100)<br>xor就是5(0101)<br>xor%2是1<br>xor&gt;&gt;=1 向右移了一位，此时是xor=(0010)<br>xor%2=0<br>xor&gt;&gt;=1 向右移一位，此时是xor=(0001)<br>xor%2=1<br>xor&gt;&gt;=1 向右移一位，此时是xor=(0000)<br>这时返回就是2</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hammingDistance</span>(<span class="params">self, x: <span class="built_in">int</span>, y: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        xor=x^y</span><br><span class="line">        res=<span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> xor!=<span class="number">0</span>:</span><br><span class="line">            res+=xor%<span class="number">2</span></span><br><span class="line">            xor&gt;&gt;=<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;461-Hamming-Distance-easy&quot;&gt;&lt;a href=&quot;#461-Hamming-Distance-easy&quot; class=&quot;headerlink&quot; title=&quot;461. Hamming Distance(easy)&quot;&gt;&lt;/a&gt;461. Hamm</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="bitwise" scheme="http://example.com/tags/bitwise/"/>
    
  </entry>
  
  <entry>
    <title>405. Convert a Number to Hexadecimal(easy)</title>
    <link href="http://example.com/2022/11/06/405/"/>
    <id>http://example.com/2022/11/06/405/</id>
    <published>2022-11-07T02:02:13.000Z</published>
    <updated>2022-11-07T02:16:57.362Z</updated>
    
    <content type="html"><![CDATA[<h1 id="405-Convert-a-Number-to-Hexadecimal-easy"><a href="#405-Convert-a-Number-to-Hexadecimal-easy" class="headerlink" title="405. Convert a Number to Hexadecimal(easy)"></a>405. Convert a Number to Hexadecimal(easy)</h1><h2 id="Given-an-integer-num-return-a-string-representing-its-hexadecimal-representation-For-negative-integers-two’s-complement-method-is-used"><a href="#Given-an-integer-num-return-a-string-representing-its-hexadecimal-representation-For-negative-integers-two’s-complement-method-is-used" class="headerlink" title="Given an integer num, return a string representing its hexadecimal representation. For negative integers, two’s complement method is used."></a>Given an integer num, return a string representing its hexadecimal representation. For negative integers, two’s complement method is used.</h2><h2 id="All-the-letters-in-the-answer-string-should-be-lowercase-characters-and-there-should-not-be-any-leading-zeros-in-the-answer-except-for-the-zero-itself"><a href="#All-the-letters-in-the-answer-string-should-be-lowercase-characters-and-there-should-not-be-any-leading-zeros-in-the-answer-except-for-the-zero-itself" class="headerlink" title="All the letters in the answer string should be lowercase characters, and there should not be any leading zeros in the answer except for the zero itself."></a>All the letters in the answer string should be lowercase characters, and there should not be any leading zeros in the answer except for the zero itself.</h2><h2 id="Note-You-are-not-allowed-to-use-any-built-in-library-method-to-directly-solve-this-problem"><a href="#Note-You-are-not-allowed-to-use-any-built-in-library-method-to-directly-solve-this-problem" class="headerlink" title="Note: You are not allowed to use any built-in library method to directly solve this problem."></a>Note: You are not allowed to use any built-in library method to directly solve this problem.</h2><p>分大于0小于0两种情况，大于0则对16求余，再除。小于0则基于0xffffffff进行计算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">toHex</span>(<span class="params">self, num: <span class="built_in">int</span></span>) -&gt; <span class="built_in">str</span>:</span></span><br><span class="line">        <span class="keyword">if</span> num==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;0&quot;</span></span><br><span class="line">        <span class="keyword">if</span> num&lt;<span class="number">0</span>:</span><br><span class="line">            num=<span class="number">0xffffffff</span>+<span class="number">1</span>+num        </span><br><span class="line">        hex_digits=<span class="string">&quot;0123456789abcdef&quot;</span></span><br><span class="line">        ans=<span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">while</span> num:</span><br><span class="line">            ans+=hex_digits[num%<span class="number">16</span>]</span><br><span class="line">            num//=<span class="number">16</span></span><br><span class="line">        <span class="keyword">return</span> ans[::-<span class="number">1</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;405-Convert-a-Number-to-Hexadecimal-easy&quot;&gt;&lt;a href=&quot;#405-Convert-a-Number-to-Hexadecimal-easy&quot; class=&quot;headerlink&quot; title=&quot;405. Convert</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="stack" scheme="http://example.com/tags/stack/"/>
    
    <category term="string" scheme="http://example.com/tags/string/"/>
    
  </entry>
  
  <entry>
    <title>394. Decode String(medium)</title>
    <link href="http://example.com/2022/11/06/394/"/>
    <id>http://example.com/2022/11/06/394/</id>
    <published>2022-11-06T22:34:23.000Z</published>
    <updated>2022-11-07T02:07:15.252Z</updated>
    
    <content type="html"><![CDATA[<h1 id="394-Decode-String-medium"><a href="#394-Decode-String-medium" class="headerlink" title="394. Decode String(medium)"></a>394. Decode String(medium)</h1><h2 id="Given-an-encoded-string-return-its-decoded-string"><a href="#Given-an-encoded-string-return-its-decoded-string" class="headerlink" title="Given an encoded string, return its decoded string."></a>Given an encoded string, return its decoded string.</h2><h2 id="The-encoding-rule-is-k-encoded-string-where-the-encoded-string-inside-the-square-brackets-is-being-repeated-exactly-k-times-Note-that-k-is-guaranteed-to-be-a-positive-integer"><a href="#The-encoding-rule-is-k-encoded-string-where-the-encoded-string-inside-the-square-brackets-is-being-repeated-exactly-k-times-Note-that-k-is-guaranteed-to-be-a-positive-integer" class="headerlink" title="The encoding rule is: k[encoded_string], where the encoded_string inside the square brackets is being repeated exactly k times. Note that k is guaranteed to be a positive integer."></a>The encoding rule is: k[encoded_string], where the encoded_string inside the square brackets is being repeated exactly k times. Note that k is guaranteed to be a positive integer.</h2><h2 id="You-may-assume-that-the-input-string-is-always-valid-there-are-no-extra-white-spaces-square-brackets-are-well-formed-etc-Furthermore-you-may-assume-that-the-original-data-does-not-contain-any-digits-and-that-digits-are-only-for-those-repeat-numbers-k-For-example-there-will-not-be-input-like-3a-or-2-4"><a href="#You-may-assume-that-the-input-string-is-always-valid-there-are-no-extra-white-spaces-square-brackets-are-well-formed-etc-Furthermore-you-may-assume-that-the-original-data-does-not-contain-any-digits-and-that-digits-are-only-for-those-repeat-numbers-k-For-example-there-will-not-be-input-like-3a-or-2-4" class="headerlink" title="You may assume that the input string is always valid; there are no extra white spaces, square brackets are well-formed, etc. Furthermore, you may assume that the original data does not contain any digits and that digits are only for those repeat numbers, k. For example, there will not be input like 3a or 2[4]."></a>You may assume that the input string is always valid; there are no extra white spaces, square brackets are well-formed, etc. Furthermore, you may assume that the original data does not contain any digits and that digits are only for those repeat numbers, k. For example, there will not be input like 3a or 2[4].</h2><h2 id="The-test-cases-are-generated-so-that-the-length-of-the-output-will-never-exceed-10-5"><a href="#The-test-cases-are-generated-so-that-the-length-of-the-output-will-never-exceed-10-5" class="headerlink" title="The test cases are generated so that the length of the output will never exceed 10^5."></a>The test cases are generated so that the length of the output will never exceed 10^5.</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decodeString</span>(<span class="params">self, s: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span></span><br><span class="line">        stack = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">if</span> c != <span class="string">&quot;]&quot;</span>:</span><br><span class="line">                stack.append(c)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                tmp = <span class="string">&quot;&quot;</span></span><br><span class="line">                <span class="keyword">while</span> stack[-<span class="number">1</span>] != <span class="string">&quot;[&quot;</span>:</span><br><span class="line">                    tmp = stack.pop(-<span class="number">1</span>) + tmp</span><br><span class="line">                stack.pop(-<span class="number">1</span>)</span><br><span class="line">                times = <span class="string">&quot;&quot;</span></span><br><span class="line">                <span class="keyword">while</span> stack <span class="keyword">and</span> stack[-<span class="number">1</span>].isdigit():</span><br><span class="line">                    times = stack.pop(-<span class="number">1</span>) + times</span><br><span class="line">                times = <span class="built_in">int</span>(times)</span><br><span class="line">                </span><br><span class="line">                tmp = <span class="string">&quot;&quot;</span>.join(tmp <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(times))</span><br><span class="line">                <span class="keyword">for</span> t <span class="keyword">in</span> tmp:</span><br><span class="line">                    stack.append(t)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>.join(stack)</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">decodeString</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        Deque&lt;Integer&gt; numStack = <span class="keyword">new</span> ArrayDeque&lt;&gt;();</span><br><span class="line">        Deque&lt;String&gt; strStack = <span class="keyword">new</span> ArrayDeque&lt;&gt;();</span><br><span class="line">        <span class="keyword">char</span>[] chs = s.toCharArray();</span><br><span class="line">        <span class="keyword">int</span> n = chs.length;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(chs[i] - <span class="string">&#x27;0&#x27;</span> &gt;= <span class="number">0</span> &amp;&amp; chs[i] - <span class="string">&#x27;0&#x27;</span> &lt;= <span class="number">9</span>) &#123; <span class="comment">// 遇到数字</span></span><br><span class="line">                <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span>(chs[i] - <span class="string">&#x27;0&#x27;</span> &gt;= <span class="number">0</span> &amp;&amp; chs[i] - <span class="string">&#x27;0&#x27;</span> &lt;= <span class="number">9</span>)&#123; <span class="comment">// 截取数字</span></span><br><span class="line">                    num = num * <span class="number">10</span> + chs[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                numStack.push(num);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(chs[i] == <span class="string">&#x27;[&#x27;</span>) strStack.push(String.valueOf(chs[i])); <span class="comment">// 遇到 &#x27;[&#x27; 推入字符串栈</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(chs[i] == <span class="string">&#x27;]&#x27;</span>)&#123; <span class="comment">// 遇到 &#x27;]&#x27; </span></span><br><span class="line">                StringBuilder curSb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                <span class="keyword">while</span>(!strStack.peek().equals(String.valueOf(<span class="string">&#x27;[&#x27;</span>)))&#123; <span class="comment">// 拼接 &#x27;[&#x27; 之前的字符串</span></span><br><span class="line">                    curSb.insert(<span class="number">0</span>, strStack.pop());</span><br><span class="line">                &#125;</span><br><span class="line">                strStack.pop(); <span class="comment">// 推出 &#x27;[&#x27;</span></span><br><span class="line">                <span class="keyword">int</span> k = numStack.pop(); <span class="comment">// 推出数字</span></span><br><span class="line">                String repeatedStr = repeate(curSb.toString(), k); <span class="comment">// 重复 k 次</span></span><br><span class="line">                strStack.push(repeatedStr); <span class="comment">// 然后推入字符串栈</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> strStack.push(String.valueOf(chs[i]));</span><br><span class="line">        &#125;</span><br><span class="line">        StringBuilder res = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">while</span>(!strStack.isEmpty())&#123;</span><br><span class="line">            res.insert(<span class="number">0</span>, strStack.pop());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res.toString();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">repeate</span><span class="params">(String s, <span class="keyword">int</span> k)</span></span>&#123; <span class="comment">// 倍增拼接 (快速幂思想)</span></span><br><span class="line">        StringBuilder res = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder(s);</span><br><span class="line">        <span class="keyword">while</span>(k &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(k % <span class="number">2</span> == <span class="number">1</span>) res = res.append(sb);</span><br><span class="line">            sb = sb.append(sb);</span><br><span class="line">            k /= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;394-Decode-String-medium&quot;&gt;&lt;a href=&quot;#394-Decode-String-medium&quot; class=&quot;headerlink&quot; title=&quot;394. Decode String(medium)&quot;&gt;&lt;/a&gt;394. Decode </summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="stack" scheme="http://example.com/tags/stack/"/>
    
    <category term="string" scheme="http://example.com/tags/string/"/>
    
  </entry>
  
  <entry>
    <title>434. Number of Segments in a String(easy)</title>
    <link href="http://example.com/2022/11/05/434/"/>
    <id>http://example.com/2022/11/05/434/</id>
    <published>2022-11-05T20:48:00.000Z</published>
    <updated>2022-11-07T02:06:52.476Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Given-a-string-s-return-the-number-of-segments-in-the-string"><a href="#Given-a-string-s-return-the-number-of-segments-in-the-string" class="headerlink" title="Given a string s, return the number of segments in the string."></a>Given a string s, return the number of segments in the string.</h2><h2 id="A-segment-is-defined-to-be-a-contiguous-sequence-of-non-space-characters"><a href="#A-segment-is-defined-to-be-a-contiguous-sequence-of-non-space-characters" class="headerlink" title="A segment is defined to be a contiguous sequence of non-space characters."></a>A segment is defined to be a contiguous sequence of non-space characters.</h2><p>直接用split分割字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">countSegments</span>(<span class="params">self, s: <span class="built_in">str</span></span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(s.split())</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Given-a-string-s-return-the-number-of-segments-in-the-string&quot;&gt;&lt;a href=&quot;#Given-a-string-s-return-the-number-of-segments-in-the-string</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="array" scheme="http://example.com/tags/array/"/>
    
  </entry>
  
  <entry>
    <title>441. Arranging Coins(easy)</title>
    <link href="http://example.com/2022/11/05/441/"/>
    <id>http://example.com/2022/11/05/441/</id>
    <published>2022-11-05T20:44:38.000Z</published>
    <updated>2022-11-07T02:06:00.726Z</updated>
    
    <content type="html"><![CDATA[<h1 id="441-Arranging-Coins-easy"><a href="#441-Arranging-Coins-easy" class="headerlink" title="441. Arranging Coins(easy)"></a>441. Arranging Coins(easy)</h1><h2 id="You-have-n-coins-and-you-want-to-build-a-staircase-with-these-coins-The-staircase-consists-of-k-rows-where-the-ith-row-has-exactly-i-coins-The-last-row-of-the-staircase-may-be-incomplete"><a href="#You-have-n-coins-and-you-want-to-build-a-staircase-with-these-coins-The-staircase-consists-of-k-rows-where-the-ith-row-has-exactly-i-coins-The-last-row-of-the-staircase-may-be-incomplete" class="headerlink" title="You have n coins and you want to build a staircase with these coins. The staircase consists of k rows where the ith row has exactly i coins. The last row of the staircase may be incomplete."></a>You have n coins and you want to build a staircase with these coins. The staircase consists of k rows where the ith row has exactly i coins. The last row of the staircase may be incomplete.</h2><h2 id="Given-the-integer-n-return-the-number-of-complete-rows-of-the-staircase-you-will-build"><a href="#Given-the-integer-n-return-the-number-of-complete-rows-of-the-staircase-you-will-build" class="headerlink" title="Given the integer n, return the number of complete rows of the staircase you will build."></a>Given the integer n, return the number of complete rows of the staircase you will build.</h2><p>这道题就是个等差数列，从1加到i层，然后和n比较大小，所以数学方法解出即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">arrangeCoins</span>(<span class="params">self, n: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">         <span class="keyword">return</span> <span class="built_in">int</span>(sqrt(<span class="number">2</span> * n + <span class="number">0.25</span>) - <span class="number">0.50</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;441-Arranging-Coins-easy&quot;&gt;&lt;a href=&quot;#441-Arranging-Coins-easy&quot; class=&quot;headerlink&quot; title=&quot;441. Arranging Coins(easy)&quot;&gt;&lt;/a&gt;441. Arrangi</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="array" scheme="http://example.com/tags/array/"/>
    
  </entry>
  
  <entry>
    <title>448. Find All Numbers Disappeared in an Array(easy)</title>
    <link href="http://example.com/2022/11/05/448/"/>
    <id>http://example.com/2022/11/05/448/</id>
    <published>2022-11-05T20:31:25.000Z</published>
    <updated>2022-11-05T20:33:48.935Z</updated>
    
    <content type="html"><![CDATA[<h1 id="448-Find-All-Numbers-Disappeared-in-an-Array-easy"><a href="#448-Find-All-Numbers-Disappeared-in-an-Array-easy" class="headerlink" title="448. Find All Numbers Disappeared in an Array(easy)"></a>448. Find All Numbers Disappeared in an Array(easy)</h1><h2 id="Given-an-array-nums-of-n-integers-where-nums-i-is-in-the-range-1-n-return-an-array-of-all-the-integers-in-the-range-1-n-that-do-not-appear-in-nums"><a href="#Given-an-array-nums-of-n-integers-where-nums-i-is-in-the-range-1-n-return-an-array-of-all-the-integers-in-the-range-1-n-that-do-not-appear-in-nums" class="headerlink" title="Given an array nums of n integers where nums[i] is in the range [1, n], return an array of all the integers in the range [1, n] that do not appear in nums."></a>Given an array nums of n integers where nums[i] is in the range [1, n], return an array of all the integers in the range [1, n] that do not appear in nums.</h2><p>这题是找到缺失的数字<br>暴力解法 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findDisappearedNumbers</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span></span><br><span class="line">        n=<span class="built_in">len</span>(nums)</span><br><span class="line">        res=[]</span><br><span class="line">        nums=<span class="built_in">sorted</span>(<span class="built_in">set</span>(nums))</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(nums)&lt;n:</span><br><span class="line">            nums.append(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,n+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> i &gt;<span class="built_in">len</span>(nums):</span><br><span class="line">                res.append(i)</span><br><span class="line">                nums.append(i)</span><br><span class="line">            <span class="keyword">if</span> i!= nums[i-<span class="number">1</span>]:</span><br><span class="line">                res.append(i)</span><br><span class="line">                nums.insert(i-<span class="number">1</span>,i)</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>python enumerate解法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findDisappearedNumbers</span>(<span class="params">self, nums</span>):</span></span><br><span class="line">        res = []</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> nums:</span><br><span class="line">            <span class="keyword">if</span> nums[<span class="built_in">abs</span>(x)-<span class="number">1</span>] &gt; <span class="number">0</span>:</span><br><span class="line">                nums[<span class="built_in">abs</span>(x)-<span class="number">1</span>]*=-<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i, x <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line">            <span class="keyword">if</span> x&gt; <span class="number">0</span>:</span><br><span class="line">                res.append(i+<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;448-Find-All-Numbers-Disappeared-in-an-Array-easy&quot;&gt;&lt;a href=&quot;#448-Find-All-Numbers-Disappeared-in-an-Array-easy&quot; class=&quot;headerlink&quot; t</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="array" scheme="http://example.com/tags/array/"/>
    
    <category term="string" scheme="http://example.com/tags/string/"/>
    
  </entry>
  
</feed>
