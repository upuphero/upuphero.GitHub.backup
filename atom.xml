<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>八角书屋</title>
  
  <subtitle>Engineering House</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-11-18T03:48:00.301Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>leaf</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>222. Count Complete Tree Nodes(medium)</title>
    <link href="http://example.com/2022/11/16/222/"/>
    <id>http://example.com/2022/11/16/222/</id>
    <published>2022-11-17T04:39:29.000Z</published>
    <updated>2022-11-18T03:48:00.301Z</updated>
    
    <content type="html"><![CDATA[<h1 id="222-Count-Complete-Tree-Nodes-medium"><a href="#222-Count-Complete-Tree-Nodes-medium" class="headerlink" title="222. Count Complete Tree Nodes(medium)"></a>222. Count Complete Tree Nodes(medium)</h1><h2 id="Given-the-root-of-a-complete-binary-tree-return-the-number-of-the-nodes-in-the-tree"><a href="#Given-the-root-of-a-complete-binary-tree-return-the-number-of-the-nodes-in-the-tree" class="headerlink" title="Given the root of a complete binary tree, return the number of the nodes in the tree."></a>Given the root of a complete binary tree, return the number of the nodes in the tree.</h2><h2 id="According-to-Wikipedia-every-level-except-possibly-the-last-is-completely-filled-in-a-complete-binary-tree-and-all-nodes-in-the-last-level-are-as-far-left-as-possible-It-can-have-between-1-and-2h-nodes-inclusive-at-the-last-level-h"><a href="#According-to-Wikipedia-every-level-except-possibly-the-last-is-completely-filled-in-a-complete-binary-tree-and-all-nodes-in-the-last-level-are-as-far-left-as-possible-It-can-have-between-1-and-2h-nodes-inclusive-at-the-last-level-h" class="headerlink" title="According to Wikipedia, every level, except possibly the last, is completely filled in a complete binary tree, and all nodes in the last level are as far left as possible. It can have between 1 and 2h nodes inclusive at the last level h."></a>According to Wikipedia, every level, except possibly the last, is completely filled in a complete binary tree, and all nodes in the last level are as far left as possible. It can have between 1 and 2h nodes inclusive at the last level h.</h2><h2 id="Design-an-algorithm-that-runs-in-less-than-O-n-time-complexity"><a href="#Design-an-algorithm-that-runs-in-less-than-O-n-time-complexity" class="headerlink" title="Design an algorithm that runs in less than O(n) time complexity."></a>Design an algorithm that runs in less than O(n) time complexity.</h2><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution:"></a>Solution:</h2><h2 id="wiki"><a href="#wiki" class="headerlink" title="wiki:"></a>wiki:</h2><h4 id="完全二叉树-Complete-Binary-Tree-："><a href="#完全二叉树-Complete-Binary-Tree-：" class="headerlink" title="完全二叉树 (Complete Binary Tree)："></a>完全二叉树 (Complete Binary Tree)：</h4><p>A Complete Binary Tree （CBT) is a binary tree in which every level, except possibly the last, is completely filled, and all nodes are as far left as possible.</p><p>对于一颗二叉树，假设其深度为d（d&gt;1）。除了第d层外，其它各层的节点数目均已达最大值，且第d层所有节点从左向右连续地紧密排列，这样的二叉树被称为完全二叉树；</p><p>换句话说，完全二叉树从根结点到倒数第二层满足完美二叉树，最后一层可以不完全填充，其叶子结点都靠左对齐。</p><h4 id="完美二叉树-Perfect-Binary-Tree-："><a href="#完美二叉树-Perfect-Binary-Tree-：" class="headerlink" title="完美二叉树 (Perfect Binary Tree)："></a>完美二叉树 (Perfect Binary Tree)：</h4><p>A Perfect Binary Tree(PBT) is a tree with all leaf nodes at the same depth. All internal nodes have degree 2.</p><p>二叉树的第i层至多拥有 2^{i-1} 个节点数；深度为k的二叉树至多总共有 {\displaystyle 2^{\begin{aligned}k+1\end{aligned}}-1} 个节点数，而总计拥有节点数匹配的，称为“满二叉树”；</p><h4 id="完满二叉树-Full-Binary-Tree"><a href="#完满二叉树-Full-Binary-Tree" class="headerlink" title="完满二叉树 (Full Binary Tree):"></a>完满二叉树 (Full Binary Tree):</h4><p>A Full Binary Tree (FBT) is a tree in which every node other than the leaves has two children.</p><p>换句话说，所有非叶子结点的度都是2。（只要你有孩子，你就必然是有两个孩子。）</p><p><a href="https://www.cnblogs.com/grandyang/p/4567827.html">思路</a><br>我们还是要来利用一下完全二叉树这个条件，不然感觉对出题者不太尊重。<br>通过上面对完全二叉树跟完美二叉树的定义比较，可以看出二者的关系是，完美二叉树一定是完全二叉树，而完全二叉树不一定是完美二叉树。<br>那么这道题给的完全二叉树就有可能是完美二叉树，若是完美二叉树，节点个数很好求，为2的h次方减1，h为该完美二叉树的高度。若不是的话，只能老老实实的一个一个数结点了。<br>思路是由 root 根结点往下，分别找最靠左边和最靠右边的路径长度，如果长度相等，则证明二叉树最后一层节点是满的，是满二叉树，直接返回节点个数，如果不相等，则节点个数为左子树的节点个数加上右子树的节点个数再加1(根节点)，其中左右子树节点个数的计算可以使用递归来计算，参见代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"># class TreeNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, val=0, left=None, right=None):</span></span><br><span class="line"><span class="comment">#         self.val = val</span></span><br><span class="line"><span class="comment">#         self.left = left</span></span><br><span class="line"><span class="comment">#         self.right = right</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">countNodes</span>(<span class="params">self, root: <span class="type">Optional</span>[TreeNode]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        hLeft=<span class="number">0</span></span><br><span class="line">        hRight=<span class="number">0</span></span><br><span class="line">        pLeft=root</span><br><span class="line">        pRight=root</span><br><span class="line">        <span class="keyword">while</span> pLeft:</span><br><span class="line">            hLeft+=<span class="number">1</span></span><br><span class="line">            pLeft=pLeft.left</span><br><span class="line">        <span class="keyword">while</span> pRight:</span><br><span class="line">            hRight+=<span class="number">1</span></span><br><span class="line">            pRight=pRight.right</span><br><span class="line">        <span class="keyword">if</span> hLeft==hRight:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">pow</span>(<span class="number">2</span>,hLeft)-<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> self.countNodes(root.left)+self.countNodes(root.right)+<span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;222-Count-Complete-Tree-Nodes-medium&quot;&gt;&lt;a href=&quot;#222-Count-Complete-Tree-Nodes-medium&quot; class=&quot;headerlink&quot; title=&quot;222. Count Complete </summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="binary tree" scheme="http://example.com/tags/binary-tree/"/>
    
  </entry>
  
  <entry>
    <title>354. Russian Doll Envelopes(hard)</title>
    <link href="http://example.com/2022/11/16/354/"/>
    <id>http://example.com/2022/11/16/354/</id>
    <published>2022-11-17T04:29:21.000Z</published>
    <updated>2022-11-18T03:48:09.542Z</updated>
    
    <content type="html"><![CDATA[<h1 id="354-Russian-Doll-Envelopes-hard"><a href="#354-Russian-Doll-Envelopes-hard" class="headerlink" title="354. Russian Doll Envelopes(hard)"></a>354. Russian Doll Envelopes(hard)</h1><p>You are given a 2D array of integers envelopes where envelopes[i] = [wi, hi] represents the width and the height of an envelope.</p><p>One envelope can fit into another if and only if both the width and height of one envelope are greater than the other envelope’s width and height.</p><p>Return the maximum number of envelopes you can Russian doll (i.e., put one inside the other).</p><p>Note: You cannot rotate an envelope.</p><p>这道题和300. Longest Increasing Subsequence(medium)属于类似问题，只不过该问题把维度升到二维了，先对宽度 w 进行升序排序，如果遇到 w 相同的情况，则按照高度 h 降序排序；之后把所有的 h 作为一个数组，在这个数组上计算 LIS 的长度就是答案。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxEnvelopes</span>(<span class="params">self, envelopes: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> envelopes:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        n = <span class="built_in">len</span>(envelopes)</span><br><span class="line">        envelopes.sort(key=<span class="keyword">lambda</span> x: (x[<span class="number">0</span>], -x[<span class="number">1</span>]))<span class="comment">#w升序排列，h降序排列</span></span><br><span class="line">        arr=[envelopes[<span class="number">0</span>][<span class="number">1</span>]]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="keyword">if</span> envelopes[i][<span class="number">1</span>]&gt;arr[-<span class="number">1</span>]:</span><br><span class="line">                arr.append(envelopes[i][<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">elif</span> envelopes[i][<span class="number">1</span>]&lt;arr[-<span class="number">1</span>]:</span><br><span class="line">                left,right=<span class="number">0</span>,n-<span class="number">1</span></span><br><span class="line">                <span class="keyword">while</span> left&lt;right:</span><br><span class="line">                    mid=left+(right-left)//<span class="number">2</span> <span class="comment">#这里用mid=(left+right)//2 会超范围</span></span><br><span class="line">                    <span class="keyword">if</span> arr[mid]&gt;=envelopes[i][<span class="number">1</span>]:</span><br><span class="line">                        right=mid</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        left=mid+<span class="number">1</span></span><br><span class="line">                arr[left]=envelopes[i][<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(arr)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;354-Russian-Doll-Envelopes-hard&quot;&gt;&lt;a href=&quot;#354-Russian-Doll-Envelopes-hard&quot; class=&quot;headerlink&quot; title=&quot;354. Russian Doll Envelopes(ha</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="dynamic programming" scheme="http://example.com/tags/dynamic-programming/"/>
    
    <category term="binary search" scheme="http://example.com/tags/binary-search/"/>
    
  </entry>
  
  <entry>
    <title>521. Longest Uncommon Subsequence I(easy)</title>
    <link href="http://example.com/2022/11/16/521/"/>
    <id>http://example.com/2022/11/16/521/</id>
    <published>2022-11-16T21:43:24.000Z</published>
    <updated>2022-11-18T03:28:19.157Z</updated>
    
    <content type="html"><![CDATA[<h1 id="521-Longest-Uncommon-Subsequence-I-easy"><a href="#521-Longest-Uncommon-Subsequence-I-easy" class="headerlink" title="521. Longest Uncommon Subsequence I(easy)"></a>521. Longest Uncommon Subsequence I(easy)</h1><h2 id="Given-two-strings-a-and-b-return-the-length-of-the-longest-uncommon-subsequence-between-a-and-b-If-the-longest-uncommon-subsequence-does-not-exist-return-1"><a href="#Given-two-strings-a-and-b-return-the-length-of-the-longest-uncommon-subsequence-between-a-and-b-If-the-longest-uncommon-subsequence-does-not-exist-return-1" class="headerlink" title="Given two strings a and b, return the length of the longest uncommon subsequence between a and b. If the longest uncommon subsequence does not exist, return -1."></a>Given two strings a and b, return the length of the longest uncommon subsequence between a and b. If the longest uncommon subsequence does not exist, return -1.</h2><h2 id="An-uncommon-subsequence-between-two-strings-is-a-string-that-is-a-subsequence-of-one-but-not-the-other"><a href="#An-uncommon-subsequence-between-two-strings-is-a-string-that-is-a-subsequence-of-one-but-not-the-other" class="headerlink" title="An uncommon subsequence between two strings is a string that is a subsequence of one but not the other."></a>An uncommon subsequence between two strings is a string that is a subsequence of one but not the other.</h2><h2 id="A-subsequence-of-a-string-s-is-a-string-that-can-be-obtained-after-deleting-any-number-of-characters-from-s"><a href="#A-subsequence-of-a-string-s-is-a-string-that-can-be-obtained-after-deleting-any-number-of-characters-from-s" class="headerlink" title="A subsequence of a string s is a string that can be obtained after deleting any number of characters from s."></a>A subsequence of a string s is a string that can be obtained after deleting any number of characters from s.</h2><h2 id="For-example-“abc”-is-a-subsequence-of-“aebdc”-because-you-can-delete-the-underlined-characters-in-“aebdc”-to-get-“abc”-Other-subsequences-of-“aebdc”-include-“aebdc”-“aeb”-and-“”-empty-string"><a href="#For-example-“abc”-is-a-subsequence-of-“aebdc”-because-you-can-delete-the-underlined-characters-in-“aebdc”-to-get-“abc”-Other-subsequences-of-“aebdc”-include-“aebdc”-“aeb”-and-“”-empty-string" class="headerlink" title="For example, “abc” is a subsequence of “aebdc” because you can delete the underlined characters in “aebdc” to get “abc”. Other subsequences of “aebdc” include “aebdc”, “aeb”, and “” (empty string)."></a>For example, “abc” is a subsequence of “aebdc” because you can delete the underlined characters in “aebdc” to get “abc”. Other subsequences of “aebdc” include “aebdc”, “aeb”, and “” (empty string).</h2><p>这道题很唬人啊，我一开始以为是双指针两个字符串不断比较，后来发现，只需要判断一点即可，如果字符串a和b相同，那么返回-1<br>如果不相同，最大的不同子字符串就是最长的那个字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findLUSlength</span>(<span class="params">self, a: <span class="built_in">str</span>, b: <span class="built_in">str</span></span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        <span class="keyword">if</span> a==b:</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">max</span>(<span class="built_in">len</span>(a),<span class="built_in">len</span>(b))</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;521-Longest-Uncommon-Subsequence-I-easy&quot;&gt;&lt;a href=&quot;#521-Longest-Uncommon-Subsequence-I-easy&quot; class=&quot;headerlink&quot; title=&quot;521. Longest U</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="string" scheme="http://example.com/tags/string/"/>
    
  </entry>
  
  <entry>
    <title>520. Detect Capital(easy)</title>
    <link href="http://example.com/2022/11/16/520/"/>
    <id>http://example.com/2022/11/16/520/</id>
    <published>2022-11-16T21:29:16.000Z</published>
    <updated>2022-11-16T21:43:37.277Z</updated>
    
    <content type="html"><![CDATA[<h1 id="520-Detect-Capital-easy"><a href="#520-Detect-Capital-easy" class="headerlink" title="520. Detect Capital(easy)"></a>520. Detect Capital(easy)</h1><p>We define the usage of capitals in a word to be right when one of the following cases holds:</p><p>All letters in this word are capitals, like “USA”.<br>All letters in this word are not capitals, like “leetcode”.<br>Only the first letter in this word is capital, like “Google”.<br>Given a string word, return true if the usage of capitals in it is right.</p><p>分几种情况讨论，然后用到了isupper()和islower()两个函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">detectCapitalUse</span>(<span class="params">self, word: <span class="built_in">str</span></span>) -&gt; <span class="built_in">bool</span>:</span></span><br><span class="line">        n=<span class="built_in">len</span>(word)</span><br><span class="line">        <span class="keyword">if</span> n==<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">elif</span> word.isupper():</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">elif</span> word.islower():</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">elif</span> word[<span class="number">0</span>].isupper():</span><br><span class="line">            <span class="keyword">if</span> word[<span class="number">1</span>:].islower():</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;520-Detect-Capital-easy&quot;&gt;&lt;a href=&quot;#520-Detect-Capital-easy&quot; class=&quot;headerlink&quot; title=&quot;520. Detect Capital(easy)&quot;&gt;&lt;/a&gt;520. Detect Cap</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="string" scheme="http://example.com/tags/string/"/>
    
  </entry>
  
  <entry>
    <title>300. Longest Increasing Subsequence(medium)</title>
    <link href="http://example.com/2022/11/15/300/"/>
    <id>http://example.com/2022/11/15/300/</id>
    <published>2022-11-16T04:26:56.000Z</published>
    <updated>2022-11-17T04:30:11.955Z</updated>
    
    <content type="html"><![CDATA[<h1 id="300-Longest-Increasing-Subsequence-medium"><a href="#300-Longest-Increasing-Subsequence-medium" class="headerlink" title="300. Longest Increasing Subsequence(medium)"></a>300. Longest Increasing Subsequence(medium)</h1><h2 id="Given-an-integer-array-nums-return-the-length-of-the-longest-strictly-increasing-subsequence"><a href="#Given-an-integer-array-nums-return-the-length-of-the-longest-strictly-increasing-subsequence" class="headerlink" title="Given an integer array nums, return the length of the longest strictly increasing subsequence."></a>Given an integer array nums, return the length of the longest strictly increasing subsequence.</h2><p>求最长严格递增子序列的长度。</p><h3 id="官方题解"><a href="#官方题解" class="headerlink" title="官方题解"></a><a href="https://leetcode.cn/problems/longest-increasing-subsequence/solution/zui-chang-shang-sheng-zi-xu-lie-by-leetcode-soluti/">官方题解</a></h3><h4 id="方法一：动态规划"><a href="#方法一：动态规划" class="headerlink" title="方法一：动态规划"></a>方法一：动态规划</h4><p>这个方法会超时</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">lengthOfLIS</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> nums:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        dp = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums)):</span><br><span class="line">            dp.append(<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i):</span><br><span class="line">                <span class="keyword">if</span> nums[i] &gt; nums[j]:</span><br><span class="line">                    dp[i] = <span class="built_in">max</span>(dp[i], dp[j] + <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(dp)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="方法二：贪心-二分查找"><a href="#方法二：贪心-二分查找" class="headerlink" title="方法二：贪心 + 二分查找"></a>方法二：贪心 + 二分查找</h4><p>这道题的方法二，原题解写的不太容易理解，试着在这里再解释一遍：</p><p>无序列表最关键的一句在于： 数组 d[i]表示长度为 i 的最长上升子序列的末尾元素的最小值，即在数组 1,2,3,4,5,6中长度为3的上升子序列可以为 1,2,3也可以为 2,3,4等等但是d[3]=3，即子序列末尾元素最小为3。</p><p>无序列表解释清了数组d的含义之后，我们接着需要证明数组d具有单调性，即证明i&lt;j时，d[i]&lt;d[j]，使用反证法，假设存在k&lt;j时，d[k]&gt;d[j]，但在长度为j，末尾元素为d[j]的子序列A中，将后j-i个元素减掉，可以得到一个长度为i的子序列B，其末尾元素t1必然小于d[j]（因为在子序列A中，t1的位置上在d[j]的后面），而我们假设数组d必须符合表示长度为 i 的最长上升子序列的末尾元素的最小值，此时长度为i的子序列的末尾元素t1&lt;d[j]&lt;d[k]，即t1&lt;d[k]，所以d[k]不是最小的，与题设相矛盾，因此可以证明其单调性</p><p>无序列表证明单调性有两个好处：1.可以使用二分法；2.数组d的长度即为最长子序列的长度；</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;300-Longest-Increasing-Subsequence-medium&quot;&gt;&lt;a href=&quot;#300-Longest-Increasing-Subsequence-medium&quot; class=&quot;headerlink&quot; title=&quot;300. Longe</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="dynamic programming" scheme="http://example.com/tags/dynamic-programming/"/>
    
    <category term="binary search" scheme="http://example.com/tags/binary-search/"/>
    
  </entry>
  
  <entry>
    <title>501. Find Mode in Binary Search Tree(easy)</title>
    <link href="http://example.com/2022/11/15/501/"/>
    <id>http://example.com/2022/11/15/501/</id>
    <published>2022-11-16T03:57:10.000Z</published>
    <updated>2022-11-16T03:58:29.596Z</updated>
    
    <content type="html"><![CDATA[<h1 id="501-Find-Mode-in-Binary-Search-Tree-easy"><a href="#501-Find-Mode-in-Binary-Search-Tree-easy" class="headerlink" title="501. Find Mode in Binary Search Tree(easy)"></a>501. Find Mode in Binary Search Tree(easy)</h1><h2 id="Given-the-root-of-a-binary-search-tree-BST-with-duplicates-return-all-the-mode-s-i-e-the-most-frequently-occurred-element-in-it"><a href="#Given-the-root-of-a-binary-search-tree-BST-with-duplicates-return-all-the-mode-s-i-e-the-most-frequently-occurred-element-in-it" class="headerlink" title="Given the root of a binary search tree (BST) with duplicates, return all the mode(s) (i.e., the most frequently occurred element) in it."></a>Given the root of a binary search tree (BST) with duplicates, return all the mode(s) (i.e., the most frequently occurred element) in it.</h2><h2 id="If-the-tree-has-more-than-one-mode-return-them-in-any-order"><a href="#If-the-tree-has-more-than-one-mode-return-them-in-any-order" class="headerlink" title="If the tree has more than one mode, return them in any order."></a>If the tree has more than one mode, return them in any order.</h2><p>Assume a BST is defined as follows:</p><p>The left subtree of a node contains only nodes with keys less than or equal to the node’s key.<br>The right subtree of a node contains only nodes with keys greater than or equal to the node’s key.<br>Both the left and right subtrees must also be binary search trees.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"># class TreeNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, val=0, left=None, right=None):</span></span><br><span class="line"><span class="comment">#         self.val = val</span></span><br><span class="line"><span class="comment">#         self.left = left</span></span><br><span class="line"><span class="comment">#         self.right = right</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findMode</span>(<span class="params">self, root: <span class="type">Optional</span>[TreeNode]</span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span></span><br><span class="line">        counter= defaultdict(<span class="built_in">int</span>)</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">dfs</span>(<span class="params">root</span>):</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> root:</span><br><span class="line">                <span class="keyword">return</span> </span><br><span class="line">            counter[root.val]+=<span class="number">1</span></span><br><span class="line">            dfs(root.left)</span><br><span class="line">            dfs(root.right)</span><br><span class="line">        dfs(root)</span><br><span class="line">        max_val=<span class="built_in">max</span>(counter.values())</span><br><span class="line">        <span class="keyword">return</span> [i <span class="keyword">for</span> i <span class="keyword">in</span> counter <span class="keyword">if</span> counter[i]==max_val]</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;501-Find-Mode-in-Binary-Search-Tree-easy&quot;&gt;&lt;a href=&quot;#501-Find-Mode-in-Binary-Search-Tree-easy&quot; class=&quot;headerlink&quot; title=&quot;501. Find Mo</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="DFS" scheme="http://example.com/tags/DFS/"/>
    
    <category term="binary-tree" scheme="http://example.com/tags/binary-tree/"/>
    
  </entry>
  
  <entry>
    <title>506. Relative Ranks(easy)</title>
    <link href="http://example.com/2022/11/15/506/"/>
    <id>http://example.com/2022/11/15/506/</id>
    <published>2022-11-16T03:51:28.000Z</published>
    <updated>2022-11-16T03:52:55.338Z</updated>
    
    <content type="html"><![CDATA[<h1 id="506-Relative-Ranks-easy"><a href="#506-Relative-Ranks-easy" class="headerlink" title="506. Relative Ranks(easy)"></a>506. Relative Ranks(easy)</h1><h2 id="You-are-given-an-integer-array-score-of-size-n-where-score-i-is-the-score-of-the-ith-athlete-in-a-competition-All-the-scores-are-guaranteed-to-be-unique"><a href="#You-are-given-an-integer-array-score-of-size-n-where-score-i-is-the-score-of-the-ith-athlete-in-a-competition-All-the-scores-are-guaranteed-to-be-unique" class="headerlink" title="You are given an integer array score of size n, where score[i] is the score of the ith athlete in a competition. All the scores are guaranteed to be unique."></a>You are given an integer array score of size n, where score[i] is the score of the ith athlete in a competition. All the scores are guaranteed to be unique.</h2><h2 id="The-athletes-are-placed-based-on-their-scores-where-the-1st-place-athlete-has-the-highest-score-the-2nd-place-athlete-has-the-2nd-highest-score-and-so-on-The-placement-of-each-athlete-determines-their-rank"><a href="#The-athletes-are-placed-based-on-their-scores-where-the-1st-place-athlete-has-the-highest-score-the-2nd-place-athlete-has-the-2nd-highest-score-and-so-on-The-placement-of-each-athlete-determines-their-rank" class="headerlink" title="The athletes are placed based on their scores, where the 1st place athlete has the highest score, the 2nd place athlete has the 2nd highest score, and so on. The placement of each athlete determines their rank:"></a>The athletes are placed based on their scores, where the 1st place athlete has the highest score, the 2nd place athlete has the 2nd highest score, and so on. The placement of each athlete determines their rank:</h2><p>The 1st place athlete’s rank is “Gold Medal”.<br>The 2nd place athlete’s rank is “Silver Medal”.<br>The 3rd place athlete’s rank is “Bronze Medal”.<br>For the 4th place to the nth place athlete, their rank is their placement number (i.e., the xth place athlete’s rank is “x”).<br>Return an array answer of size n where answer[i] is the rank of the ith athlete.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findRelativeRanks</span>(<span class="params">self, score: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="type">List</span>[<span class="built_in">str</span>]:</span></span><br><span class="line">        nums=<span class="built_in">sorted</span>(score)</span><br><span class="line"></span><br><span class="line">        res=[]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(score)):</span><br><span class="line">            <span class="keyword">if</span> nums.index(score[i])==<span class="built_in">len</span>(score)-<span class="number">1</span>:</span><br><span class="line">                res.append(<span class="string">&#x27;Gold Medal&#x27;</span>)</span><br><span class="line">            <span class="keyword">elif</span> nums.index(score[i])==<span class="built_in">len</span>(score)-<span class="number">2</span>:</span><br><span class="line">                res.append(<span class="string">&#x27;Silver Medal&#x27;</span>)</span><br><span class="line">            <span class="keyword">elif</span> nums.index(score[i])==<span class="built_in">len</span>(score)-<span class="number">3</span>:</span><br><span class="line">                res.append(<span class="string">&#x27;Bronze Medal&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                res.append(<span class="built_in">str</span>(<span class="built_in">len</span>(nums)-nums.index(score[i])))</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;506-Relative-Ranks-easy&quot;&gt;&lt;a href=&quot;#506-Relative-Ranks-easy&quot; class=&quot;headerlink&quot; title=&quot;506. Relative Ranks(easy)&quot;&gt;&lt;/a&gt;506. Relative R</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="array" scheme="http://example.com/tags/array/"/>
    
  </entry>
  
  <entry>
    <title>507. Perfect Number(easy)</title>
    <link href="http://example.com/2022/11/15/507/"/>
    <id>http://example.com/2022/11/15/507/</id>
    <published>2022-11-15T22:59:43.000Z</published>
    <updated>2022-11-15T23:03:55.405Z</updated>
    
    <content type="html"><![CDATA[<p>A perfect number is a positive integer that is equal to the sum of its positive divisors, excluding the number itself. A divisor of an integer x is an integer that can divide x evenly.</p><p>Given an integer n, return true if n is a perfect number, otherwise return false.</p><p>所有的余数之和等于num本身</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkPerfectNumber</span>(<span class="params">self, num: <span class="built_in">int</span></span>) -&gt; <span class="built_in">bool</span>:</span></span><br><span class="line">        res=[]</span><br><span class="line">        x=sqrt(num)</span><br><span class="line">        <span class="keyword">if</span> num==<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">int</span>(x)+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> num%i==<span class="number">0</span>:</span><br><span class="line">                res.append(i)</span><br><span class="line">                <span class="keyword">if</span> i!=<span class="number">1</span>:</span><br><span class="line">                    res.append(num//i)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sum</span>(res)==num</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;A perfect number is a positive integer that is equal to the sum of its positive divisors, excluding the number itself. A divisor of an in</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="math" scheme="http://example.com/tags/math/"/>
    
  </entry>
  
  <entry>
    <title>504. Base 7(easy)</title>
    <link href="http://example.com/2022/11/15/504/"/>
    <id>http://example.com/2022/11/15/504/</id>
    <published>2022-11-15T22:46:59.000Z</published>
    <updated>2022-11-15T23:03:39.964Z</updated>
    
    <content type="html"><![CDATA[<h1 id="504-Base-7-easy"><a href="#504-Base-7-easy" class="headerlink" title="504. Base 7(easy)"></a>504. Base 7(easy)</h1><h2 id="Given-an-integer-num-return-a-string-of-its-base-7-representation"><a href="#Given-an-integer-num-return-a-string-of-its-base-7-representation" class="headerlink" title="Given an integer num, return a string of its base 7 representation."></a>Given an integer num, return a string of its base 7 representation.</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">convertToBase7</span>(<span class="params">self, num: <span class="built_in">int</span></span>) -&gt; <span class="built_in">str</span>:</span></span><br><span class="line">        res=<span class="built_in">list</span>()</span><br><span class="line">        x=num</span><br><span class="line">        num=<span class="built_in">abs</span>(num)</span><br><span class="line">        <span class="keyword">if</span> num==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;0&quot;</span></span><br><span class="line">        <span class="keyword">while</span> num!=<span class="number">0</span>:</span><br><span class="line">            carry=num%<span class="number">7</span></span><br><span class="line">            num=(num-carry)//<span class="number">7</span></span><br><span class="line">            res.append(carry)</span><br><span class="line">        res=res[::-<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> x&gt;<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>.join(<span class="built_in">map</span>(<span class="built_in">str</span>,res))</span><br><span class="line">        <span class="keyword">elif</span> x&lt;<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;-&quot;</span>+<span class="string">&quot;&quot;</span>.join(<span class="built_in">map</span>(<span class="built_in">str</span>,res))</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;504-Base-7-easy&quot;&gt;&lt;a href=&quot;#504-Base-7-easy&quot; class=&quot;headerlink&quot; title=&quot;504. Base 7(easy)&quot;&gt;&lt;/a&gt;504. Base 7(easy)&lt;/h1&gt;&lt;h2 id=&quot;Given-an-</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="string" scheme="http://example.com/tags/string/"/>
    
  </entry>
  
  <entry>
    <title>500. Keyboard Row(easy)</title>
    <link href="http://example.com/2022/11/15/500/"/>
    <id>http://example.com/2022/11/15/500/</id>
    <published>2022-11-15T22:30:21.000Z</published>
    <updated>2022-11-15T23:03:10.281Z</updated>
    
    <content type="html"><![CDATA[<h1 id="500-Keyboard-Row-easy"><a href="#500-Keyboard-Row-easy" class="headerlink" title="500. Keyboard Row(easy)"></a>500. Keyboard Row(easy)</h1><p>Given an array of strings words, return the words that can be typed using letters of the alphabet on only one row of American keyboard like the image below.</p><p>In the American keyboard:</p><p>the first row consists of the characters “qwertyuiop”,<br>the second row consists of the characters “asdfghjkl”, and<br>the third row consists of the characters “zxcvbnm”.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findWords</span>(<span class="params">self, words: <span class="type">List</span>[<span class="built_in">str</span>]</span>) -&gt; <span class="type">List</span>[<span class="built_in">str</span>]:</span></span><br><span class="line">        s1 = <span class="string">&quot;qwertyuiop&quot;</span></span><br><span class="line">        s2 = <span class="string">&quot;asdfghjkl&quot;</span></span><br><span class="line">        s3 = <span class="string">&quot;zxcvbnm&quot;</span></span><br><span class="line">        res = []</span><br><span class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">            cnt1 = cnt2 = cnt3 = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">list</span>(word.lower()):</span><br><span class="line">                <span class="keyword">if</span> c <span class="keyword">in</span> s1: cnt1 += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> c <span class="keyword">in</span> s2: cnt2 += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> c <span class="keyword">in</span> s3: cnt3 += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">len</span>(word) == cnt1) <span class="keyword">or</span> (<span class="built_in">len</span>(word) == cnt2) <span class="keyword">or</span> (<span class="built_in">len</span>(word) == cnt3): </span><br><span class="line">                res.append(word)</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;500-Keyboard-Row-easy&quot;&gt;&lt;a href=&quot;#500-Keyboard-Row-easy&quot; class=&quot;headerlink&quot; title=&quot;500. Keyboard Row(easy)&quot;&gt;&lt;/a&gt;500. Keyboard Row(eas</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="string" scheme="http://example.com/tags/string/"/>
    
  </entry>
  
  <entry>
    <title>482. License Key Formatting(easy)</title>
    <link href="http://example.com/2022/11/15/482/"/>
    <id>http://example.com/2022/11/15/482/</id>
    <published>2022-11-15T22:06:12.000Z</published>
    <updated>2022-11-15T23:04:28.249Z</updated>
    
    <content type="html"><![CDATA[<h1 id="482-License-Key-Formatting-easy"><a href="#482-License-Key-Formatting-easy" class="headerlink" title="482. License Key Formatting(easy)"></a>482. License Key Formatting(easy)</h1><h2 id="You-are-given-a-license-key-represented-as-a-string-s-that-consists-of-only-alphanumeric-characters-and-dashes-The-string-is-separated-into-n-1-groups-by-n-dashes-You-are-also-given-an-integer-k"><a href="#You-are-given-a-license-key-represented-as-a-string-s-that-consists-of-only-alphanumeric-characters-and-dashes-The-string-is-separated-into-n-1-groups-by-n-dashes-You-are-also-given-an-integer-k" class="headerlink" title="You are given a license key represented as a string s that consists of only alphanumeric characters and dashes. The string is separated into n + 1 groups by n dashes. You are also given an integer k."></a>You are given a license key represented as a string s that consists of only alphanumeric characters and dashes. The string is separated into n + 1 groups by n dashes. You are also given an integer k.</h2><h2 id="We-want-to-reformat-the-string-s-such-that-each-group-contains-exactly-k-characters-except-for-the-first-group-which-could-be-shorter-than-k-but-still-must-contain-at-least-one-character-Furthermore-there-must-be-a-dash-inserted-between-two-groups-and-you-should-convert-all-lowercase-letters-to-uppercase"><a href="#We-want-to-reformat-the-string-s-such-that-each-group-contains-exactly-k-characters-except-for-the-first-group-which-could-be-shorter-than-k-but-still-must-contain-at-least-one-character-Furthermore-there-must-be-a-dash-inserted-between-two-groups-and-you-should-convert-all-lowercase-letters-to-uppercase" class="headerlink" title="We want to reformat the string s such that each group contains exactly k characters, except for the first group, which could be shorter than k but still must contain at least one character. Furthermore, there must be a dash inserted between two groups, and you should convert all lowercase letters to uppercase."></a>We want to reformat the string s such that each group contains exactly k characters, except for the first group, which could be shorter than k but still must contain at least one character. Furthermore, there must be a dash inserted between two groups, and you should convert all lowercase letters to uppercase.</h2><h2 id="Return-the-reformatted-license-key"><a href="#Return-the-reformatted-license-key" class="headerlink" title="Return the reformatted license key."></a>Return the reformatted license key.</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input: s = &quot;5F3Z-2e-9-w&quot;, k = 4</span><br><span class="line">Output: &quot;5F3Z-2E9W&quot;</span><br><span class="line">Explanation: The string s has been split into two parts, each part has 4 characters.</span><br><span class="line">Note that the two extra dashes are not needed and can be removed.</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">licenseKeyFormatting</span>(<span class="params">self, s: <span class="built_in">str</span>, k: <span class="built_in">int</span></span>) -&gt; <span class="built_in">str</span>:</span></span><br><span class="line">        ans = <span class="built_in">list</span>()</span><br><span class="line">        cnt = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s) - <span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> s[i] != <span class="string">&quot;-&quot;</span>:</span><br><span class="line">                ans.append(s[i].upper())</span><br><span class="line">                cnt += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> cnt % k == <span class="number">0</span>:</span><br><span class="line">                    ans.append(<span class="string">&quot;-&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> ans <span class="keyword">and</span> ans[-<span class="number">1</span>] == <span class="string">&quot;-&quot;</span>:</span><br><span class="line">            ans.pop()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>.join(ans[::-<span class="number">1</span>])</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;482-License-Key-Formatting-easy&quot;&gt;&lt;a href=&quot;#482-License-Key-Formatting-easy&quot; class=&quot;headerlink&quot; title=&quot;482. License Key Formatting(ea</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="maths" scheme="http://example.com/tags/maths/"/>
    
  </entry>
  
  <entry>
    <title>495. Teemo Attacking(easy)</title>
    <link href="http://example.com/2022/11/15/495/"/>
    <id>http://example.com/2022/11/15/495/</id>
    <published>2022-11-15T21:44:23.000Z</published>
    <updated>2022-11-15T23:02:55.479Z</updated>
    
    <content type="html"><![CDATA[<h1 id="495-Teemo-Attacking-easy"><a href="#495-Teemo-Attacking-easy" class="headerlink" title="495. Teemo Attacking(easy)"></a>495. Teemo Attacking(easy)</h1><h2 id="Our-hero-Teemo-is-attacking-an-enemy-Ashe-with-poison-attacks-When-Teemo-attacks-Ashe-Ashe-gets-poisoned-for-a-exactly-duration-seconds-More-formally-an-attack-at-second-t-will-mean-Ashe-is-poisoned-during-the-inclusive-time-interval-t-t-duration-1-If-Teemo-attacks-again-before-the-poison-effect-ends-the-timer-for-it-is-reset-and-the-poison-effect-will-end-duration-seconds-after-the-new-attack"><a href="#Our-hero-Teemo-is-attacking-an-enemy-Ashe-with-poison-attacks-When-Teemo-attacks-Ashe-Ashe-gets-poisoned-for-a-exactly-duration-seconds-More-formally-an-attack-at-second-t-will-mean-Ashe-is-poisoned-during-the-inclusive-time-interval-t-t-duration-1-If-Teemo-attacks-again-before-the-poison-effect-ends-the-timer-for-it-is-reset-and-the-poison-effect-will-end-duration-seconds-after-the-new-attack" class="headerlink" title="Our hero Teemo is attacking an enemy Ashe with poison attacks! When Teemo attacks Ashe, Ashe gets poisoned for a exactly duration seconds. More formally, an attack at second t will mean Ashe is poisoned during the inclusive time interval [t, t + duration - 1]. If Teemo attacks again before the poison effect ends, the timer for it is reset, and the poison effect will end duration seconds after the new attack."></a>Our hero Teemo is attacking an enemy Ashe with poison attacks! When Teemo attacks Ashe, Ashe gets poisoned for a exactly duration seconds. More formally, an attack at second t will mean Ashe is poisoned during the inclusive time interval [t, t + duration - 1]. If Teemo attacks again before the poison effect ends, the timer for it is reset, and the poison effect will end duration seconds after the new attack.</h2><h2 id="You-are-given-a-non-decreasing-integer-array-timeSeries-where-timeSeries-i-denotes-that-Teemo-attacks-Ashe-at-second-timeSeries-i-and-an-integer-duration"><a href="#You-are-given-a-non-decreasing-integer-array-timeSeries-where-timeSeries-i-denotes-that-Teemo-attacks-Ashe-at-second-timeSeries-i-and-an-integer-duration" class="headerlink" title="You are given a non-decreasing integer array timeSeries, where timeSeries[i] denotes that Teemo attacks Ashe at second timeSeries[i], and an integer duration."></a>You are given a non-decreasing integer array timeSeries, where timeSeries[i] denotes that Teemo attacks Ashe at second timeSeries[i], and an integer duration.</h2><h2 id="Return-the-total-number-of-seconds-that-Ashe-is-poisoned"><a href="#Return-the-total-number-of-seconds-that-Ashe-is-poisoned" class="headerlink" title="Return the total number of seconds that Ashe is poisoned."></a>Return the total number of seconds that Ashe is poisoned.</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findPoisonedDuration</span>(<span class="params">self, timeSeries: <span class="type">List</span>[<span class="built_in">int</span>], duration: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        ans=duration*<span class="built_in">len</span>(timeSeries)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(timeSeries)):</span><br><span class="line">            ans-=<span class="built_in">max</span>(<span class="number">0</span>,duration-(timeSeries[i]-timeSeries[i-<span class="number">1</span>]))</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;495-Teemo-Attacking-easy&quot;&gt;&lt;a href=&quot;#495-Teemo-Attacking-easy&quot; class=&quot;headerlink&quot; title=&quot;495. Teemo Attacking(easy)&quot;&gt;&lt;/a&gt;495. Teemo A</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="maths" scheme="http://example.com/tags/maths/"/>
    
  </entry>
  
  <entry>
    <title>492. Construct the Rectangle(easy)</title>
    <link href="http://example.com/2022/11/15/492/"/>
    <id>http://example.com/2022/11/15/492/</id>
    <published>2022-11-15T21:25:16.000Z</published>
    <updated>2022-11-15T23:02:42.767Z</updated>
    
    <content type="html"><![CDATA[<h1 id="492-Construct-the-Rectangle-easy"><a href="#492-Construct-the-Rectangle-easy" class="headerlink" title="492. Construct the Rectangle(easy)"></a>492. Construct the Rectangle(easy)</h1><h2 id="A-web-developer-needs-to-know-how-to-design-a-web-page’s-size-So-given-a-specific-rectangular-web-page’s-area-your-job-by-now-is-to-design-a-rectangular-web-page-whose-length-L-and-width-W-satisfy-the-following-requirements"><a href="#A-web-developer-needs-to-know-how-to-design-a-web-page’s-size-So-given-a-specific-rectangular-web-page’s-area-your-job-by-now-is-to-design-a-rectangular-web-page-whose-length-L-and-width-W-satisfy-the-following-requirements" class="headerlink" title="A web developer needs to know how to design a web page’s size. So, given a specific rectangular web page’s area, your job by now is to design a rectangular web page, whose length L and width W satisfy the following requirements:"></a>A web developer needs to know how to design a web page’s size. So, given a specific rectangular web page’s area, your job by now is to design a rectangular web page, whose length L and width W satisfy the following requirements:</h2><h2 id="The-area-of-the-rectangular-web-page-you-designed-must-equal-to-the-given-target-area"><a href="#The-area-of-the-rectangular-web-page-you-designed-must-equal-to-the-given-target-area" class="headerlink" title="The area of the rectangular web page you designed must equal to the given target area."></a>The area of the rectangular web page you designed must equal to the given target area.</h2><h2 id="The-width-W-should-not-be-larger-than-the-length-L-which-means-L-gt-W"><a href="#The-width-W-should-not-be-larger-than-the-length-L-which-means-L-gt-W" class="headerlink" title="The width W should not be larger than the length L, which means L &gt;= W."></a>The width W should not be larger than the length L, which means L &gt;= W.</h2><h2 id="The-difference-between-length-L-and-width-W-should-be-as-small-as-possible"><a href="#The-difference-between-length-L-and-width-W-should-be-as-small-as-possible" class="headerlink" title="The difference between length L and width W should be as small as possible."></a>The difference between length L and width W should be as small as possible.</h2><h2 id="Return-an-array-L-W-where-L-and-W-are-the-length-and-width-of-the-web-page-you-designed-in-sequence"><a href="#Return-an-array-L-W-where-L-and-W-are-the-length-and-width-of-the-web-page-you-designed-in-sequence" class="headerlink" title="Return an array [L, W] where L and W are the length and width of the web page you designed in sequence."></a>Return an array [L, W] where L and W are the length and width of the web page you designed in sequence.</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input: area = 4</span><br><span class="line">Output: [2,2]</span><br><span class="line">Explanation: The target area is 4, and all the possible ways to construct it are [1,4], [2,2], [4,1]. </span><br><span class="line">But according to requirement 2, [1,4] is illegal; according to requirement 3,  [4,1] is not optimal compared to [2,2]. So the length L is 2, and the width W is 2.</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">constructRectangle</span>(<span class="params">self, area: <span class="built_in">int</span></span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">int</span>(area**<span class="number">0.5</span>),<span class="number">0</span>,-<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> area%i==<span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> [area//i,i]</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;492-Construct-the-Rectangle-easy&quot;&gt;&lt;a href=&quot;#492-Construct-the-Rectangle-easy&quot; class=&quot;headerlink&quot; title=&quot;492. Construct the Rectangle</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="maths" scheme="http://example.com/tags/maths/"/>
    
  </entry>
  
  <entry>
    <title>476. Number Complement(easy)</title>
    <link href="http://example.com/2022/11/15/476/"/>
    <id>http://example.com/2022/11/15/476/</id>
    <published>2022-11-15T21:02:51.000Z</published>
    <updated>2022-11-15T21:08:39.448Z</updated>
    
    <content type="html"><![CDATA[<h1 id="476-Number-Complement-easy"><a href="#476-Number-Complement-easy" class="headerlink" title="476. Number Complement(easy)"></a>476. Number Complement(easy)</h1><h2 id="The-complement-of-an-integer-is-the-integer-you-get-when-you-flip-all-the-0’s-to-1’s-and-all-the-1’s-to-0’s-in-its-binary-representation"><a href="#The-complement-of-an-integer-is-the-integer-you-get-when-you-flip-all-the-0’s-to-1’s-and-all-the-1’s-to-0’s-in-its-binary-representation" class="headerlink" title="The complement of an integer is the integer you get when you flip all the 0’s to 1’s and all the 1’s to 0’s in its binary representation."></a>The complement of an integer is the integer you get when you flip all the 0’s to 1’s and all the 1’s to 0’s in its binary representation.</h2><h2 id="For-example-The-integer-5-is-“101”-in-binary-and-its-complement-is-“010”-which-is-the-integer-2"><a href="#For-example-The-integer-5-is-“101”-in-binary-and-its-complement-is-“010”-which-is-the-integer-2" class="headerlink" title="For example, The integer 5 is “101” in binary and its complement is “010” which is the integer 2."></a>For example, The integer 5 is “101” in binary and its complement is “010” which is the integer 2.</h2><h2 id="Given-an-integer-num-return-its-complement"><a href="#Given-an-integer-num-return-its-complement" class="headerlink" title="Given an integer num, return its complement."></a>Given an integer num, return its complement.</h2><p>今天这道题乍看之下很简单，直接跟二进制全 1 的数异或即可：</p><p>比如：给定数字为 5 （101），跟 111 进行异或运算，结果为 010。</p><p>实则不然，因为计算机在存储 5 这个数字的时候是按照 32 位来进行存储的，应该为 00000000000000000000000000000101（下简写为00..00101），所以，跟 32 位全是 1 的数字异或之后，高位的那些 0 也会全部变成 1，最终的结果为 11111111111111111111111111111010，与题目给定的结果将不一致。</p><p>所以，我们需要换一种思路。</p><p>其实，我们只需要找到最高位的 1，将最高位的 1 所在的位置及比它低的位置全变成 1，再异或即可。</p><p>比如，给定数字为 5（00..00101），最高位的 1 是第三位，我们将第三位及比它低的位置全变成 1，即 00..00111，再进行异或就得到了 010 这个结果。</p><p>那么，如何找到最高位的 1，又如何将其及比它低的位置全变成 1 呢？</p><p>关于第一个问题：我们这里介绍一种非常简单高效的方式，每次找到最低位（最右边）的 1 并把它打掉（变成 0），最终找到最高位的 1。</p><p>关于第二个问题：我们只需要将最高位的 1 左移一位，再减 1，就可以得到最高位为 1 的位置及比它低的位置全是 1 的数字了。</p><p>比如，给定数字为 5（00..00101），我们第一次找到的 1 是 00.00001，把它打掉后数字变为 00..00100，然后，找到的第二个 1 是 00..00100，把这个 1 再打掉后数字变为 00..00000，所以，我们要找的最高位的 1 就是 00..00100 这个数字，把这个数字左移一位变成00..01000，再减 1 得到 00..00111，最后，再与原数字异或，得到 00..00010，完事儿。</p><p>关于溢出：题目约定了给定的数字为大于或等于 1 的 32 位数字，所以，32 位的最高位不会为 1，因此，不会溢出 。</p><p>作者：tong-zhu<br>链接：<a href="https://leetcode.cn/problems/number-complement/solution/tong-ge-lai-shua-ti-la-jian-dan-gao-xiao-k0p9/">https://leetcode.cn/problems/number-complement/solution/tong-ge-lai-shua-ti-la-jian-dan-gao-xiao-k0p9/</a><br>来源：力扣（LeetCode）<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findComplement</span>(<span class="params">self, num: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        highbit=<span class="number">1</span></span><br><span class="line">        x=num</span><br><span class="line">        <span class="keyword">while</span> x!=<span class="number">0</span>:</span><br><span class="line">            highbit=x&amp;(-x)</span><br><span class="line">            x=x&amp;(x-<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> num^((highbit&lt;&lt;<span class="number">1</span>)-<span class="number">1</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;476-Number-Complement-easy&quot;&gt;&lt;a href=&quot;#476-Number-Complement-easy&quot; class=&quot;headerlink&quot; title=&quot;476. Number Complement(easy)&quot;&gt;&lt;/a&gt;476. N</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="bitmask" scheme="http://example.com/tags/bitmask/"/>
    
  </entry>
  
  <entry>
    <title>796. Rotate String(easy)</title>
    <link href="http://example.com/2022/11/14/796/"/>
    <id>http://example.com/2022/11/14/796/</id>
    <published>2022-11-15T04:20:55.000Z</published>
    <updated>2022-11-15T04:22:30.754Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Given-two-strings-s-and-goal-return-true-if-and-only-if-s-can-become-goal-after-some-number-of-shifts-on-s"><a href="#Given-two-strings-s-and-goal-return-true-if-and-only-if-s-can-become-goal-after-some-number-of-shifts-on-s" class="headerlink" title="Given two strings s and goal, return true if and only if s can become goal after some number of shifts on s."></a>Given two strings s and goal, return true if and only if s can become goal after some number of shifts on s.</h2><h2 id="A-shift-on-s-consists-of-moving-the-leftmost-character-of-s-to-the-rightmost-position"><a href="#A-shift-on-s-consists-of-moving-the-leftmost-character-of-s-to-the-rightmost-position" class="headerlink" title="A shift on s consists of moving the leftmost character of s to the rightmost position."></a>A shift on s consists of moving the leftmost character of s to the rightmost position.</h2><h2 id="For-example-if-s-“abcde”-then-it-will-be-“bcdea”-after-one-shift"><a href="#For-example-if-s-“abcde”-then-it-will-be-“bcdea”-after-one-shift" class="headerlink" title="For example, if s = “abcde”, then it will be “bcdea” after one shift."></a>For example, if s = “abcde”, then it will be “bcdea” after one shift.</h2><p>可以用子字符串的方式，判断goal在不在两个s连在一起的字符串里</p><pre><code class="python">class Solution:    def rotateString(self, s: str, goal: str) -&gt; bool:        if len(s)!=len(goal):            return False        else:            if goal in s+s:                return True            else:                return False</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Given-two-strings-s-and-goal-return-true-if-and-only-if-s-can-become-goal-after-some-number-of-shifts-on-s&quot;&gt;&lt;a href=&quot;#Given-two-stri</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="string" scheme="http://example.com/tags/string/"/>
    
    <category term="substring" scheme="http://example.com/tags/substring/"/>
    
  </entry>
  
  <entry>
    <title>128. Longest Consecutive Sequence(medium)</title>
    <link href="http://example.com/2022/11/14/128/"/>
    <id>http://example.com/2022/11/14/128/</id>
    <published>2022-11-15T03:44:55.000Z</published>
    <updated>2022-11-15T04:16:24.742Z</updated>
    
    <content type="html"><![CDATA[<h1 id="128-Longest-Consecutive-Sequence-medium"><a href="#128-Longest-Consecutive-Sequence-medium" class="headerlink" title="128. Longest Consecutive Sequence(medium)"></a>128. Longest Consecutive Sequence(medium)</h1><h2 id="Given-an-unsorted-array-of-integers-nums-return-the-length-of-the-longest-consecutive-elements-sequence"><a href="#Given-an-unsorted-array-of-integers-nums-return-the-length-of-the-longest-consecutive-elements-sequence" class="headerlink" title="Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence."></a>Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.</h2><h2 id="You-must-write-an-algorithm-that-runs-in-O-n-time"><a href="#You-must-write-an-algorithm-that-runs-in-O-n-time" class="headerlink" title="You must write an algorithm that runs in O(n) time."></a>You must write an algorithm that runs in O(n) time.</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [100,4,200,1,3,2]</span><br><span class="line">Output: 4</span><br><span class="line">Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.</span><br></pre></td></tr></table></figure><p>先对nums取set后排序(如果有相同的数字，是可以直接跳过，而且计数也不会停的)，然后不断计数连续的数字 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestConsecutive</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        nums=<span class="built_in">list</span>(<span class="built_in">set</span>(nums))</span><br><span class="line">        nums.sort()</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(nums)==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">len</span>(nums)==<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>        </span><br><span class="line">        res=<span class="number">0</span></span><br><span class="line">        count=<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(nums)):</span><br><span class="line">            <span class="keyword">if</span> nums[i]-nums[i-<span class="number">1</span>]==<span class="number">1</span>:</span><br><span class="line">                count+=<span class="number">1</span>                </span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                count=<span class="number">1</span></span><br><span class="line">            res=<span class="built_in">max</span>(res,count)                </span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;128-Longest-Consecutive-Sequence-medium&quot;&gt;&lt;a href=&quot;#128-Longest-Consecutive-Sequence-medium&quot; class=&quot;headerlink&quot; title=&quot;128. Longest C</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="array" scheme="http://example.com/tags/array/"/>
    
  </entry>
  
  <entry>
    <title>238. Product of Array Except Self(medium)</title>
    <link href="http://example.com/2022/11/14/238/"/>
    <id>http://example.com/2022/11/14/238/</id>
    <published>2022-11-15T03:21:06.000Z</published>
    <updated>2022-11-15T04:16:35.920Z</updated>
    
    <content type="html"><![CDATA[<h1 id="238-Product-of-Array-Except-Self-medium"><a href="#238-Product-of-Array-Except-Self-medium" class="headerlink" title="238. Product of Array Except Self(medium)"></a>238. Product of Array Except Self(medium)</h1><h2 id="Given-an-integer-array-nums-return-an-array-answer-such-that-answer-i-is-equal-to-the-product-of-all-the-elements-of-nums-except-nums-i"><a href="#Given-an-integer-array-nums-return-an-array-answer-such-that-answer-i-is-equal-to-the-product-of-all-the-elements-of-nums-except-nums-i" class="headerlink" title="Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i]."></a>Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].</h2><h2 id="The-product-of-any-prefix-or-suffix-of-nums-is-guaranteed-to-fit-in-a-32-bit-integer"><a href="#The-product-of-any-prefix-or-suffix-of-nums-is-guaranteed-to-fit-in-a-32-bit-integer" class="headerlink" title="The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer."></a>The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</h2><h2 id="You-must-write-an-algorithm-that-runs-in-O-n-time-and-without-using-the-division-operation"><a href="#You-must-write-an-algorithm-that-runs-in-O-n-time-and-without-using-the-division-operation" class="headerlink" title="You must write an algorithm that runs in O(n) time and without using the division operation."></a>You must write an algorithm that runs in O(n) time and without using the division operation.</h2><p>因为题目限制了除法，所以为了缩减时间复杂度，模仿前缀和数组，建立两个数组，一个从左边乘得到的数组，一个从右边乘得到的数组，最后的结果就等于两个数组在相同位置的乘积</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">productExceptSelf</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span></span><br><span class="line">        n=<span class="built_in">len</span>(nums)</span><br><span class="line">        L,R,res=[<span class="number">0</span>]*n,[<span class="number">0</span>]*n,[<span class="number">0</span>]*n</span><br><span class="line">        L[<span class="number">0</span>]=<span class="number">1</span></span><br><span class="line">        R[n-<span class="number">1</span>]=<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,n):</span><br><span class="line">            L[i]=nums[i-<span class="number">1</span>]*L[i-<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">reversed</span>(<span class="built_in">range</span>(n-<span class="number">1</span>)):</span><br><span class="line">            R[i]=nums[i+<span class="number">1</span>]*R[i+<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            res[i]=L[i]*R[i]</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;238-Product-of-Array-Except-Self-medium&quot;&gt;&lt;a href=&quot;#238-Product-of-Array-Except-Self-medium&quot; class=&quot;headerlink&quot; title=&quot;238. Product o</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="difference array" scheme="http://example.com/tags/difference-array/"/>
    
  </entry>
  
  <entry>
    <title>49. Group Anagrams(medium)</title>
    <link href="http://example.com/2022/11/14/49/"/>
    <id>http://example.com/2022/11/14/49/</id>
    <published>2022-11-15T02:19:26.000Z</published>
    <updated>2022-11-15T04:16:46.365Z</updated>
    
    <content type="html"><![CDATA[<h1 id="49-Group-Anagrams-medium"><a href="#49-Group-Anagrams-medium" class="headerlink" title="49. Group Anagrams(medium)"></a>49. Group Anagrams(medium)</h1><h2 id="Given-an-array-of-strings-strs-group-the-anagrams-together-You-can-return-the-answer-in-any-order"><a href="#Given-an-array-of-strings-strs-group-the-anagrams-together-You-can-return-the-answer-in-any-order" class="headerlink" title="Given an array of strings strs, group the anagrams together. You can return the answer in any order."></a>Given an array of strings strs, group the anagrams together. You can return the answer in any order.</h2><h2 id="An-Anagram-is-a-word-or-phrase-formed-by-rearranging-the-letters-of-a-different-word-or-phrase-typically-using-all-the-original-letters-exactly-once"><a href="#An-Anagram-is-a-word-or-phrase-formed-by-rearranging-the-letters-of-a-different-word-or-phrase-typically-using-all-the-original-letters-exactly-once" class="headerlink" title="An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once."></a>An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.</h2><h3 id="leetcode-官方题解"><a href="#leetcode-官方题解" class="headerlink" title="leetcode 官方题解"></a><a href="https://leetcode.cn/problems/group-anagrams/solution/zi-mu-yi-wei-ci-fen-zu-by-leetcode-solut-gyoc/">leetcode 官方题解</a></h3><p>由于互为字母异位词的两个字符串包含的字母相同，因此对两个字符串分别进行排序之后得到的字符串一定是相同的，故可以将排序之后的字符串作为哈希表的键。<br>这道题主要是把字符串本身当作键，字母相同的字符作为键是同一个</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">groupAnagrams</span>(<span class="params">self, strs: <span class="type">List</span>[<span class="built_in">str</span>]</span>) -&gt; <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">str</span>]]:</span></span><br><span class="line">        n=<span class="built_in">len</span>(strs)</span><br><span class="line">        mp=collections.defaultdict(<span class="built_in">list</span>)</span><br><span class="line">        <span class="keyword">for</span> st <span class="keyword">in</span> strs:</span><br><span class="line">            key=<span class="string">&quot;&quot;</span>.join(<span class="built_in">sorted</span>(st))</span><br><span class="line">            mp[key].append(st)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">list</span>(mp.values())   </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;49-Group-Anagrams-medium&quot;&gt;&lt;a href=&quot;#49-Group-Anagrams-medium&quot; class=&quot;headerlink&quot; title=&quot;49. Group Anagrams(medium)&quot;&gt;&lt;/a&gt;49. Group An</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="hashmap" scheme="http://example.com/tags/hashmap/"/>
    
  </entry>
  
  <entry>
    <title>217. Contains Duplicate(easy)</title>
    <link href="http://example.com/2022/11/14/217/"/>
    <id>http://example.com/2022/11/14/217/</id>
    <published>2022-11-15T02:03:23.000Z</published>
    <updated>2022-11-15T02:30:11.819Z</updated>
    
    <content type="html"><![CDATA[<h1 id="217-Contains-Duplicate-easy"><a href="#217-Contains-Duplicate-easy" class="headerlink" title="217. Contains Duplicate(easy)"></a>217. Contains Duplicate(easy)</h1><h1 id="Given-an-integer-array-nums-return-true-if-any-value-appears-at-least-twice-in-the-array-and-return-false-if-every-element-is-distinct"><a href="#Given-an-integer-array-nums-return-true-if-any-value-appears-at-least-twice-in-the-array-and-return-false-if-every-element-is-distinct" class="headerlink" title="Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct."></a>Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [1,2,3,1]</span><br><span class="line">Output: true</span><br></pre></td></tr></table></figure><p>利用ｓｅｔ的去重属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">containsDuplicate</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">bool</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(<span class="built_in">set</span>(nums))!=<span class="built_in">len</span>(nums)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;217-Contains-Duplicate-easy&quot;&gt;&lt;a href=&quot;#217-Contains-Duplicate-easy&quot; class=&quot;headerlink&quot; title=&quot;217. Contains Duplicate(easy)&quot;&gt;&lt;/a&gt;217</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="set" scheme="http://example.com/tags/set/"/>
    
  </entry>
  
  <entry>
    <title>2131. Longest Palindrome by Concatenating Two Letter Words(medium)</title>
    <link href="http://example.com/2022/11/12/2131/"/>
    <id>http://example.com/2022/11/12/2131/</id>
    <published>2022-11-12T22:34:35.000Z</published>
    <updated>2022-11-15T02:29:51.173Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2131-Longest-Palindrome-by-Concatenating-Two-Letter-Words-medium"><a href="#2131-Longest-Palindrome-by-Concatenating-Two-Letter-Words-medium" class="headerlink" title="2131. Longest Palindrome by Concatenating Two Letter Words(medium)"></a>2131. Longest Palindrome by Concatenating Two Letter Words(medium)</h1><h2 id="You-are-given-an-array-of-strings-words-Each-element-of-words-consists-of-two-lowercase-English-letters"><a href="#You-are-given-an-array-of-strings-words-Each-element-of-words-consists-of-two-lowercase-English-letters" class="headerlink" title="You are given an array of strings words. Each element of words consists of two lowercase English letters."></a>You are given an array of strings words. Each element of words consists of two lowercase English letters.</h2><h2 id="Create-the-longest-possible-palindrome-by-selecting-some-elements-from-words-and-concatenating-them-in-any-order-Each-element-can-be-selected-at-most-once"><a href="#Create-the-longest-possible-palindrome-by-selecting-some-elements-from-words-and-concatenating-them-in-any-order-Each-element-can-be-selected-at-most-once" class="headerlink" title="Create the longest possible palindrome by selecting some elements from words and concatenating them in any order. Each element can be selected at most once."></a>Create the longest possible palindrome by selecting some elements from words and concatenating them in any order. Each element can be selected at most once.</h2><h2 id="Return-the-length-of-the-longest-palindrome-that-you-can-create-If-it-is-impossible-to-create-any-palindrome-return-0"><a href="#Return-the-length-of-the-longest-palindrome-that-you-can-create-If-it-is-impossible-to-create-any-palindrome-return-0" class="headerlink" title="Return the length of the longest palindrome that you can create. If it is impossible to create any palindrome, return 0."></a>Return the length of the longest palindrome that you can create. If it is impossible to create any palindrome, return 0.</h2><h2 id="A-palindrome-is-a-string-that-reads-the-same-forward-and-backward"><a href="#A-palindrome-is-a-string-that-reads-the-same-forward-and-backward" class="headerlink" title="A palindrome is a string that reads the same forward and backward."></a>A palindrome is a string that reads the same forward and backward.</h2><p><a href="https://leetcode.cn/problems/longest-palindrome-by-concatenating-two-letter-words/solutions/1202034/lian-jie-liang-zi-mu-dan-ci-de-dao-de-zu-vs99/">力扣官方题解</a></p><p>方法一：贪心 + 哈希表<br>思路与算法</p><p>根据回文串的定义，回文串可以由奇数或者偶数个 words 中的单词拼接而成，但必须满足以下条件：</p><p>如果数量为奇数，那么位于正中间的单词必须是回文字符串（即两个字符相等）；</p><p>每个单词和反转后对应位置的单词必须互为反转字符串。</p><p>根据上面的两个条件，我们可以得出构造最长回文串的规则：</p><p>对于两个字符不同的单词，需要尽可能多的成对选择它和它的反转字符串（如有）；</p><p>对于两个字符相同的单词，需要尽可能多的成对选择该单词；</p><p>如果按照上述条件挑选后，仍然存在未被选择的两个字符相同的单词（此时该字符串只可能有一个未被选择，且该字符串一定在 words 中出现奇数次），我们可以任意选择一个。</p><p>因此，我们用哈希表统计 words 中每个单词的出现次数。随后，我们遍历哈希表的所有元素，并用 res 维护可能构成回文字符串的最长长度，同时用初值为 false 的布尔变量 mid 判断是否存在可以作为中心单词的、出现奇数次的回文单词。在遍历到字符串 word 时，我们首先求出它反转后的字符串 rev，此时根据 word 与 rev 的关系，有以下两种情况：</p><p>word≠rev，此时我们需要统计两者在 words 出现次数的最小值，即为成对选择的最多数目。假设此时对数为 n，则其对最长回文字符串贡献的字符长度为 4n，我们将 res 加上对应值；</p><p>word=rev，此时可以构成的对数为 ⌊m/2⌋，即对最长回文字符串贡献的字符长度为 4⌊m/2⌋，我们同样将 res 加上对应值。除此以外，我们还需要判断 word 的出现次数 m 是否为奇数：</p><p>如果 m 为奇数，则存在可以作为中心单词的剩余回文单词，我们将 mid 置为 true；</p><p>如果 m 为偶数，则不存在可以作为中心单词的剩余回文单词，我们不改变 mid 的取值。</p><p>最后，我们根据 mid 的取值，判断最长回文串是否含有中心单词。如果 mid 为 true，则代表含有，我们将 res 加上 2；反之则没有，我们不进行任何操作。</p><p>最后，我们返回 res 作为最长回文串的长度。</p><p>细节</p><p>在遍历哈希表中的每个单词时，为了避免重复计算成对选择的单词，我们只在 word 的字典序大于等于 rev 时更新 res。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestPalindrome</span>(<span class="params">self, words: <span class="type">List</span>[<span class="built_in">str</span>]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        freq = Counter(words)   <span class="comment"># 单词出现次数</span></span><br><span class="line">        res = <span class="number">0</span>   <span class="comment"># 最长回文串长度</span></span><br><span class="line">        mid = <span class="literal">False</span>   <span class="comment"># 是否含有中心单词</span></span><br><span class="line">        <span class="keyword">for</span> word, cnt <span class="keyword">in</span> freq.items():</span><br><span class="line">            <span class="comment"># 遍历出现的单词，并更新长度</span></span><br><span class="line">            rev = word[<span class="number">1</span>] + word[<span class="number">0</span>]   <span class="comment"># 反转后的单词</span></span><br><span class="line">            <span class="keyword">if</span> word == rev:</span><br><span class="line">                <span class="keyword">if</span> cnt % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">                    mid = <span class="literal">True</span></span><br><span class="line">                res += <span class="number">2</span> * (cnt // <span class="number">2</span> * <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">elif</span> word &gt; rev:   <span class="comment"># 避免重复遍历</span></span><br><span class="line">                res += <span class="number">4</span> * <span class="built_in">min</span>(freq[word], freq[rev])</span><br><span class="line">        <span class="keyword">if</span> mid:</span><br><span class="line">            <span class="comment"># 含有中心单词，更新长度</span></span><br><span class="line">            res += <span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2131-Longest-Palindrome-by-Concatenating-Two-Letter-Words-medium&quot;&gt;&lt;a href=&quot;#2131-Longest-Palindrome-by-Concatenating-Two-Letter-Word</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="hashmap" scheme="http://example.com/tags/hashmap/"/>
    
    <category term="greedy" scheme="http://example.com/tags/greedy/"/>
    
  </entry>
  
</feed>
