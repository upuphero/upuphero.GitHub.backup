<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>八角书屋</title>
  
  <subtitle>Engineering House</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-10-10T01:29:48.663Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>leaf</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>145. Binary Tree Postorder Traversal(easy)</title>
    <link href="http://example.com/2022/10/09/145/"/>
    <id>http://example.com/2022/10/09/145/</id>
    <published>2022-10-10T01:27:51.000Z</published>
    <updated>2022-10-10T01:29:48.663Z</updated>
    
    <content type="html"><![CDATA[<h1 id="145-Binary-Tree-Postorder-Traversal-easy"><a href="#145-Binary-Tree-Postorder-Traversal-easy" class="headerlink" title="145. Binary Tree Postorder Traversal(easy)"></a>145. Binary Tree Postorder Traversal(easy)</h1><h2 id="Given-the-root-of-a-binary-tree-return-the-postorder-traversal-of-its-nodes’-values"><a href="#Given-the-root-of-a-binary-tree-return-the-postorder-traversal-of-its-nodes’-values" class="headerlink" title="Given the root of a binary tree, return the postorder traversal of its nodes’ values."></a>Given the root of a binary tree, return the postorder traversal of its nodes’ values.</h2><p>后序遍历，和前序遍历几乎一样</p><h2 id="Leetcode官方题解"><a href="#Leetcode官方题解" class="headerlink" title="Leetcode官方题解"></a><a href="https://leetcode.cn/problems/binary-tree-postorder-traversal/solution/er-cha-shu-de-hou-xu-bian-li-by-leetcode-solution/">Leetcode官方题解</a></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"># class TreeNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, val=0, left=None, right=None):</span></span><br><span class="line"><span class="comment">#         self.val = val</span></span><br><span class="line"><span class="comment">#         self.left = left</span></span><br><span class="line"><span class="comment">#         self.right = right</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">postorderTraversal</span>(<span class="params">self, root: <span class="type">Optional</span>[TreeNode]</span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">postorder</span>(<span class="params">root:TreeNode</span>):</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> root:</span><br><span class="line">                <span class="keyword">return</span> </span><br><span class="line">            </span><br><span class="line">            postorder(root.left)</span><br><span class="line">            postorder(root.right)</span><br><span class="line">            res.append(root.val)</span><br><span class="line">        res=<span class="built_in">list</span>()</span><br><span class="line">        postorder(root)</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;145-Binary-Tree-Postorder-Traversal-easy&quot;&gt;&lt;a href=&quot;#145-Binary-Tree-Postorder-Traversal-easy&quot; class=&quot;headerlink&quot; title=&quot;145. Binary </summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="Tree" scheme="http://example.com/tags/Tree/"/>
    
  </entry>
  
  <entry>
    <title>144. Binary Tree Preorder Traversal(easy)</title>
    <link href="http://example.com/2022/10/09/144/"/>
    <id>http://example.com/2022/10/09/144/</id>
    <published>2022-10-10T01:24:31.000Z</published>
    <updated>2022-10-10T01:29:45.075Z</updated>
    
    <content type="html"><![CDATA[<h1 id="144-Binary-Tree-Preorder-Traversal-easy"><a href="#144-Binary-Tree-Preorder-Traversal-easy" class="headerlink" title="144. Binary Tree Preorder Traversal(easy)"></a>144. Binary Tree Preorder Traversal(easy)</h1><h2 id="Given-the-root-of-a-binary-tree-return-the-preorder-traversal-of-its-nodes’-values"><a href="#Given-the-root-of-a-binary-tree-return-the-preorder-traversal-of-its-nodes’-values" class="headerlink" title="Given the root of a binary tree, return the preorder traversal of its nodes’ values."></a>Given the root of a binary tree, return the preorder traversal of its nodes’ values.</h2><h2 id="Leetcode官方题解"><a href="#Leetcode官方题解" class="headerlink" title="Leetcode官方题解"></a><a href="https://leetcode.cn/problems/binary-tree-preorder-traversal/solution/er-cha-shu-de-qian-xu-bian-li-by-leetcode-solution/">Leetcode官方题解</a></h2><p>二叉树的前序遍历</p><pre><code class="python"># Definition for a binary tree node.# class TreeNode:#     def __init__(self, val=0, left=None, right=None):#         self.val = val#         self.left = left#         self.right = rightclass Solution:    def preorderTraversal(self, root: Optional[TreeNode]) -&gt; List[int]:        def preorder(root:TreeNode):            if not root:                return             res.append(root.val)            preorder(root.left)            preorder(root.right)        res=list()        preorder(root)        return res</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;144-Binary-Tree-Preorder-Traversal-easy&quot;&gt;&lt;a href=&quot;#144-Binary-Tree-Preorder-Traversal-easy&quot; class=&quot;headerlink&quot; title=&quot;144. Binary Tr</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="Tree" scheme="http://example.com/tags/Tree/"/>
    
  </entry>
  
  <entry>
    <title>258. Add Digits(easy)</title>
    <link href="http://example.com/2022/10/09/258/"/>
    <id>http://example.com/2022/10/09/258/</id>
    <published>2022-10-09T22:16:23.000Z</published>
    <updated>2022-10-09T22:18:53.478Z</updated>
    
    <content type="html"><![CDATA[<h1 id="258-Add-Digits-easy"><a href="#258-Add-Digits-easy" class="headerlink" title="258. Add Digits(easy)"></a>258. Add Digits(easy)</h1><h2 id="Given-an-integer-num-repeatedly-add-all-its-digits-until-the-result-has-only-one-digit-and-return-it"><a href="#Given-an-integer-num-repeatedly-add-all-its-digits-until-the-result-has-only-one-digit-and-return-it" class="headerlink" title="Given an integer num, repeatedly add all its digits until the result has only one digit, and return it."></a>Given an integer num, repeatedly add all its digits until the result has only one digit, and return it.</h2><h3 id="官方题解"><a href="#官方题解" class="headerlink" title="官方题解"></a><a href="https://leetcode.cn/problems/add-digits/solution/ge-wei-xiang-jia-by-leetcode-solution-u4kj/">官方题解</a></h3><p>其实是一道数学题</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">addDigits</span>(<span class="params">self, num: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        <span class="keyword">return</span> (num - <span class="number">1</span>) % <span class="number">9</span> + <span class="number">1</span> <span class="keyword">if</span> num <span class="keyword">else</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;258-Add-Digits-easy&quot;&gt;&lt;a href=&quot;#258-Add-Digits-easy&quot; class=&quot;headerlink&quot; title=&quot;258. Add Digits(easy)&quot;&gt;&lt;/a&gt;258. Add Digits(easy)&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="math" scheme="http://example.com/tags/math/"/>
    
  </entry>
  
  <entry>
    <title>252. Meeting Rooms(easy)</title>
    <link href="http://example.com/2022/10/09/252/"/>
    <id>http://example.com/2022/10/09/252/</id>
    <published>2022-10-09T22:03:06.000Z</published>
    <updated>2022-10-09T22:04:32.973Z</updated>
    
    <content type="html"><![CDATA[<h1 id="252-Meeting-Rooms-easy"><a href="#252-Meeting-Rooms-easy" class="headerlink" title="252. Meeting Rooms(easy)"></a>252. Meeting Rooms(easy)</h1><h2 id="Given-an-array-of-meeting-time-intervals-where-intervals-i-starti-endi-determine-if-a-person-could-attend-all-meetings"><a href="#Given-an-array-of-meeting-time-intervals-where-intervals-i-starti-endi-determine-if-a-person-could-attend-all-meetings" class="headerlink" title="Given an array of meeting time intervals where intervals[i] = [starti, endi], determine if a person could attend all meetings."></a>Given an array of meeting time intervals where intervals[i] = [starti, endi], determine if a person could attend all meetings.</h2><p>安排会议的第一题，没有什么技巧，先将数组排序，然后判断后一个会议的开始时间是不是小于前一个会议的结束时间</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">canAttendMeetings</span>(<span class="params">self, intervals: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]</span>) -&gt; <span class="built_in">bool</span>:</span></span><br><span class="line">        intervals.sort()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(intervals)-<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> intervals[i][<span class="number">1</span>]&gt;intervals[i+<span class="number">1</span>][<span class="number">0</span>]:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;252-Meeting-Rooms-easy&quot;&gt;&lt;a href=&quot;#252-Meeting-Rooms-easy&quot; class=&quot;headerlink&quot; title=&quot;252. Meeting Rooms(easy)&quot;&gt;&lt;/a&gt;252. Meeting Rooms</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="array" scheme="http://example.com/tags/array/"/>
    
  </entry>
  
  <entry>
    <title>246. Strobogrammatic Number（easy)</title>
    <link href="http://example.com/2022/10/09/246/"/>
    <id>http://example.com/2022/10/09/246/</id>
    <published>2022-10-09T21:51:44.000Z</published>
    <updated>2022-10-09T21:54:00.232Z</updated>
    
    <content type="html"><![CDATA[<h1 id="246-Strobogrammatic-Number（easy"><a href="#246-Strobogrammatic-Number（easy" class="headerlink" title="246. Strobogrammatic Number（easy)"></a>246. Strobogrammatic Number（easy)</h1><h2 id="Given-a-string-num-which-represents-an-integer-return-true-if-num-is-a-strobogrammatic-number"><a href="#Given-a-string-num-which-represents-an-integer-return-true-if-num-is-a-strobogrammatic-number" class="headerlink" title="Given a string num which represents an integer, return true if num is a strobogrammatic number."></a>Given a string num which represents an integer, return true if num is a strobogrammatic number.</h2><h2 id="A-strobogrammatic-number-is-a-number-that-looks-the-same-when-rotated-180-degrees-looked-at-upside-down"><a href="#A-strobogrammatic-number-is-a-number-that-looks-the-same-when-rotated-180-degrees-looked-at-upside-down" class="headerlink" title="A strobogrammatic number is a number that looks the same when rotated 180 degrees (looked at upside down)."></a>A strobogrammatic number is a number that looks the same when rotated 180 degrees (looked at upside down).</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: num = &quot;69&quot;</span><br><span class="line">Output: true</span><br></pre></td></tr></table></figure><p>有点像求回文数的方法，双指针，但是有相同构造的数就那么几对，列出来即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isStrobogrammatic</span>(<span class="params">self, num: <span class="built_in">str</span></span>) -&gt; <span class="built_in">bool</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> num:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        pairs= <span class="built_in">set</span>([(<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;0&#x27;</span>), (<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;1&#x27;</span>), (<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;9&#x27;</span>), (<span class="string">&#x27;8&#x27;</span>,<span class="string">&#x27;8&#x27;</span>), (<span class="string">&#x27;9&#x27;</span>,<span class="string">&#x27;6&#x27;</span>)])</span><br><span class="line">        l,r=<span class="number">0</span>,<span class="built_in">len</span>(num)-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l&lt;=r:</span><br><span class="line">            <span class="keyword">if</span> (num[l],num[r]) <span class="keyword">not</span> <span class="keyword">in</span> pairs:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            l+=<span class="number">1</span></span><br><span class="line">            r-=<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;246-Strobogrammatic-Number（easy&quot;&gt;&lt;a href=&quot;#246-Strobogrammatic-Number（easy&quot; class=&quot;headerlink&quot; title=&quot;246. Strobogrammatic Number（ea</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="two-pointers" scheme="http://example.com/tags/two-pointers/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="set" scheme="http://example.com/tags/set/"/>
    
  </entry>
  
  <entry>
    <title>228. Summary Ranges(easy)</title>
    <link href="http://example.com/2022/10/09/228/"/>
    <id>http://example.com/2022/10/09/228/</id>
    <published>2022-10-09T21:40:45.000Z</published>
    <updated>2022-10-09T21:41:54.807Z</updated>
    
    <content type="html"><![CDATA[<h1 id="228-Summary-Ranges-easy"><a href="#228-Summary-Ranges-easy" class="headerlink" title="228. Summary Ranges(easy)"></a>228. Summary Ranges(easy)</h1><h2 id="You-are-given-a-sorted-unique-integer-array-nums"><a href="#You-are-given-a-sorted-unique-integer-array-nums" class="headerlink" title="You are given a sorted unique integer array nums."></a>You are given a sorted unique integer array nums.</h2><h2 id="A-range-a-b-is-the-set-of-all-integers-from-a-to-b-inclusive"><a href="#A-range-a-b-is-the-set-of-all-integers-from-a-to-b-inclusive" class="headerlink" title="A range [a,b] is the set of all integers from a to b (inclusive)."></a>A range [a,b] is the set of all integers from a to b (inclusive).</h2><h2 id="Return-the-smallest-sorted-list-of-ranges-that-cover-all-the-numbers-in-the-array-exactly-That-is-each-element-of-nums-is-covered-by-exactly-one-of-the-ranges-and-there-is-no-integer-x-such-that-x-is-in-one-of-the-ranges-but-not-in-nums"><a href="#Return-the-smallest-sorted-list-of-ranges-that-cover-all-the-numbers-in-the-array-exactly-That-is-each-element-of-nums-is-covered-by-exactly-one-of-the-ranges-and-there-is-no-integer-x-such-that-x-is-in-one-of-the-ranges-but-not-in-nums" class="headerlink" title="Return the smallest sorted list of ranges that cover all the numbers in the array exactly. That is, each element of nums is covered by exactly one of the ranges, and there is no integer x such that x is in one of the ranges but not in nums."></a>Return the smallest sorted list of ranges that cover all the numbers in the array exactly. That is, each element of nums is covered by exactly one of the ranges, and there is no integer x such that x is in one of the ranges but not in nums.</h2><h2 id="Each-range-a-b-in-the-list-should-be-output-as"><a href="#Each-range-a-b-in-the-list-should-be-output-as" class="headerlink" title="Each range [a,b] in the list should be output as:"></a>Each range [a,b] in the list should be output as:</h2><p>“a-&gt;b” if a != b<br>“a” if a == b</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;228-Summary-Ranges-easy&quot;&gt;&lt;a href=&quot;#228-Summary-Ranges-easy&quot; class=&quot;headerlink&quot; title=&quot;228. Summary Ranges(easy)&quot;&gt;&lt;/a&gt;228. Summary Ra</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="two-pointers" scheme="http://example.com/tags/two-pointers/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>225. Implement Stack using Queues(easy)</title>
    <link href="http://example.com/2022/10/09/225/"/>
    <id>http://example.com/2022/10/09/225/</id>
    <published>2022-10-09T21:11:32.000Z</published>
    <updated>2022-10-09T21:39:16.582Z</updated>
    
    <content type="html"><![CDATA[<h1 id="225-Implement-Stack-using-Queues-easy"><a href="#225-Implement-Stack-using-Queues-easy" class="headerlink" title="225. Implement Stack using Queues(easy)"></a>225. Implement Stack using Queues(easy)</h1><h2 id="Implement-a-last-in-first-out-LIFO-stack-using-only-two-queues-The-implemented-stack-should-support-all-the-functions-of-a-normal-stack-push-top-pop-and-empty"><a href="#Implement-a-last-in-first-out-LIFO-stack-using-only-two-queues-The-implemented-stack-should-support-all-the-functions-of-a-normal-stack-push-top-pop-and-empty" class="headerlink" title="Implement a last-in-first-out (LIFO) stack using only two queues. The implemented stack should support all the functions of a normal stack (push, top, pop, and empty)."></a>Implement a last-in-first-out (LIFO) stack using only two queues. The implemented stack should support all the functions of a normal stack (push, top, pop, and empty).</h2><h2 id="Implement-the-MyStack-class"><a href="#Implement-the-MyStack-class" class="headerlink" title="Implement the MyStack class:"></a>Implement the MyStack class:</h2><p>void push(int x) Pushes element x to the top of the stack.<br>int pop() Removes the element on the top of the stack and returns it.<br>int top() Returns the element on the top of the stack.<br>boolean empty() Returns true if the stack is empty, false otherwise.</p><h2 id="Notes"><a href="#Notes" class="headerlink" title="Notes:"></a>Notes:</h2><p>You must use only standard operations of a queue, which means that only push to back, peek/pop from front, size and is empty operations are valid.<br>Depending on your language, the queue may not be supported natively. You may simulate a queue using a list or deque (double-ended queue) as long as you use only a queue’s standard operations.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Input</span><br><span class="line">[&quot;MyStack&quot;, &quot;push&quot;, &quot;push&quot;, &quot;top&quot;, &quot;pop&quot;, &quot;empty&quot;]</span><br><span class="line">[[], [1], [2], [], [], []]</span><br><span class="line">Output</span><br><span class="line">[null, null, null, 2, 2, false]</span><br><span class="line"></span><br><span class="line">Explanation</span><br><span class="line">MyStack myStack = new MyStack();</span><br><span class="line">myStack.push(1);</span><br><span class="line">myStack.push(2);</span><br><span class="line">myStack.top(); // return 2</span><br><span class="line">myStack.pop(); // return 2</span><br><span class="line">myStack.empty(); // return False</span><br></pre></td></tr></table></figure><h3 id="Leetcode官方题解"><a href="#Leetcode官方题解" class="headerlink" title="Leetcode官方题解"></a><a href="https://leetcode.cn/problems/implement-stack-using-queues/solution/yong-dui-lie-shi-xian-zhan-by-leetcode-solution/">Leetcode官方题解</a></h3><p>栈是一种后进先出的数据结构，元素从顶端入栈，然后从顶端出栈。</p><p>队列是一种先进先出的数据结构，元素从后端入队，然后从前端出队。</p><p>为了满足栈的特性，即最后入栈的元素最先出栈，在使用队列实现栈时，应满足队列前端的元素是最后入栈的元素。可以使用两个队列实现栈的操作，其中 queue1用于存储栈内的元素，queue2作为入栈操作的辅助队列。</p><p>入栈操作时，首先将元素入队到 queue2，然后将 queue1的全部元素依次出队并入队到 queue2，此时 queue2的前端的元素即为新入栈的元素，再将 queue1和 queue2互换，则 queue1的元素即为栈内的元素，queue1的前端和后端分别对应栈顶和栈底。</p><p>由于每次入栈操作都确保 queue1的前端元素为栈顶元素，因此出栈操作和获得栈顶元素操作都可以简单实现。出栈操作只需要移除 queue1的前端元素并返回即可，获得栈顶元素操作只需要获得 queue1的前端元素并返回即可（不移除元素）。</p><p>由于 queue1用于存储栈内的元素，判断栈是否为空时，只需要判断 queue1是否为空即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Your MyStack object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"># obj = MyStack()</span></span><br><span class="line"><span class="comment"># obj.push(x)</span></span><br><span class="line"><span class="comment"># param_2 = obj.pop()</span></span><br><span class="line"><span class="comment"># param_3 = obj.top()</span></span><br><span class="line"><span class="comment"># param_4 = obj.empty()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyStack</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Initialize your data structure here.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.queue1 = collections.deque()</span><br><span class="line">        self.queue2 = collections.deque()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">push</span>(<span class="params">self, x: <span class="built_in">int</span></span>) -&gt; <span class="literal">None</span>:</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Push element x onto stack.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.queue2.append(x)</span><br><span class="line">        <span class="keyword">while</span> self.queue1:</span><br><span class="line">            self.queue2.append(self.queue1.popleft())</span><br><span class="line">        self.queue1, self.queue2 = self.queue2, self.queue1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pop</span>(<span class="params">self</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Removes the element on top of the stack and returns that element.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.queue1.popleft()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">top</span>(<span class="params">self</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Get the top element.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.queue1[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">empty</span>(<span class="params">self</span>) -&gt; <span class="built_in">bool</span>:</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Returns whether the stack is empty.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">not</span> self.queue1</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;225-Implement-Stack-using-Queues-easy&quot;&gt;&lt;a href=&quot;#225-Implement-Stack-using-Queues-easy&quot; class=&quot;headerlink&quot; title=&quot;225. Implement Sta</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="stack" scheme="http://example.com/tags/stack/"/>
    
    <category term="Queues" scheme="http://example.com/tags/Queues/"/>
    
  </entry>
  
  <entry>
    <title>190. Reverse Bits(easy)</title>
    <link href="http://example.com/2022/10/09/190/"/>
    <id>http://example.com/2022/10/09/190/</id>
    <published>2022-10-09T20:06:54.000Z</published>
    <updated>2022-10-09T20:54:10.097Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Reverse-bits-of-a-given-32-bits-unsigned-integer"><a href="#Reverse-bits-of-a-given-32-bits-unsigned-integer" class="headerlink" title="Reverse bits of a given 32 bits unsigned integer."></a>Reverse bits of a given 32 bits unsigned integer.</h2><p>Note:</p><h2 id="Note-that-in-some-languages-such-as-Java-there-is-no-unsigned-integer-type-In-this-case-both-input-and-output-will-be-given-as-a-signed-integer-type-They-should-not-affect-your-implementation-as-the-integer’s-internal-binary-representation-is-the-same-whether-it-is-signed-or-unsigned"><a href="#Note-that-in-some-languages-such-as-Java-there-is-no-unsigned-integer-type-In-this-case-both-input-and-output-will-be-given-as-a-signed-integer-type-They-should-not-affect-your-implementation-as-the-integer’s-internal-binary-representation-is-the-same-whether-it-is-signed-or-unsigned" class="headerlink" title="Note that in some languages, such as Java, there is no unsigned integer type. In this case, both input and output will be given as a signed integer type. They should not affect your implementation, as the integer’s internal binary representation is the same, whether it is signed or unsigned."></a>Note that in some languages, such as Java, there is no unsigned integer type. In this case, both input and output will be given as a signed integer type. They should not affect your implementation, as the integer’s internal binary representation is the same, whether it is signed or unsigned.</h2><h2 id="In-Java-the-compiler-represents-the-signed-integers-using-2’s-complement-notation-Therefore-in-Example-2-above-the-input-represents-the-signed-integer-3-and-the-output-represents-the-signed-integer-1073741825"><a href="#In-Java-the-compiler-represents-the-signed-integers-using-2’s-complement-notation-Therefore-in-Example-2-above-the-input-represents-the-signed-integer-3-and-the-output-represents-the-signed-integer-1073741825" class="headerlink" title="In Java, the compiler represents the signed integers using 2’s complement notation. Therefore, in Example 2 above, the input represents the signed integer -3 and the output represents the signed integer -1073741825."></a>In Java, the compiler represents the signed integers using 2’s complement notation. Therefore, in Example 2 above, the input represents the signed integer -3 and the output represents the signed integer -1073741825.</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: n = 00000010100101000001111010011100</span><br><span class="line">Output:    964176192 (00111001011110000010100101000000)</span><br><span class="line">Explanation: The input binary string 00000010100101000001111010011100 represents the unsigned integer 43261596, so return 964176192 which its binary representation is 00111001011110000010100101000000.</span><br></pre></td></tr></table></figure><p>二进制颠倒顺序，用位运算的方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reverseBits</span>(<span class="params">n</span>):</span></span><br><span class="line">        res=<span class="number">0</span></span><br><span class="line">        ans=<span class="number">0</span></span><br><span class="line">        n1=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">            ans=res&lt;&lt;<span class="number">1</span></span><br><span class="line">            n1=n&amp;<span class="number">1</span>  <span class="comment"># n1=n&amp;1</span></span><br><span class="line">            res=ans|n1   <span class="comment"># 或运算：同0为0，否则为1</span></span><br><span class="line">            n&gt;&gt;=<span class="number">1</span>  <span class="comment"># x &gt;&gt; y 右移操作，最左边用 0 填充</span></span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Reverse-bits-of-a-given-32-bits-unsigned-integer&quot;&gt;&lt;a href=&quot;#Reverse-bits-of-a-given-32-bits-unsigned-integer&quot; class=&quot;headerlink&quot; tit</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="bitwise" scheme="http://example.com/tags/bitwise/"/>
    
  </entry>
  
  <entry>
    <title>168. Excel Sheet Column Title(easy)</title>
    <link href="http://example.com/2022/10/09/168/"/>
    <id>http://example.com/2022/10/09/168/</id>
    <published>2022-10-09T15:36:34.000Z</published>
    <updated>2022-10-09T21:06:50.024Z</updated>
    
    <content type="html"><![CDATA[<h1 id="168-Excel-Sheet-Column-Title-easy"><a href="#168-Excel-Sheet-Column-Title-easy" class="headerlink" title="168. Excel Sheet Column Title(easy)"></a>168. Excel Sheet Column Title(easy)</h1><h2 id="Given-an-integer-columnNumber-return-its-corresponding-column-title-as-it-appears-in-an-Excel-sheet"><a href="#Given-an-integer-columnNumber-return-its-corresponding-column-title-as-it-appears-in-an-Excel-sheet" class="headerlink" title="Given an integer columnNumber, return its corresponding column title as it appears in an Excel sheet."></a>Given an integer columnNumber, return its corresponding column title as it appears in an Excel sheet.</h2><h2 id="For-example"><a href="#For-example" class="headerlink" title="For example:"></a>For example:</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">A -&gt; 1</span><br><span class="line">B -&gt; 2</span><br><span class="line">C -&gt; 3</span><br><span class="line">...</span><br><span class="line">Z -&gt; 26</span><br><span class="line">AA -&gt; 27</span><br><span class="line">AB -&gt; 28 </span><br><span class="line">...</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: columnNumber = 1</span><br><span class="line">Output: &quot;A&quot;</span><br></pre></td></tr></table></figure><p>这道题和 171. Excel Sheet Column Number(easy)属于镜像题，可以用高中学过的十进制转二进制的思想，利用求余和除法不断求出每一位的系数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">convertToTitle</span>(<span class="params">self, columnNumber: <span class="built_in">int</span></span>) -&gt; <span class="built_in">str</span>:</span></span><br><span class="line">        ans=[]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> columnNumber&gt;<span class="number">0</span>:</span><br><span class="line">            columnNumber-=<span class="number">1</span></span><br><span class="line">            current=columnNumber%<span class="number">26</span></span><br><span class="line">            columnNumber=columnNumber//<span class="number">26</span></span><br><span class="line">            ans.append(<span class="built_in">chr</span>(current+<span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>))) <span class="comment">#The chr() method converts an integer to its unicode character and returns it.</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(ans[::-<span class="number">1</span>])    </span><br><span class="line"><span class="comment"># [::-1] , it starts from the end towards the first taking each element. </span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;168-Excel-Sheet-Column-Title-easy&quot;&gt;&lt;a href=&quot;#168-Excel-Sheet-Column-Title-easy&quot; class=&quot;headerlink&quot; title=&quot;168. Excel Sheet Column Ti</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="bitwise" scheme="http://example.com/tags/bitwise/"/>
    
  </entry>
  
  <entry>
    <title>342. Power of Four(easy)</title>
    <link href="http://example.com/2022/10/08/342/"/>
    <id>http://example.com/2022/10/08/342/</id>
    <published>2022-10-08T05:08:12.000Z</published>
    <updated>2022-10-08T05:10:40.493Z</updated>
    
    <content type="html"><![CDATA[<h1 id="342-Power-of-Four-easy"><a href="#342-Power-of-Four-easy" class="headerlink" title="342. Power of Four(easy)"></a>342. Power of Four(easy)</h1><h2 id="Given-an-integer-n-return-true-if-it-is-a-power-of-four-Otherwise-return-false"><a href="#Given-an-integer-n-return-true-if-it-is-a-power-of-four-Otherwise-return-false" class="headerlink" title="Given an integer n, return true if it is a power of four. Otherwise, return false."></a>Given an integer n, return true if it is a power of four. Otherwise, return false.</h2><h2 id="An-integer-n-is-a-power-of-four-if-there-exists-an-integer-x-such-that-n-4-x"><a href="#An-integer-n-is-a-power-of-four-if-there-exists-an-integer-x-such-that-n-4-x" class="headerlink" title="An integer n is a power of four, if there exists an integer x such that n == 4^x."></a>An integer n is a power of four, if there exists an integer x such that n == 4^x.</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isPowerOfFour</span>(<span class="params">self, n: <span class="built_in">int</span></span>) -&gt; <span class="built_in">bool</span>:</span></span><br><span class="line">        hashset1=<span class="built_in">set</span>()</span><br><span class="line">        i=<span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> math.<span class="built_in">pow</span>(<span class="number">4</span>,i)&lt;math.<span class="built_in">pow</span>(<span class="number">2</span>,<span class="number">31</span>)-<span class="number">1</span>:</span><br><span class="line">            hashset1.add(math.<span class="built_in">pow</span>(<span class="number">4</span>,i))</span><br><span class="line">            i+=<span class="number">1</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">if</span> n <span class="keyword">in</span> hashset1:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;342-Power-of-Four-easy&quot;&gt;&lt;a href=&quot;#342-Power-of-Four-easy&quot; class=&quot;headerlink&quot; title=&quot;342. Power of Four(easy)&quot;&gt;&lt;/a&gt;342. Power of Four</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="Power" scheme="http://example.com/tags/Power/"/>
    
  </entry>
  
  <entry>
    <title>326. Power of Three(easy)</title>
    <link href="http://example.com/2022/10/08/326/"/>
    <id>http://example.com/2022/10/08/326/</id>
    <published>2022-10-08T05:07:39.000Z</published>
    <updated>2022-10-08T05:10:24.341Z</updated>
    
    <content type="html"><![CDATA[<h1 id="326-Power-of-Three-easy"><a href="#326-Power-of-Three-easy" class="headerlink" title="326. Power of Three(easy)"></a>326. Power of Three(easy)</h1><h2 id="Given-an-integer-n-return-true-if-it-is-a-power-of-three-Otherwise-return-false"><a href="#Given-an-integer-n-return-true-if-it-is-a-power-of-three-Otherwise-return-false" class="headerlink" title="Given an integer n, return true if it is a power of three. Otherwise, return false."></a>Given an integer n, return true if it is a power of three. Otherwise, return false.</h2><h2 id="An-integer-n-is-a-power-of-three-if-there-exists-an-integer-x-such-that-n-3x"><a href="#An-integer-n-is-a-power-of-three-if-there-exists-an-integer-x-such-that-n-3x" class="headerlink" title="An integer n is a power of three, if there exists an integer x such that n == 3x."></a>An integer n is a power of three, if there exists an integer x such that n == 3x.</h2><p>通用代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isPowerOfThree</span>(<span class="params">self, n: <span class="built_in">int</span></span>) -&gt; <span class="built_in">bool</span>:</span></span><br><span class="line">        hashset1=<span class="built_in">set</span>()</span><br><span class="line">        i=<span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> math.<span class="built_in">pow</span>(<span class="number">3</span>,i)&lt;math.<span class="built_in">pow</span>(<span class="number">2</span>,<span class="number">31</span>)-<span class="number">1</span>:</span><br><span class="line">            hashset1.add(math.<span class="built_in">pow</span>(<span class="number">3</span>,i))</span><br><span class="line">            i+=<span class="number">1</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">if</span> n <span class="keyword">in</span> hashset1:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;326-Power-of-Three-easy&quot;&gt;&lt;a href=&quot;#326-Power-of-Three-easy&quot; class=&quot;headerlink&quot; title=&quot;326. Power of Three(easy)&quot;&gt;&lt;/a&gt;326. Power of T</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="Power" scheme="http://example.com/tags/Power/"/>
    
  </entry>
  
  <entry>
    <title>1380. Lucky Numbers in a Matrix(easy)</title>
    <link href="http://example.com/2022/10/05/1380/"/>
    <id>http://example.com/2022/10/05/1380/</id>
    <published>2022-10-05T05:19:22.000Z</published>
    <updated>2022-10-05T05:21:18.801Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1380-Lucky-Numbers-in-a-Matrix-easy"><a href="#1380-Lucky-Numbers-in-a-Matrix-easy" class="headerlink" title="1380. Lucky Numbers in a Matrix(easy)"></a>1380. Lucky Numbers in a Matrix(easy)</h1><h2 id="Given-an-m-x-n-matrix-of-distinct-numbers-return-all-lucky-numbers-in-the-matrix-in-any-order"><a href="#Given-an-m-x-n-matrix-of-distinct-numbers-return-all-lucky-numbers-in-the-matrix-in-any-order" class="headerlink" title="Given an m x n matrix of distinct numbers, return all lucky numbers in the matrix in any order."></a>Given an m x n matrix of distinct numbers, return all lucky numbers in the matrix in any order.</h2><h2 id="A-lucky-number-is-an-element-of-the-matrix-such-that-it-is-the-minimum-element-in-its-row-and-maximum-in-its-column"><a href="#A-lucky-number-is-an-element-of-the-matrix-such-that-it-is-the-minimum-element-in-its-row-and-maximum-in-its-column" class="headerlink" title="A lucky number is an element of the matrix such that it is the minimum element in its row and maximum in its column."></a>A lucky number is an element of the matrix such that it is the minimum element in its row and maximum in its column.</h2><pre><code class="python">class Solution:    def luckyNumbers(self, matrix: List[List[int]]) -&gt; List[int]:         m = len(matrix)        n = len(matrix[0])        # Calculate the strength of each row.        strengths = []        col=[]        res=[]                        for i, row in enumerate(matrix):            strength = row[0]            ind=0            for j in range(1,n):                if row[j]&lt;strength:                    ind=j                    strength=row[j]                           strengths.append((strength, ind))                for i in range(len(strengths)):            col = [sub[strengths[i][1]] for sub in matrix]            if strengths[i][0]==max(col):                res.append(strengths[i][0])        return res</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1380-Lucky-Numbers-in-a-Matrix-easy&quot;&gt;&lt;a href=&quot;#1380-Lucky-Numbers-in-a-Matrix-easy&quot; class=&quot;headerlink&quot; title=&quot;1380. Lucky Numbers in</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="Matrix" scheme="http://example.com/tags/Matrix/"/>
    
  </entry>
  
  <entry>
    <title>1337. The K Weakest Rows in a Matrix(easy)</title>
    <link href="http://example.com/2022/10/05/1337/"/>
    <id>http://example.com/2022/10/05/1337/</id>
    <published>2022-10-05T04:33:34.000Z</published>
    <updated>2022-10-05T04:36:00.914Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1337-The-K-Weakest-Rows-in-a-Matrix-easy"><a href="#1337-The-K-Weakest-Rows-in-a-Matrix-easy" class="headerlink" title="1337. The K Weakest Rows in a Matrix(easy)"></a>1337. The K Weakest Rows in a Matrix(easy)</h1><h2 id="You-are-given-an-m-x-n-binary-matrix-mat-of-1’s-representing-soldiers-and-0’s-representing-civilians-The-soldiers-are-positioned-in-front-of-the-civilians-That-is-all-the-1’s-will-appear-to-the-left-of-all-the-0’s-in-each-row"><a href="#You-are-given-an-m-x-n-binary-matrix-mat-of-1’s-representing-soldiers-and-0’s-representing-civilians-The-soldiers-are-positioned-in-front-of-the-civilians-That-is-all-the-1’s-will-appear-to-the-left-of-all-the-0’s-in-each-row" class="headerlink" title="You are given an m x n binary matrix mat of 1’s (representing soldiers) and 0’s (representing civilians). The soldiers are positioned in front of the civilians. That is, all the 1’s will appear to the left of all the 0’s in each row."></a>You are given an m x n binary matrix mat of 1’s (representing soldiers) and 0’s (representing civilians). The soldiers are positioned in front of the civilians. That is, all the 1’s will appear to the left of all the 0’s in each row.</h2><h2 id="A-row-i-is-weaker-than-a-row-j-if-one-of-the-following-is-true"><a href="#A-row-i-is-weaker-than-a-row-j-if-one-of-the-following-is-true" class="headerlink" title="A row i is weaker than a row j if one of the following is true:"></a>A row i is weaker than a row j if one of the following is true:</h2><h2 id="The-number-of-soldiers-in-row-i-is-less-than-the-number-of-soldiers-in-row-j"><a href="#The-number-of-soldiers-in-row-i-is-less-than-the-number-of-soldiers-in-row-j" class="headerlink" title="The number of soldiers in row i is less than the number of soldiers in row j."></a>The number of soldiers in row i is less than the number of soldiers in row j.</h2><h2 id="Both-rows-have-the-same-number-of-soldiers-and-i-lt-j"><a href="#Both-rows-have-the-same-number-of-soldiers-and-i-lt-j" class="headerlink" title="Both rows have the same number of soldiers and i &lt; j."></a>Both rows have the same number of soldiers and i &lt; j.</h2><h2 id="Return-the-indices-of-the-k-weakest-rows-in-the-matrix-ordered-from-weakest-to-strongest"><a href="#Return-the-indices-of-the-k-weakest-rows-in-the-matrix-ordered-from-weakest-to-strongest" class="headerlink" title="Return the indices of the k weakest rows in the matrix ordered from weakest to strongest."></a>Return the indices of the k weakest rows in the matrix ordered from weakest to strongest.</h2><p>思路分成两步，第一步先求出每行1的个数，用一个二维数组储存<br>第二步再输出前K个</p><p><a href="https://leetcode.com/problems/the-k-weakest-rows-in-a-matrix/solutions/501705/the-k-weakest-rows-in-a-matrix/">leetcode题解</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">kWeakestRows</span>(<span class="params">self, mat: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]], k: <span class="built_in">int</span></span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Note that there is a more conscise solution just below. This code</span></span><br><span class="line">    <span class="comment"># avoids the use of advanced language features.</span></span><br><span class="line"></span><br><span class="line">        m = <span class="built_in">len</span>(mat)</span><br><span class="line">        n = <span class="built_in">len</span>(mat[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Calculate the strength of each row.</span></span><br><span class="line">        strengths = []</span><br><span class="line">        <span class="keyword">for</span> i, row <span class="keyword">in</span> <span class="built_in">enumerate</span>(mat):</span><br><span class="line">            strength = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">                <span class="keyword">if</span> row[j] == <span class="number">0</span>: </span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                strength += <span class="number">1</span></span><br><span class="line">            strengths.append((strength, i))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Sort all the strengths. This will sort firstly by strength</span></span><br><span class="line">    <span class="comment"># and secondly by index.</span></span><br><span class="line">        strengths.sort()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Pull out and return the indexes of the smallest k entries.</span></span><br><span class="line">        indexes = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(k):</span><br><span class="line">            indexes.append(strengths[i][<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">return</span> indexes</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1337-The-K-Weakest-Rows-in-a-Matrix-easy&quot;&gt;&lt;a href=&quot;#1337-The-K-Weakest-Rows-in-a-Matrix-easy&quot; class=&quot;headerlink&quot; title=&quot;1337. The K </summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="Matrix" scheme="http://example.com/tags/Matrix/"/>
    
  </entry>
  
  <entry>
    <title>1351. Count Negative Numbers in a Sorted Matrix</title>
    <link href="http://example.com/2022/10/04/1351/"/>
    <id>http://example.com/2022/10/04/1351/</id>
    <published>2022-10-05T03:55:23.000Z</published>
    <updated>2022-10-05T03:58:41.841Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1351-Count-Negative-Numbers-in-a-Sorted-Matrix"><a href="#1351-Count-Negative-Numbers-in-a-Sorted-Matrix" class="headerlink" title="1351. Count Negative Numbers in a Sorted Matrix"></a>1351. Count Negative Numbers in a Sorted Matrix</h1><h2 id="Given-a-m-x-n-matrix-grid-which-is-sorted-in-non-increasing-order-both-row-wise-and-column-wise-return-the-number-of-negative-numbers-in-grid"><a href="#Given-a-m-x-n-matrix-grid-which-is-sorted-in-non-increasing-order-both-row-wise-and-column-wise-return-the-number-of-negative-numbers-in-grid" class="headerlink" title="Given a m x n matrix grid which is sorted in non-increasing order both row-wise and column-wise, return the number of negative numbers in grid."></a>Given a m x n matrix grid which is sorted in non-increasing order both row-wise and column-wise, return the number of negative numbers in grid.</h2><p>还是一样的，都是挨个遍历一遍</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">countNegatives</span>(<span class="params">self, grid: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        n=<span class="built_in">len</span>(grid)</span><br><span class="line">        m=<span class="built_in">len</span>(grid[<span class="number">0</span>])</span><br><span class="line">        res=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">                <span class="keyword">if</span> grid[i][j]&lt;<span class="number">0</span>:</span><br><span class="line">                    res+=<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1351-Count-Negative-Numbers-in-a-Sorted-Matrix&quot;&gt;&lt;a href=&quot;#1351-Count-Negative-Numbers-in-a-Sorted-Matrix&quot; class=&quot;headerlink&quot; title=&quot;</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="Matrix" scheme="http://example.com/tags/Matrix/"/>
    
  </entry>
  
  <entry>
    <title>832. Flipping an Image(easy)</title>
    <link href="http://example.com/2022/10/04/832/"/>
    <id>http://example.com/2022/10/04/832/</id>
    <published>2022-10-05T03:28:49.000Z</published>
    <updated>2022-10-05T03:45:04.873Z</updated>
    
    <content type="html"><![CDATA[<h1 id="832-Flipping-an-Image-easy"><a href="#832-Flipping-an-Image-easy" class="headerlink" title="832. Flipping an Image(easy)"></a>832. Flipping an Image(easy)</h1><h2 id="Given-an-n-x-n-binary-matrix-image-flip-the-image-horizontally-then-invert-it-and-return-the-resulting-image"><a href="#Given-an-n-x-n-binary-matrix-image-flip-the-image-horizontally-then-invert-it-and-return-the-resulting-image" class="headerlink" title="Given an n x n binary matrix image, flip the image horizontally, then invert it, and return the resulting image."></a>Given an n x n binary matrix image, flip the image horizontally, then invert it, and return the resulting image.</h2><h2 id="To-flip-an-image-horizontally-means-that-each-row-of-the-image-is-reversed"><a href="#To-flip-an-image-horizontally-means-that-each-row-of-the-image-is-reversed" class="headerlink" title="To flip an image horizontally means that each row of the image is reversed."></a>To flip an image horizontally means that each row of the image is reversed.</h2><h2 id="For-example-flipping-1-1-0-horizontally-results-in-0-1-1"><a href="#For-example-flipping-1-1-0-horizontally-results-in-0-1-1" class="headerlink" title="For example, flipping [1,1,0] horizontally results in [0,1,1]."></a>For example, flipping [1,1,0] horizontally results in [0,1,1].</h2><h2 id="To-invert-an-image-means-that-each-0-is-replaced-by-1-and-each-1-is-replaced-by-0"><a href="#To-invert-an-image-means-that-each-0-is-replaced-by-1-and-each-1-is-replaced-by-0" class="headerlink" title="To invert an image means that each 0 is replaced by 1, and each 1 is replaced by 0."></a>To invert an image means that each 0 is replaced by 1, and each 1 is replaced by 0.</h2><h2 id="For-example-inverting-0-1-1-results-in-1-0-0"><a href="#For-example-inverting-0-1-1-results-in-1-0-0" class="headerlink" title="For example, inverting [0,1,1] results in [1,0,0]."></a>For example, inverting [0,1,1] results in [1,0,0].</h2><p>两次遍历，第一次遍历是10互换，第二次遍历是前后数字互换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">flipAndInvertImage</span>(<span class="params">self, image: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]</span>) -&gt; <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]:</span></span><br><span class="line">        n=<span class="built_in">len</span>(image)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">                <span class="keyword">if</span> image[i][j]==<span class="number">1</span>:</span><br><span class="line">                    image[i][j]=<span class="number">0</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    image[i][j]=<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="keyword">if</span> n%<span class="number">2</span>==<span class="number">0</span>:</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n//<span class="number">2</span>):</span><br><span class="line">                    tmp=image[i][j]</span><br><span class="line">                    image[i][j]=image[i][n-j-<span class="number">1</span>]</span><br><span class="line">                    image[i][n-j-<span class="number">1</span>]=tmp</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n//<span class="number">2</span>+<span class="number">1</span>):</span><br><span class="line">                    tmp=image[i][j]</span><br><span class="line">                    image[i][j]=image[i][n-j-<span class="number">1</span>]</span><br><span class="line">                    image[i][n-j-<span class="number">1</span>]=tmp</span><br><span class="line">        <span class="keyword">return</span> image</span><br></pre></td></tr></table></figure><p>相对轻便的算法<br>[::-1] 顺序相反操作<br>[-1] 读取倒数第一个元素<br>[3::-1] 从下标为3（从0开始）的元素开始翻转读取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">flipAndInvertImage</span>(<span class="params">self, image: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]</span>) -&gt; <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]:</span></span><br><span class="line">        result=[]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> image:</span><br><span class="line">            result.append(i[::-<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(result)):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(result[i])):</span><br><span class="line">                <span class="keyword">if</span> result[i][j]==<span class="number">0</span>:</span><br><span class="line">                    result[i][j]=<span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    result[i][j]=<span class="number">0</span></span><br><span class="line">                    </span><br><span class="line">                    </span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;832-Flipping-an-Image-easy&quot;&gt;&lt;a href=&quot;#832-Flipping-an-Image-easy&quot; class=&quot;headerlink&quot; title=&quot;832. Flipping an Image(easy)&quot;&gt;&lt;/a&gt;832. F</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="Matrix" scheme="http://example.com/tags/Matrix/"/>
    
  </entry>
  
  <entry>
    <title>2373. Largest Local Values in a Matrix(easy)</title>
    <link href="http://example.com/2022/10/04/2373/"/>
    <id>http://example.com/2022/10/04/2373/</id>
    <published>2022-10-04T23:05:13.000Z</published>
    <updated>2022-10-04T23:06:58.170Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2373-Largest-Local-Values-in-a-Matrix-easy"><a href="#2373-Largest-Local-Values-in-a-Matrix-easy" class="headerlink" title="2373. Largest Local Values in a Matrix(easy)"></a>2373. Largest Local Values in a Matrix(easy)</h1><h2 id="You-are-given-an-n-x-n-integer-matrix-grid"><a href="#You-are-given-an-n-x-n-integer-matrix-grid" class="headerlink" title="You are given an n x n integer matrix grid."></a>You are given an n x n integer matrix grid.</h2><h2 id="Generate-an-integer-matrix-maxLocal-of-size-n-2-x-n-2-such-that"><a href="#Generate-an-integer-matrix-maxLocal-of-size-n-2-x-n-2-such-that" class="headerlink" title="Generate an integer matrix maxLocal of size (n - 2) x (n - 2) such that:"></a>Generate an integer matrix maxLocal of size (n - 2) x (n - 2) such that:</h2><p>maxLocal[i][j] is equal to the largest value of the 3 x 3 matrix in grid centered around row i + 1 and column j + 1.</p><h2 id="In-other-words-we-want-to-find-the-largest-value-in-every-contiguous-3-x-3-matrix-in-grid"><a href="#In-other-words-we-want-to-find-the-largest-value-in-every-contiguous-3-x-3-matrix-in-grid" class="headerlink" title="In other words, we want to find the largest value in every contiguous 3 x 3 matrix in grid."></a>In other words, we want to find the largest value in every contiguous 3 x 3 matrix in grid.</h2><h2 id="Return-the-generated-matrix"><a href="#Return-the-generated-matrix" class="headerlink" title="Return the generated matrix."></a>Return the generated matrix.</h2><p>二维矩阵遍历</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">largestLocal</span>(<span class="params">self, grid: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]</span>) -&gt; <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]:</span></span><br><span class="line">        n=<span class="built_in">len</span>(grid)</span><br><span class="line">        ans=[[<span class="number">0</span>]*(n-<span class="number">2</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n-<span class="number">2</span>)]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n-<span class="number">2</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n-<span class="number">2</span>):</span><br><span class="line">                ans[i][j]=<span class="built_in">max</span>(grid[x][y] <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(i,i+<span class="number">3</span>) <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(j,j+<span class="number">3</span>))</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2373-Largest-Local-Values-in-a-Matrix-easy&quot;&gt;&lt;a href=&quot;#2373-Largest-Local-Values-in-a-Matrix-easy&quot; class=&quot;headerlink&quot; title=&quot;2373. La</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="Matrix" scheme="http://example.com/tags/Matrix/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-skill11-matrix</title>
    <link href="http://example.com/2022/10/04/LeetCode-skill11-matrix/"/>
    <id>http://example.com/2022/10/04/LeetCode-skill11-matrix/</id>
    <published>2022-10-04T22:32:18.000Z</published>
    <updated>2022-10-04T22:40:16.352Z</updated>
    
    <content type="html"><![CDATA[<ol start="1672"><li>Richest Customer Wealth(easy)</li></ol><ol start="54"><li>Spiral Matrix(medium)</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol start=&quot;1672&quot;&gt;
&lt;li&gt;Richest Customer Wealth(easy)&lt;/li&gt;
&lt;/ol&gt;
&lt;ol start=&quot;54&quot;&gt;
&lt;li&gt;Spiral Matrix(medium)&lt;/li&gt;
&lt;/ol&gt;
</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="Matrix" scheme="http://example.com/tags/Matrix/"/>
    
  </entry>
  
  <entry>
    <title>1672. Richest Customer Wealth(easy)</title>
    <link href="http://example.com/2022/10/04/1672/"/>
    <id>http://example.com/2022/10/04/1672/</id>
    <published>2022-10-04T22:30:39.000Z</published>
    <updated>2022-10-04T22:42:25.913Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1672-Richest-Customer-Wealth-easy"><a href="#1672-Richest-Customer-Wealth-easy" class="headerlink" title="1672. Richest Customer Wealth(easy)"></a>1672. Richest Customer Wealth(easy)</h1><h2 id="You-are-given-an-m-x-n-integer-grid-accounts-where-accounts-i-j-is-the-amount-of-money-the-i​​​​​​​​​​​th​​​​-customer-has-in-the-j​​​​​​​​​​​th​​​​-bank-Return-the-wealth-that-the-richest-customer-has"><a href="#You-are-given-an-m-x-n-integer-grid-accounts-where-accounts-i-j-is-the-amount-of-money-the-i​​​​​​​​​​​th​​​​-customer-has-in-the-j​​​​​​​​​​​th​​​​-bank-Return-the-wealth-that-the-richest-customer-has" class="headerlink" title="You are given an m x n integer grid accounts where accounts[i][j] is the amount of money the i​​​​​​​​​​​th​​​​ customer has in the j​​​​​​​​​​​th​​​​ bank. Return the wealth that the richest customer has."></a>You are given an m x n integer grid accounts where accounts[i][j] is the amount of money the i​​​​​​​​​​​th​​​​ customer has in the j​​​​​​​​​​​th​​​​ bank. Return the wealth that the richest customer has.</h2><h2 id="A-customer’s-wealth-is-the-amount-of-money-they-have-in-all-their-bank-accounts-The-richest-customer-is-the-customer-that-has-the-maximum-wealth"><a href="#A-customer’s-wealth-is-the-amount-of-money-they-have-in-all-their-bank-accounts-The-richest-customer-is-the-customer-that-has-the-maximum-wealth" class="headerlink" title="A customer’s wealth is the amount of money they have in all their bank accounts. The richest customer is the customer that has the maximum wealth."></a>A customer’s wealth is the amount of money they have in all their bank accounts. The richest customer is the customer that has the maximum wealth.</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maximumWealth</span>(<span class="params">self, accounts: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        res=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(accounts)):</span><br><span class="line">            res=<span class="built_in">max</span>(res,<span class="built_in">sum</span>(accounts[i]))</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">```        </span><br><span class="line">```python</span><br><span class="line">accounts = [[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>]]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(accounts)) <span class="comment">#2 行</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(accounts[<span class="number">0</span>])) <span class="comment">#3 列</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1672-Richest-Customer-Wealth-easy&quot;&gt;&lt;a href=&quot;#1672-Richest-Customer-Wealth-easy&quot; class=&quot;headerlink&quot; title=&quot;1672. Richest Customer Wea</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="Matrix" scheme="http://example.com/tags/Matrix/"/>
    
  </entry>
  
  <entry>
    <title>171. Excel Sheet Column Number(easy)</title>
    <link href="http://example.com/2022/10/03/171/"/>
    <id>http://example.com/2022/10/03/171/</id>
    <published>2022-10-03T20:24:59.000Z</published>
    <updated>2022-10-09T21:40:22.042Z</updated>
    
    <content type="html"><![CDATA[<h1 id="171-Excel-Sheet-Column-Number-easy"><a href="#171-Excel-Sheet-Column-Number-easy" class="headerlink" title="171. Excel Sheet Column Number(easy)"></a>171. Excel Sheet Column Number(easy)</h1><h2 id="Given-a-string-columnTitle-that-represents-the-column-title-as-appears-in-an-Excel-sheet-return-its-corresponding-column-number"><a href="#Given-a-string-columnTitle-that-represents-the-column-title-as-appears-in-an-Excel-sheet-return-its-corresponding-column-number" class="headerlink" title="Given a string columnTitle that represents the column title as appears in an Excel sheet, return its corresponding column number."></a>Given a string columnTitle that represents the column title as appears in an Excel sheet, return its corresponding column number.</h2><h2 id="For-example"><a href="#For-example" class="headerlink" title="For example:"></a>For example:</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">A -&gt; 1</span><br><span class="line">B -&gt; 2</span><br><span class="line">C -&gt; 3</span><br><span class="line">...</span><br><span class="line">Z -&gt; 26</span><br><span class="line">AA -&gt; 27</span><br><span class="line">AB -&gt; 28 </span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>这道题是一经典题目，相当于从26进制转换成十进制，这是一个标准算法，我们从右到左迭代数字，并将它们乘以基数到数字位置的幂。为了将字母转换为数字，我们使用ord，该方法返回字母的Unicode代码。通过将代码减去 64，我们可以将字母映射到从 1 到 26 的数字。<br>和 168. Excel Sheet Column Title(easy) 是一道镜像题目</p><p>26进制转换为十进制，相当于K*(26^(n-1))</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">titleToNumber</span>(<span class="params">self, columnTitle: <span class="built_in">str</span></span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        val=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i,c <span class="keyword">in</span> <span class="built_in">enumerate</span>(<span class="built_in">reversed</span>(columnTitle)):</span><br><span class="line">            val+=(<span class="number">26</span>**i)*(<span class="built_in">ord</span>(c) - <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>) + <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> val</span><br><span class="line"></span><br><span class="line"><span class="comment">#** 代表乘方</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;171-Excel-Sheet-Column-Number-easy&quot;&gt;&lt;a href=&quot;#171-Excel-Sheet-Column-Number-easy&quot; class=&quot;headerlink&quot; title=&quot;171. Excel Sheet Column </summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="bitwise" scheme="http://example.com/tags/bitwise/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-skill10-Data-structure-design</title>
    <link href="http://example.com/2022/10/03/LeetCode-skill10-Data-structure-design/"/>
    <id>http://example.com/2022/10/03/LeetCode-skill10-Data-structure-design/</id>
    <published>2022-10-03T20:10:46.000Z</published>
    <updated>2022-10-09T21:39:21.247Z</updated>
    
    <content type="html"><![CDATA[<ol start="170"><li><p>Two Sum III - Data structure design(easy)</p></li><li><p>Implement Stack using Queues(easy)</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol start=&quot;170&quot;&gt;
&lt;li&gt;&lt;p&gt;Two Sum III - Data structure design(easy)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Implement Stack using Queues(easy)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="Data structure design" scheme="http://example.com/tags/Data-structure-design/"/>
    
  </entry>
  
</feed>
