<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>八角书屋</title>
  
  <subtitle>Engineering House</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-11-15T02:28:15.069Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>leaf</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>49. Group Anagrams(medium)</title>
    <link href="http://example.com/2022/11/14/49/"/>
    <id>http://example.com/2022/11/14/49/</id>
    <published>2022-11-15T02:19:26.000Z</published>
    <updated>2022-11-15T02:28:15.069Z</updated>
    
    <content type="html"><![CDATA[<h1 id="49-Group-Anagrams-medium"><a href="#49-Group-Anagrams-medium" class="headerlink" title="49. Group Anagrams(medium)"></a>49. Group Anagrams(medium)</h1><h2 id="Given-an-array-of-strings-strs-group-the-anagrams-together-You-can-return-the-answer-in-any-order"><a href="#Given-an-array-of-strings-strs-group-the-anagrams-together-You-can-return-the-answer-in-any-order" class="headerlink" title="Given an array of strings strs, group the anagrams together. You can return the answer in any order."></a>Given an array of strings strs, group the anagrams together. You can return the answer in any order.</h2><h2 id="An-Anagram-is-a-word-or-phrase-formed-by-rearranging-the-letters-of-a-different-word-or-phrase-typically-using-all-the-original-letters-exactly-once"><a href="#An-Anagram-is-a-word-or-phrase-formed-by-rearranging-the-letters-of-a-different-word-or-phrase-typically-using-all-the-original-letters-exactly-once" class="headerlink" title="An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once."></a>An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;49-Group-Anagrams-medium&quot;&gt;&lt;a href=&quot;#49-Group-Anagrams-medium&quot; class=&quot;headerlink&quot; title=&quot;49. Group Anagrams(medium)&quot;&gt;&lt;/a&gt;49. Group An</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="hashmap" scheme="http://example.com/tags/hashmap/"/>
    
  </entry>
  
  <entry>
    <title>217. Contains Duplicate(easy)</title>
    <link href="http://example.com/2022/11/14/217/"/>
    <id>http://example.com/2022/11/14/217/</id>
    <published>2022-11-15T02:03:23.000Z</published>
    <updated>2022-11-15T02:05:19.176Z</updated>
    
    <content type="html"><![CDATA[<h1 id="217-Contains-Duplicate-easy"><a href="#217-Contains-Duplicate-easy" class="headerlink" title="217. Contains Duplicate(easy)"></a>217. Contains Duplicate(easy)</h1><h1 id="Given-an-integer-array-nums-return-true-if-any-value-appears-at-least-twice-in-the-array-and-return-false-if-every-element-is-distinct"><a href="#Given-an-integer-array-nums-return-true-if-any-value-appears-at-least-twice-in-the-array-and-return-false-if-every-element-is-distinct" class="headerlink" title="Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct."></a>Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [1,2,3,1]</span><br><span class="line">Output: true</span><br></pre></td></tr></table></figure><p>利用ｓｅｔ的去重属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">containsDuplicate</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">bool</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(<span class="built_in">set</span>(nums))!=<span class="built_in">len</span>(nums)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;217-Contains-Duplicate-easy&quot;&gt;&lt;a href=&quot;#217-Contains-Duplicate-easy&quot; class=&quot;headerlink&quot; title=&quot;217. Contains Duplicate(easy)&quot;&gt;&lt;/a&gt;217</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="set" scheme="http://example.com/tags/set/"/>
    
  </entry>
  
  <entry>
    <title>2131. Longest Palindrome by Concatenating Two Letter Words(medium)</title>
    <link href="http://example.com/2022/11/12/2131/"/>
    <id>http://example.com/2022/11/12/2131/</id>
    <published>2022-11-12T22:34:35.000Z</published>
    <updated>2022-11-12T22:38:56.640Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2131-Longest-Palindrome-by-Concatenating-Two-Letter-Words-medium"><a href="#2131-Longest-Palindrome-by-Concatenating-Two-Letter-Words-medium" class="headerlink" title="2131. Longest Palindrome by Concatenating Two Letter Words(medium)"></a>2131. Longest Palindrome by Concatenating Two Letter Words(medium)</h1><h2 id="You-are-given-an-array-of-strings-words-Each-element-of-words-consists-of-two-lowercase-English-letters"><a href="#You-are-given-an-array-of-strings-words-Each-element-of-words-consists-of-two-lowercase-English-letters" class="headerlink" title="You are given an array of strings words. Each element of words consists of two lowercase English letters."></a>You are given an array of strings words. Each element of words consists of two lowercase English letters.</h2><h2 id="Create-the-longest-possible-palindrome-by-selecting-some-elements-from-words-and-concatenating-them-in-any-order-Each-element-can-be-selected-at-most-once"><a href="#Create-the-longest-possible-palindrome-by-selecting-some-elements-from-words-and-concatenating-them-in-any-order-Each-element-can-be-selected-at-most-once" class="headerlink" title="Create the longest possible palindrome by selecting some elements from words and concatenating them in any order. Each element can be selected at most once."></a>Create the longest possible palindrome by selecting some elements from words and concatenating them in any order. Each element can be selected at most once.</h2><h2 id="Return-the-length-of-the-longest-palindrome-that-you-can-create-If-it-is-impossible-to-create-any-palindrome-return-0"><a href="#Return-the-length-of-the-longest-palindrome-that-you-can-create-If-it-is-impossible-to-create-any-palindrome-return-0" class="headerlink" title="Return the length of the longest palindrome that you can create. If it is impossible to create any palindrome, return 0."></a>Return the length of the longest palindrome that you can create. If it is impossible to create any palindrome, return 0.</h2><h2 id="A-palindrome-is-a-string-that-reads-the-same-forward-and-backward"><a href="#A-palindrome-is-a-string-that-reads-the-same-forward-and-backward" class="headerlink" title="A palindrome is a string that reads the same forward and backward."></a>A palindrome is a string that reads the same forward and backward.</h2><p><a href="https://leetcode.cn/problems/longest-palindrome-by-concatenating-two-letter-words/solutions/1202034/lian-jie-liang-zi-mu-dan-ci-de-dao-de-zu-vs99/">力扣官方题解</a></p><p>方法一：贪心 + 哈希表<br>思路与算法</p><p>根据回文串的定义，回文串可以由奇数或者偶数个 words 中的单词拼接而成，但必须满足以下条件：</p><p>如果数量为奇数，那么位于正中间的单词必须是回文字符串（即两个字符相等）；</p><p>每个单词和反转后对应位置的单词必须互为反转字符串。</p><p>根据上面的两个条件，我们可以得出构造最长回文串的规则：</p><p>对于两个字符不同的单词，需要尽可能多的成对选择它和它的反转字符串（如有）；</p><p>对于两个字符相同的单词，需要尽可能多的成对选择该单词；</p><p>如果按照上述条件挑选后，仍然存在未被选择的两个字符相同的单词（此时该字符串只可能有一个未被选择，且该字符串一定在 words 中出现奇数次），我们可以任意选择一个。</p><p>因此，我们用哈希表统计 words 中每个单词的出现次数。随后，我们遍历哈希表的所有元素，并用 res 维护可能构成回文字符串的最长长度，同时用初值为 false 的布尔变量 mid 判断是否存在可以作为中心单词的、出现奇数次的回文单词。在遍历到字符串 word 时，我们首先求出它反转后的字符串 rev，此时根据 word 与 rev 的关系，有以下两种情况：</p><p>word≠rev，此时我们需要统计两者在 words 出现次数的最小值，即为成对选择的最多数目。假设此时对数为 n，则其对最长回文字符串贡献的字符长度为 4n，我们将 res 加上对应值；</p><p>word=rev，此时可以构成的对数为 ⌊m/2⌋，即对最长回文字符串贡献的字符长度为 4⌊m/2⌋，我们同样将 res 加上对应值。除此以外，我们还需要判断 word 的出现次数 m 是否为奇数：</p><p>如果 m 为奇数，则存在可以作为中心单词的剩余回文单词，我们将 mid 置为 true；</p><p>如果 m 为偶数，则不存在可以作为中心单词的剩余回文单词，我们不改变 mid 的取值。</p><p>最后，我们根据 mid 的取值，判断最长回文串是否含有中心单词。如果 mid 为 true，则代表含有，我们将 res 加上 2；反之则没有，我们不进行任何操作。</p><p>最后，我们返回 res 作为最长回文串的长度。</p><p>细节</p><p>在遍历哈希表中的每个单词时，为了避免重复计算成对选择的单词，我们只在 word 的字典序大于等于 rev 时更新 res。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestPalindrome</span>(<span class="params">self, words: <span class="type">List</span>[<span class="built_in">str</span>]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        freq = Counter(words)   <span class="comment"># 单词出现次数</span></span><br><span class="line">        res = <span class="number">0</span>   <span class="comment"># 最长回文串长度</span></span><br><span class="line">        mid = <span class="literal">False</span>   <span class="comment"># 是否含有中心单词</span></span><br><span class="line">        <span class="keyword">for</span> word, cnt <span class="keyword">in</span> freq.items():</span><br><span class="line">            <span class="comment"># 遍历出现的单词，并更新长度</span></span><br><span class="line">            rev = word[<span class="number">1</span>] + word[<span class="number">0</span>]   <span class="comment"># 反转后的单词</span></span><br><span class="line">            <span class="keyword">if</span> word == rev:</span><br><span class="line">                <span class="keyword">if</span> cnt % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">                    mid = <span class="literal">True</span></span><br><span class="line">                res += <span class="number">2</span> * (cnt // <span class="number">2</span> * <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">elif</span> word &gt; rev:   <span class="comment"># 避免重复遍历</span></span><br><span class="line">                res += <span class="number">4</span> * <span class="built_in">min</span>(freq[word], freq[rev])</span><br><span class="line">        <span class="keyword">if</span> mid:</span><br><span class="line">            <span class="comment"># 含有中心单词，更新长度</span></span><br><span class="line">            res += <span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2131-Longest-Palindrome-by-Concatenating-Two-Letter-Words-medium&quot;&gt;&lt;a href=&quot;#2131-Longest-Palindrome-by-Concatenating-Two-Letter-Word</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="hashmap" scheme="http://example.com/tags/hashmap/"/>
    
    <category term="greedy" scheme="http://example.com/tags/greedy/"/>
    
  </entry>
  
  <entry>
    <title>1641. Count Sorted Vowel Strings(medium)</title>
    <link href="http://example.com/2022/11/12/1641/"/>
    <id>http://example.com/2022/11/12/1641/</id>
    <published>2022-11-12T22:15:19.000Z</published>
    <updated>2022-11-12T22:18:46.410Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1641-Count-Sorted-Vowel-Strings-medium"><a href="#1641-Count-Sorted-Vowel-Strings-medium" class="headerlink" title="1641. Count Sorted Vowel Strings(medium)"></a>1641. Count Sorted Vowel Strings(medium)</h1><h2 id="Given-an-integer-n-return-the-number-of-strings-of-length-n-that-consist-only-of-vowels-a-e-i-o-u-and-are-lexicographically-sorted"><a href="#Given-an-integer-n-return-the-number-of-strings-of-length-n-that-consist-only-of-vowels-a-e-i-o-u-and-are-lexicographically-sorted" class="headerlink" title="Given an integer n, return the number of strings of length n that consist only of vowels (a, e, i, o, u) and are lexicographically sorted."></a>Given an integer n, return the number of strings of length n that consist only of vowels (a, e, i, o, u) and are lexicographically sorted.</h2><h2 id="A-string-s-is-lexicographically-sorted-if-for-all-valid-i-s-i-is-the-same-as-or-comes-before-s-i-1-in-the-alphabet"><a href="#A-string-s-is-lexicographically-sorted-if-for-all-valid-i-s-i-is-the-same-as-or-comes-before-s-i-1-in-the-alphabet" class="headerlink" title="A string s is lexicographically sorted if for all valid i, s[i] is the same as or comes before s[i+1] in the alphabet."></a>A string s is lexicographically sorted if for all valid i, s[i] is the same as or comes before s[i+1] in the alphabet.</h2><h3 id="官方解法"><a href="#官方解法" class="headerlink" title="官方解法"></a><a href="">官方解法</a></h3><h3 id="数学解法"><a href="#数学解法" class="headerlink" title="数学解法"></a><a href="https://leetcode.cn/problems/count-sorted-vowel-strings/solutions/469467/zhong-xue-shu-xue-ke-pu-n-ge-xiao-qiu-fang-dao-m-g/">数学解法</a></h3><p>看到题目的第一眼就感觉这是排列组合，但没想好怎么写出排列的公式，这位大佬的思路太牛了：</p><h4 id="这个问题的数学解法，可以把问题转换成将-n-个小球放到-5-个盒子里，盒子可以为空。"><a href="#这个问题的数学解法，可以把问题转换成将-n-个小球放到-5-个盒子里，盒子可以为空。" class="headerlink" title="这个问题的数学解法，可以把问题转换成将 n 个小球放到 5 个盒子里，盒子可以为空。"></a>这个问题的数学解法，可以把问题转换成将 n 个小球放到 5 个盒子里，盒子可以为空。</h4><p>我们可以想象成把 n 个字符分配给五个元音所代表的盒子中。一旦每个盒子中的字符个数定了，那么这个字符串也固定下来了。因为题目要求必须是字典序，所以一定 a 字符在最前；其次是 e 字符；其次是 i 字符；其次是 o 字符；其次是 u 字符。</p><p>下面问题的关键就是，n 个小球放到 5 个盒子里，盒子可以为空，一共有多少种方法？</p><p>这是经典的中学数学问题。更一般的，我们来探讨，将 n 个小球放到 m 个盒子里，有多少种方法？</p><p>首先，我们考虑问题的简单版本，即盒子不能为空的情况。</p><p>此时，我们只需要在 n 个小球排成一排，中间放 m - 1 个隔板，放好以后，相当于把 n 个小球分成了 m 份。每一份对应一个盒子里的小球数量。</p><p>因为盒子不能为空，所以两个小球之间不可能放多个隔板，左右两端也不可能放隔板。因此，放隔板的位置有 n - 1 个，我们要放 m - 1 个隔板。答案为 C(n - 1, m - 1)。</p><p>有了这个结论，再来讨论问题的复杂版本，就简单了，即盒子可以为空的情况。</p><p>此时，我们只需要先拿 m 个新的小球，在 m 个盒子里，每个盒子中扔进去一个小球。之后，再分配原来的这 n 个小球，得到的分配结果，肯定 m 个盒子里都不为空。但此时，我们使用了 n + m 个小球。</p><p>换句话说，把 n 个小球放到 m 个盒子里，盒子可以为空，等价于：把 n + m 个小球放到 m 个盒子里，盒子不能为空。</p><p>大家也可以想成是：我们先把 n + m 个小球放到 m 个盒子里，盒子不能为空，然后再在每个盒子里拿走 1 个小球，总共拿走了 m 个小球，得到的结果，就是把 n 个小球放到 m 个盒子里，盒子可以为空的解。</p><p>把 n + m 个小球放到 m 个盒子里，盒子不能为空的分法，带入上面的公式，就是 C(n + m - 1, m - 1)</p><p>所以，把 n 个小球放到 m 个盒子里，盒子可以为空，答案为 C(n + m - 1, m - 1)。</p><h4 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h4><p>将 n 个小球放到 m 个盒子里，盒子不为空：C(n - 1, m - 1)；</p><p>将 n 个小球放到 m 个盒子里，盒子可以空：C(n + m - 1, m - 1)；</p><p>对于这个问题，m = 5，盒子可以为空，所以答案是 C(n + 5 - 1, 5 - 1) = C(n + 4, 4)</p><h4 id="提醒："><a href="#提醒：" class="headerlink" title="提醒："></a>提醒：</h4><p>分成五个盒子，首先不论空与不空，我们的五个盒子最终组成我们答案的形式是生成与每个盒子数量相等的对应字符串，然后把五个字符串穿起来，如aa+e+i+o+u这种，盒子里球的数量是某一个元音字母连续出现的数量，所以可以空</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1641-Count-Sorted-Vowel-Strings-medium&quot;&gt;&lt;a href=&quot;#1641-Count-Sorted-Vowel-Strings-medium&quot; class=&quot;headerlink&quot; title=&quot;1641. Count Sort</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="math" scheme="http://example.com/tags/math/"/>
    
    <category term="dynamic programming" scheme="http://example.com/tags/dynamic-programming/"/>
    
  </entry>
  
  <entry>
    <title>1646. Get Maximum in Generated Array(easy)</title>
    <link href="http://example.com/2022/11/10/1646/"/>
    <id>http://example.com/2022/11/10/1646/</id>
    <published>2022-11-10T22:27:01.000Z</published>
    <updated>2022-11-10T22:29:54.218Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1646-Get-Maximum-in-Generated-Array-easy"><a href="#1646-Get-Maximum-in-Generated-Array-easy" class="headerlink" title="1646. Get Maximum in Generated Array(easy)"></a>1646. Get Maximum in Generated Array(easy)</h1><h2 id="You-are-given-an-integer-n-A-0-indexed-integer-array-nums-of-length-n-1-is-generated-in-the-following-way"><a href="#You-are-given-an-integer-n-A-0-indexed-integer-array-nums-of-length-n-1-is-generated-in-the-following-way" class="headerlink" title="You are given an integer n. A 0-indexed integer array nums of length n + 1 is generated in the following way:"></a>You are given an integer n. A 0-indexed integer array nums of length n + 1 is generated in the following way:</h2><p>nums[0] = 0<br>nums[1] = 1<br>nums[2 * i] = nums[i] when 2 &lt;= 2 * i &lt;= n<br>nums[2 * i + 1] = nums[i] + nums[i + 1] when 2 &lt;= 2 * i + 1 &lt;= n<br>Return the maximum integer in the array nums​​​.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Input: n = 7</span><br><span class="line">Output: 3</span><br><span class="line">Explanation: According to the given rules:</span><br><span class="line">  nums[0] = 0</span><br><span class="line">  nums[1] = 1</span><br><span class="line">  nums[(1 * 2) = 2] = nums[1] = 1</span><br><span class="line">  nums[(1 * 2) + 1 = 3] = nums[1] + nums[2] = 1 + 1 = 2</span><br><span class="line">  nums[(2 * 2) = 4] = nums[2] = 1</span><br><span class="line">  nums[(2 * 2) + 1 = 5] = nums[2] + nums[3] = 1 + 2 = 3</span><br><span class="line">  nums[(3 * 2) = 6] = nums[3] = 2</span><br><span class="line">  nums[(3 * 2) + 1 = 7] = nums[3] + nums[4] = 2 + 1 = 3</span><br><span class="line">Hence, nums = [0,1,1,2,1,3,2,3], and the maximum is max(0,1,1,2,1,3,2,3) = 3.</span><br></pre></td></tr></table></figure><h3 id="官方题解"><a href="#官方题解" class="headerlink" title="官方题解"></a><a href="https://leetcode.cn/problems/get-maximum-in-generated-array/solutions/952714/huo-qu-sheng-cheng-shu-zu-zhong-de-zui-d-0z2l/">官方题解</a></h3><p>我们可以直接根据题目中描述的规则来计算出 nums 数组，并返回其最大元素。</p><p>为了简化代码逻辑，我们可以化简题目中的递推式。当 i≥2 时：</p><p>当i为偶数，nums[i]=nums[i//2]<br>当i为奇数，nums[i]=nums[i//2]+nums[i//2+1]</p><p>所以总结在一起是，nums[i]=nums[i//2]+i%2*nums[i//2+1]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getMaximumGenerated</span>(<span class="params">self, n: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        <span class="keyword">if</span> n==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        dp=[<span class="number">0</span>]*(n+<span class="number">1</span>)</span><br><span class="line">        dp[<span class="number">1</span>]=<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,n+<span class="number">1</span>):</span><br><span class="line">            dp[i]=dp[i//<span class="number">2</span>]+i%<span class="number">2</span>*dp[i//<span class="number">2</span>+<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(dp)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1646-Get-Maximum-in-Generated-Array-easy&quot;&gt;&lt;a href=&quot;#1646-Get-Maximum-in-Generated-Array-easy&quot; class=&quot;headerlink&quot; title=&quot;1646. Get Ma</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="math" scheme="http://example.com/tags/math/"/>
    
    <category term="dynamic programming" scheme="http://example.com/tags/dynamic-programming/"/>
    
  </entry>
  
  <entry>
    <title>1025. Divisor Game(easy)</title>
    <link href="http://example.com/2022/11/10/1025/"/>
    <id>http://example.com/2022/11/10/1025/</id>
    <published>2022-11-10T22:01:15.000Z</published>
    <updated>2022-11-10T22:06:07.448Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1025-Divisor-Game-easy"><a href="#1025-Divisor-Game-easy" class="headerlink" title="1025. Divisor Game(easy)"></a>1025. Divisor Game(easy)</h1><h2 id="Alice-and-Bob-take-turns-playing-a-game-with-Alice-starting-first"><a href="#Alice-and-Bob-take-turns-playing-a-game-with-Alice-starting-first" class="headerlink" title="Alice and Bob take turns playing a game, with Alice starting first."></a>Alice and Bob take turns playing a game, with Alice starting first.</h2><h2 id="Initially-there-is-a-number-n-on-the-chalkboard-On-each-player’s-turn-that-player-makes-a-move-consisting-of"><a href="#Initially-there-is-a-number-n-on-the-chalkboard-On-each-player’s-turn-that-player-makes-a-move-consisting-of" class="headerlink" title="Initially, there is a number n on the chalkboard. On each player’s turn, that player makes a move consisting of:"></a>Initially, there is a number n on the chalkboard. On each player’s turn, that player makes a move consisting of:</h2><p>Choosing any x with 0 &lt; x &lt; n and n % x == 0.<br>Replacing the number n on the chalkboard with n - x.<br>Also, if a player cannot make a move, they lose the game.</p><h2 id="Return-true-if-and-only-if-Alice-wins-the-game-assuming-both-players-play-optimally"><a href="#Return-true-if-and-only-if-Alice-wins-the-game-assuming-both-players-play-optimally" class="headerlink" title="Return true if and only if Alice wins the game, assuming both players play optimally."></a>Return true if and only if Alice wins the game, assuming both players play optimally.</h2><p>基本思路：</p><p>最终结果应该是占到 2 的赢，占到 1 的输；</p><p>若当前为奇数，奇数的约数只能是奇数或者 1，因此下一个一定是偶数；</p><p>若当前为偶数， 偶数的约数可以是奇数可以是偶数也可以是 1，因此直接减 1，则下一个是奇数；</p><p>因此，奇则输，偶则赢。直接:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">divisorGame</span>(<span class="params">self, n: <span class="built_in">int</span></span>) -&gt; <span class="built_in">bool</span>:</span></span><br><span class="line">        <span class="keyword">return</span> n%<span class="number">2</span>==<span class="number">0</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1025-Divisor-Game-easy&quot;&gt;&lt;a href=&quot;#1025-Divisor-Game-easy&quot; class=&quot;headerlink&quot; title=&quot;1025. Divisor Game(easy)&quot;&gt;&lt;/a&gt;1025. Divisor Game</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="math" scheme="http://example.com/tags/math/"/>
    
    <category term="dynamic programming" scheme="http://example.com/tags/dynamic-programming/"/>
    
  </entry>
  
  <entry>
    <title>1047. Remove All Adjacent Duplicates In String(easy)</title>
    <link href="http://example.com/2022/11/10/1047/"/>
    <id>http://example.com/2022/11/10/1047/</id>
    <published>2022-11-10T21:52:01.000Z</published>
    <updated>2022-11-10T22:05:59.242Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1047-Remove-All-Adjacent-Duplicates-In-String-easy"><a href="#1047-Remove-All-Adjacent-Duplicates-In-String-easy" class="headerlink" title="1047. Remove All Adjacent Duplicates In String(easy)"></a>1047. Remove All Adjacent Duplicates In String(easy)</h1><h2 id="You-are-given-a-string-s-consisting-of-lowercase-English-letters-A-duplicate-removal-consists-of-choosing-two-adjacent-and-equal-letters-and-removing-them"><a href="#You-are-given-a-string-s-consisting-of-lowercase-English-letters-A-duplicate-removal-consists-of-choosing-two-adjacent-and-equal-letters-and-removing-them" class="headerlink" title="You are given a string s consisting of lowercase English letters. A duplicate removal consists of choosing two adjacent and equal letters and removing them."></a>You are given a string s consisting of lowercase English letters. A duplicate removal consists of choosing two adjacent and equal letters and removing them.</h2><h2 id="We-repeatedly-make-duplicate-removals-on-s-until-we-no-longer-can"><a href="#We-repeatedly-make-duplicate-removals-on-s-until-we-no-longer-can" class="headerlink" title="We repeatedly make duplicate removals on s until we no longer can."></a>We repeatedly make duplicate removals on s until we no longer can.</h2><h2 id="Return-the-final-string-after-all-such-duplicate-removals-have-been-made-It-can-be-proven-that-the-answer-is-unique"><a href="#Return-the-final-string-after-all-such-duplicate-removals-have-been-made-It-can-be-proven-that-the-answer-is-unique" class="headerlink" title="Return the final string after all such duplicate removals have been made. It can be proven that the answer is unique."></a>Return the final string after all such duplicate removals have been made. It can be proven that the answer is unique.</h2><p>这道题用栈就可以解决，输入进来判断和stack队首是否相等，如果相等就弹出，不相等就存进去</p><pre><code class="python">class Solution:    def removeDuplicates(self, s: str) -&gt; str:        stack=[]        for letter in s:            if stack and letter==stack[-1]:                stack.pop()            else:                stack.append(letter)        return &quot;&quot;.join(stack)</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1047-Remove-All-Adjacent-Duplicates-In-String-easy&quot;&gt;&lt;a href=&quot;#1047-Remove-All-Adjacent-Duplicates-In-String-easy&quot; class=&quot;headerlink&quot;</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="stack" scheme="http://example.com/tags/stack/"/>
    
  </entry>
  
  <entry>
    <title>905. Sort Array By Parity(easy)</title>
    <link href="http://example.com/2022/11/09/905/"/>
    <id>http://example.com/2022/11/09/905/</id>
    <published>2022-11-09T22:18:43.000Z</published>
    <updated>2022-11-09T22:25:18.014Z</updated>
    
    <content type="html"><![CDATA[<h1 id="905-Sort-Array-By-Parity-easy"><a href="#905-Sort-Array-By-Parity-easy" class="headerlink" title="905. Sort Array By Parity(easy)"></a>905. Sort Array By Parity(easy)</h1><h2 id="Given-an-integer-array-nums-move-all-the-even-integers-at-the-beginning-of-the-array-followed-by-all-the-odd-integers"><a href="#Given-an-integer-array-nums-move-all-the-even-integers-at-the-beginning-of-the-array-followed-by-all-the-odd-integers" class="headerlink" title="Given an integer array nums, move all the even integers at the beginning of the array followed by all the odd integers."></a>Given an integer array nums, move all the even integers at the beginning of the array followed by all the odd integers.</h2><h2 id="Return-any-array-that-satisfies-this-condition"><a href="#Return-any-array-that-satisfies-this-condition" class="headerlink" title="Return any array that satisfies this condition."></a>Return any array that satisfies this condition.</h2><p>偶数放前面，奇数放后面</p><p>第一种方法<br>对%2的值排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sortArrayByParity</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span></span><br><span class="line">        nums.sort(key = <span class="keyword">lambda</span> x: x % <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> nums</span><br></pre></td></tr></table></figure><p>第二种方法<br>通过交换队首和队尾的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sortArrayByParity</span>(<span class="params">self, nums</span>):</span></span><br><span class="line">        i, j = <span class="number">0</span>, <span class="built_in">len</span>(nums) - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j:</span><br><span class="line">            <span class="keyword">if</span> nums[i] % <span class="number">2</span> &gt; nums[j] % <span class="number">2</span>:</span><br><span class="line">                nums[i], nums[j] = nums[j], nums[i]</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> nums[i] % <span class="number">2</span> == <span class="number">0</span>: i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> nums[j] % <span class="number">2</span> == <span class="number">1</span>: j -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> nums</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;905-Sort-Array-By-Parity-easy&quot;&gt;&lt;a href=&quot;#905-Sort-Array-By-Parity-easy&quot; class=&quot;headerlink&quot; title=&quot;905. Sort Array By Parity(easy)&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="sort" scheme="http://example.com/tags/sort/"/>
    
  </entry>
  
  <entry>
    <title>904. Fruit Into Baskets(medium)</title>
    <link href="http://example.com/2022/11/09/904/"/>
    <id>http://example.com/2022/11/09/904/</id>
    <published>2022-11-09T22:13:16.000Z</published>
    <updated>2022-11-09T22:24:54.036Z</updated>
    
    <content type="html"><![CDATA[<h1 id="904-Fruit-Into-Baskets-medium"><a href="#904-Fruit-Into-Baskets-medium" class="headerlink" title="904. Fruit Into Baskets(medium)"></a>904. Fruit Into Baskets(medium)</h1><h2 id="You-are-visiting-a-farm-that-has-a-single-row-of-fruit-trees-arranged-from-left-to-right-The-trees-are-represented-by-an-integer-array-fruits-where-fruits-i-is-the-type-of-fruit-the-ith-tree-produces"><a href="#You-are-visiting-a-farm-that-has-a-single-row-of-fruit-trees-arranged-from-left-to-right-The-trees-are-represented-by-an-integer-array-fruits-where-fruits-i-is-the-type-of-fruit-the-ith-tree-produces" class="headerlink" title="You are visiting a farm that has a single row of fruit trees arranged from left to right. The trees are represented by an integer array fruits where fruits[i] is the type of fruit the ith tree produces."></a>You are visiting a farm that has a single row of fruit trees arranged from left to right. The trees are represented by an integer array fruits where fruits[i] is the type of fruit the ith tree produces.</h2><h2 id="You-want-to-collect-as-much-fruit-as-possible-However-the-owner-has-some-strict-rules-that-you-must-follow"><a href="#You-want-to-collect-as-much-fruit-as-possible-However-the-owner-has-some-strict-rules-that-you-must-follow" class="headerlink" title="You want to collect as much fruit as possible. However, the owner has some strict rules that you must follow:"></a>You want to collect as much fruit as possible. However, the owner has some strict rules that you must follow:</h2><h2 id="You-only-have-two-baskets-and-each-basket-can-only-hold-a-single-type-of-fruit-There-is-no-limit-on-the-amount-of-fruit-each-basket-can-hold"><a href="#You-only-have-two-baskets-and-each-basket-can-only-hold-a-single-type-of-fruit-There-is-no-limit-on-the-amount-of-fruit-each-basket-can-hold" class="headerlink" title="You only have two baskets, and each basket can only hold a single type of fruit. There is no limit on the amount of fruit each basket can hold."></a>You only have two baskets, and each basket can only hold a single type of fruit. There is no limit on the amount of fruit each basket can hold.</h2><h2 id="Starting-from-any-tree-of-your-choice-you-must-pick-exactly-one-fruit-from-every-tree-including-the-start-tree-while-moving-to-the-right-The-picked-fruits-must-fit-in-one-of-your-baskets"><a href="#Starting-from-any-tree-of-your-choice-you-must-pick-exactly-one-fruit-from-every-tree-including-the-start-tree-while-moving-to-the-right-The-picked-fruits-must-fit-in-one-of-your-baskets" class="headerlink" title="Starting from any tree of your choice, you must pick exactly one fruit from every tree (including the start tree) while moving to the right. The picked fruits must fit in one of your baskets."></a>Starting from any tree of your choice, you must pick exactly one fruit from every tree (including the start tree) while moving to the right. The picked fruits must fit in one of your baskets.</h2><h2 id="Once-you-reach-a-tree-with-fruit-that-cannot-fit-in-your-baskets-you-must-stop"><a href="#Once-you-reach-a-tree-with-fruit-that-cannot-fit-in-your-baskets-you-must-stop" class="headerlink" title="Once you reach a tree with fruit that cannot fit in your baskets, you must stop."></a>Once you reach a tree with fruit that cannot fit in your baskets, you must stop.</h2><p>Given the integer array fruits, return the maximum number of fruits you can pick.</p><p>这道题的本质是求连续子序列</p><h2 id="力扣官方题解"><a href="#力扣官方题解" class="headerlink" title="力扣官方题解"></a><a href="https://leetcode.cn/problems/fruit-into-baskets/solutions/1893352/shui-guo-cheng-lan-by-leetcode-solution-1uyu/">力扣官方题解</a></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">totalFruit</span>(<span class="params">self, fruits: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        cnt = Counter()</span><br><span class="line"></span><br><span class="line">        left = ans = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> right, x <span class="keyword">in</span> <span class="built_in">enumerate</span>(fruits):</span><br><span class="line">            cnt[x] += <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> <span class="built_in">len</span>(cnt) &gt; <span class="number">2</span>:</span><br><span class="line">                cnt[fruits[left]] -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> cnt[fruits[left]] == <span class="number">0</span>:</span><br><span class="line">                    cnt.pop(fruits[left])</span><br><span class="line">                left += <span class="number">1</span></span><br><span class="line">            ans = <span class="built_in">max</span>(ans, right - left + <span class="number">1</span>)        </span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;904-Fruit-Into-Baskets-medium&quot;&gt;&lt;a href=&quot;#904-Fruit-Into-Baskets-medium&quot; class=&quot;headerlink&quot; title=&quot;904. Fruit Into Baskets(medium)&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="hashmap" scheme="http://example.com/tags/hashmap/"/>
    
    <category term="two-pointer" scheme="http://example.com/tags/two-pointer/"/>
    
    <category term="sliding window" scheme="http://example.com/tags/sliding-window/"/>
    
  </entry>
  
  <entry>
    <title>901. Online Stock Span(medium)</title>
    <link href="http://example.com/2022/11/09/901/"/>
    <id>http://example.com/2022/11/09/901/</id>
    <published>2022-11-09T21:03:58.000Z</published>
    <updated>2022-11-09T22:25:39.676Z</updated>
    
    <content type="html"><![CDATA[<h1 id="901-Online-Stock-Span-medium"><a href="#901-Online-Stock-Span-medium" class="headerlink" title="901. Online Stock Span(medium)"></a>901. Online Stock Span(medium)</h1><h2 id="Design-an-algorithm-that-collects-daily-price-quotes-for-some-stock-and-returns-the-span-of-that-stock’s-price-for-the-current-day"><a href="#Design-an-algorithm-that-collects-daily-price-quotes-for-some-stock-and-returns-the-span-of-that-stock’s-price-for-the-current-day" class="headerlink" title="Design an algorithm that collects daily price quotes for some stock and returns the span of that stock’s price for the current day."></a>Design an algorithm that collects daily price quotes for some stock and returns the span of that stock’s price for the current day.</h2><h2 id="The-span-of-the-stock’s-price-today-is-defined-as-the-maximum-number-of-consecutive-days-starting-from-today-and-going-backward-for-which-the-stock-price-was-less-than-or-equal-to-today’s-price"><a href="#The-span-of-the-stock’s-price-today-is-defined-as-the-maximum-number-of-consecutive-days-starting-from-today-and-going-backward-for-which-the-stock-price-was-less-than-or-equal-to-today’s-price" class="headerlink" title="The span of the stock’s price today is defined as the maximum number of consecutive days (starting from today and going backward) for which the stock price was less than or equal to today’s price."></a>The span of the stock’s price today is defined as the maximum number of consecutive days (starting from today and going backward) for which the stock price was less than or equal to today’s price.</h2><h2 id="For-example-if-the-price-of-a-stock-over-the-next-7-days-were-100-80-60-70-60-75-85-then-the-stock-spans-would-be-1-1-1-2-1-4-6"><a href="#For-example-if-the-price-of-a-stock-over-the-next-7-days-were-100-80-60-70-60-75-85-then-the-stock-spans-would-be-1-1-1-2-1-4-6" class="headerlink" title="For example, if the price of a stock over the next 7 days were [100,80,60,70,60,75,85], then the stock spans would be [1,1,1,2,1,4,6]."></a>For example, if the price of a stock over the next 7 days were [100,80,60,70,60,75,85], then the stock spans would be [1,1,1,2,1,4,6].</h2><h2 id="Implement-the-StockSpanner-class"><a href="#Implement-the-StockSpanner-class" class="headerlink" title="Implement the StockSpanner class:"></a>Implement the StockSpanner class:</h2><p>StockSpanner() Initializes the object of the class.<br>int next(int price) Returns the span of the stock’s price given that today’s price is price.</p><h3 id="官方题解"><a href="#官方题解" class="headerlink" title="官方题解"></a><a href="https://leetcode.cn/problems/online-stock-span/solutions/1906765/gu-piao-jie-ge-kua-du-by-leetcode-soluti-5cm7/">官方题解</a></h3><p>一开始我先试了直接用数组记录数据，然后每次往前遍历一遍记录有多少小于当前price的值，但是在后面的testcase中遇到了超时的问题。<br>官方解答是用了stack来解决这个问题</p><p>调用 next 时，输入是新的一天的股票价格，需要返回包含此日在内的，往前数最多有连续多少日的股票价格是小于等于今日股票价格的。如果把每日的 price 当成数组不同下标的值，即需要求出每个值与上一个更大元素之间的下标之差。这种题目可以用单调栈求解，具体原理可以参考「496. 下一个更大元素 I 的官方题解的方法二」。<br>此题的具体解法上，栈的元素可以是股票价格的下标（即天数）和股票价格的二元数对，并且在栈中先插入一个最大值作为天数为 −1 天的价格，来保证栈不会为空。调用 next 时，先将栈中价格小于等于此时 price 的元素都弹出，直到遇到一个大于 price 的值，并将 price 入栈，计算下标差返回。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StockSpanner</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.stack = [(-<span class="number">1</span>, inf)]</span><br><span class="line">        self.idx = -<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">next</span>(<span class="params">self, price: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        self.idx += <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> price &gt;= self.stack[-<span class="number">1</span>][<span class="number">1</span>]:</span><br><span class="line">            self.stack.pop()</span><br><span class="line">        self.stack.append((self.idx, price))</span><br><span class="line">        <span class="keyword">return</span> self.idx - self.stack[-<span class="number">2</span>][<span class="number">0</span>]</span><br></pre></td></tr></table></figure><p>作者：力扣官方题解<br>链接：<a href="https://leetcode.cn/problems/online-stock-span/solutions/1906765/gu-piao-jie-ge-kua-du-by-leetcode-soluti-5cm7/">https://leetcode.cn/problems/online-stock-span/solutions/1906765/gu-piao-jie-ge-kua-du-by-leetcode-soluti-5cm7/</a><br>来源：力扣（LeetCode）<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;901-Online-Stock-Span-medium&quot;&gt;&lt;a href=&quot;#901-Online-Stock-Span-medium&quot; class=&quot;headerlink&quot; title=&quot;901. Online Stock Span(medium)&quot;&gt;&lt;/a&gt;</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="stack" scheme="http://example.com/tags/stack/"/>
    
    <category term="Data structure design" scheme="http://example.com/tags/Data-structure-design/"/>
    
  </entry>
  
  <entry>
    <title>2244. Minimum Rounds to Complete All Tasks(medium)</title>
    <link href="http://example.com/2022/11/09/2244/"/>
    <id>http://example.com/2022/11/09/2244/</id>
    <published>2022-11-09T20:24:14.000Z</published>
    <updated>2022-11-09T22:24:42.577Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2244-Minimum-Rounds-to-Complete-All-Tasks-medium"><a href="#2244-Minimum-Rounds-to-Complete-All-Tasks-medium" class="headerlink" title="2244. Minimum Rounds to Complete All Tasks(medium)"></a>2244. Minimum Rounds to Complete All Tasks(medium)</h1><h2 id="You-are-given-a-0-indexed-integer-array-tasks-where-tasks-i-represents-the-difficulty-level-of-a-task-In-each-round-you-can-complete-either-2-or-3-tasks-of-the-same-difficulty-level"><a href="#You-are-given-a-0-indexed-integer-array-tasks-where-tasks-i-represents-the-difficulty-level-of-a-task-In-each-round-you-can-complete-either-2-or-3-tasks-of-the-same-difficulty-level" class="headerlink" title="You are given a 0-indexed integer array tasks, where tasks[i] represents the difficulty level of a task. In each round, you can complete either 2 or 3 tasks of the same difficulty level."></a>You are given a 0-indexed integer array tasks, where tasks[i] represents the difficulty level of a task. In each round, you can complete either 2 or 3 tasks of the same difficulty level.</h2><h2 id="Return-the-minimum-rounds-required-to-complete-all-the-tasks-or-1-if-it-is-not-possible-to-complete-all-the-tasks"><a href="#Return-the-minimum-rounds-required-to-complete-all-the-tasks-or-1-if-it-is-not-possible-to-complete-all-the-tasks" class="headerlink" title="Return the minimum rounds required to complete all the tasks, or -1 if it is not possible to complete all the tasks."></a>Return the minimum rounds required to complete all the tasks, or -1 if it is not possible to complete all the tasks.</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Input: tasks = [2,2,3,3,2,4,4,4,4,4]</span><br><span class="line">Output: 4</span><br><span class="line">Explanation: To complete all the tasks, a possible plan is:</span><br><span class="line">- In the first round, you complete 3 tasks of difficulty level 2. </span><br><span class="line">- In the second round, you complete 2 tasks of difficulty level 3. </span><br><span class="line">- In the third round, you complete 3 tasks of difficulty level 4. </span><br><span class="line">- In the fourth round, you complete 2 tasks of difficulty level 4.  </span><br><span class="line">It can be shown that all the tasks cannot be completed in fewer than 4 rounds, so the answer is 4.</span><br></pre></td></tr></table></figure><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution:"></a>Solution:</h2><p>通过Counter记录相同task，然后遍历每个value的个数count分情况讨论，遇到只有一个的直接返回-1，对3能整除的ans加上count除3<br>剩下的都是除三向下取整加1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#from collections import Counter</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minimumRounds</span>(<span class="params">self, tasks: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        ans=<span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(tasks)==<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">        hashmap=Counter(tasks)</span><br><span class="line">        ans=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> count <span class="keyword">in</span> hashmap.values():</span><br><span class="line">            <span class="keyword">if</span> count==<span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> count%<span class="number">3</span>==<span class="number">0</span>:</span><br><span class="line">                ans+=count/<span class="number">3</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ans+=count//<span class="number">3</span>+<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(ans)        </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2244-Minimum-Rounds-to-Complete-All-Tasks-medium&quot;&gt;&lt;a href=&quot;#2244-Minimum-Rounds-to-Complete-All-Tasks-medium&quot; class=&quot;headerlink&quot; tit</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="hashmap" scheme="http://example.com/tags/hashmap/"/>
    
  </entry>
  
  <entry>
    <title>746. Min Cost Climbing Stairs(easy)</title>
    <link href="http://example.com/2022/11/08/746/"/>
    <id>http://example.com/2022/11/08/746/</id>
    <published>2022-11-08T22:14:38.000Z</published>
    <updated>2022-11-08T23:20:48.987Z</updated>
    
    <content type="html"><![CDATA[<h1 id="746-Min-Cost-Climbing-Stairs-easy"><a href="#746-Min-Cost-Climbing-Stairs-easy" class="headerlink" title="746. Min Cost Climbing Stairs(easy)"></a>746. Min Cost Climbing Stairs(easy)</h1><h2 id="You-are-given-an-integer-array-cost-where-cost-i-is-the-cost-of-ith-step-on-a-staircase-Once-you-pay-the-cost-you-can-either-climb-one-or-two-steps"><a href="#You-are-given-an-integer-array-cost-where-cost-i-is-the-cost-of-ith-step-on-a-staircase-Once-you-pay-the-cost-you-can-either-climb-one-or-two-steps" class="headerlink" title="You are given an integer array cost where cost[i] is the cost of ith step on a staircase. Once you pay the cost, you can either climb one or two steps."></a>You are given an integer array cost where cost[i] is the cost of ith step on a staircase. Once you pay the cost, you can either climb one or two steps.</h2><h2 id="You-can-either-start-from-the-step-with-index-0-or-the-step-with-index-1"><a href="#You-can-either-start-from-the-step-with-index-0-or-the-step-with-index-1" class="headerlink" title="You can either start from the step with index 0, or the step with index 1."></a>You can either start from the step with index 0, or the step with index 1.</h2><h2 id="Return-the-minimum-cost-to-reach-the-top-of-the-floor"><a href="#Return-the-minimum-cost-to-reach-the-top-of-the-floor" class="headerlink" title="Return the minimum cost to reach the top of the floor."></a>Return the minimum cost to reach the top of the floor.</h2><h2 id="官方题解"><a href="#官方题解" class="headerlink" title="官方题解"></a><a href="https://leetcode.cn/problems/min-cost-climbing-stairs/solutions/528955/shi-yong-zui-xiao-hua-fei-pa-lou-ti-by-l-ncf8/">官方题解</a></h2><p>创建长度为 n+1的数组 dp，其中 dp[i] 表示达到下标 i 的最小花费。</p><p>由于可以选择下标 0 或 1 作为初始阶梯，因此有 dp[0]=dp[1]=0</p><p>状态转移方程如下：</p><p>dp[i]=min(dp[i−1]+cost[i−1],dp[i−2]+cost[i−2])</p><p>有了这个方程，这道题就好下手了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minCostClimbingStairs</span>(<span class="params">self, cost: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        n=<span class="built_in">len</span>(cost)</span><br><span class="line">        dp=[<span class="number">0</span>]*(n+<span class="number">1</span>)</span><br><span class="line">        dp[<span class="number">0</span>]=dp[<span class="number">1</span>]=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,n+<span class="number">1</span>):</span><br><span class="line">            dp[i]=<span class="built_in">min</span>(dp[i-<span class="number">1</span>]+cost[i-<span class="number">1</span>],dp[i-<span class="number">2</span>]+cost[i-<span class="number">2</span>])</span><br><span class="line">        <span class="keyword">return</span> dp[n]</span><br></pre></td></tr></table></figure><p>优化：<br>利用滚动数组</p><p>注意到当 i≥2时，dp[i] 只和 dp[i−1] 与 dp[i−2] 有关，因此可以使用滚动数组的思想，将空间复杂度优化到 O(1)。<br>类似于不维护一个完整数组，只计算到最后一个数字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minCostClimbingStairs</span>(<span class="params">self, cost: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        n = <span class="built_in">len</span>(cost)</span><br><span class="line">        prev = curr = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, n + <span class="number">1</span>):</span><br><span class="line">            nxt = <span class="built_in">min</span>(curr + cost[i - <span class="number">1</span>], prev + cost[i - <span class="number">2</span>])</span><br><span class="line">            prev, curr = curr, nxt</span><br><span class="line">        <span class="keyword">return</span> curr</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;746-Min-Cost-Climbing-Stairs-easy&quot;&gt;&lt;a href=&quot;#746-Min-Cost-Climbing-Stairs-easy&quot; class=&quot;headerlink&quot; title=&quot;746. Min Cost Climbing Sta</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="dynamic programming" scheme="http://example.com/tags/dynamic-programming/"/>
    
  </entry>
  
  <entry>
    <title>6. Zigzag Conversion(medium)</title>
    <link href="http://example.com/2022/11/07/6/"/>
    <id>http://example.com/2022/11/07/6/</id>
    <published>2022-11-07T22:13:20.000Z</published>
    <updated>2022-11-08T22:17:23.256Z</updated>
    
    <content type="html"><![CDATA[<h1 id="6-Zigzag-Conversion-medium"><a href="#6-Zigzag-Conversion-medium" class="headerlink" title="6. Zigzag Conversion(medium)"></a>6. Zigzag Conversion(medium)</h1><h2 id="The-string-“PAYPALISHIRING”-is-written-in-a-zigzag-pattern-on-a-given-number-of-rows-like-this-you-may-want-to-display-this-pattern-in-a-fixed-font-for-better-legibility"><a href="#The-string-“PAYPALISHIRING”-is-written-in-a-zigzag-pattern-on-a-given-number-of-rows-like-this-you-may-want-to-display-this-pattern-in-a-fixed-font-for-better-legibility" class="headerlink" title="The string “PAYPALISHIRING” is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)"></a>The string “PAYPALISHIRING” is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">P   A   H   N</span><br><span class="line">A P L S I I G</span><br><span class="line">Y   I   R</span><br></pre></td></tr></table></figure><p>And then read line by line: “PAHNAPLSIIGYIR”</p><p>Write the code that will take a string and make this conversion given a number of rows:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string convert(string s, int numRows);</span><br></pre></td></tr></table></figure><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a><a href="https://leetcode.cn/problems/zigzag-conversion/solutions/21610/zzi-xing-bian-huan-by-jyd/">题解</a></h3><p>这道题没有用到什么独特的数据结构或者算法，但是这里用一个flag记录是否要反方向记录</p><p>解题思路：<br>题目理解：<br>字符串 s 是以 Z 字形为顺序存储的字符串，目标是按行打印。<br>设 numRows 行字符串分别为 s1, s2s_2s<br>2,…, sn，则容易发现：按顺序遍历字符串 s 时，每个字符 c 在 Z 字形中对应的行索引先从 s1增大至 sn，再从 sn减小至 s1…… 如此反复。<br>因此，解决方案为：模拟这个行索引的变化，在遍历 s 中把每个字符填到正确的行 res[i] 。<br>算法流程： 按顺序遍历字符串 s；<br>res[i] += c： 把每个字符 c 填入对应行 si；<br>i += flag： 更新当前字符 c 对应的行索引；<br>flag = - flag： 在达到 ZZZ 字形转折点时，执行反向。<br>复杂度分析：<br>时间复杂度 O(N) ：遍历一遍字符串 s；<br>空间复杂度 O(N) ：各行字符串共占用 O(N)额外空间。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">convert</span>(<span class="params">self, s: <span class="built_in">str</span>, numRows: <span class="built_in">int</span></span>) -&gt; <span class="built_in">str</span>:</span></span><br><span class="line">        <span class="keyword">if</span> numRows &lt; <span class="number">2</span>: <span class="keyword">return</span> s</span><br><span class="line">        res = [<span class="string">&quot;&quot;</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(numRows)]</span><br><span class="line">        i, flag = <span class="number">0</span>, -<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> s:</span><br><span class="line">            res[i] += c</span><br><span class="line">            <span class="keyword">if</span> i == <span class="number">0</span> <span class="keyword">or</span> i == numRows - <span class="number">1</span>: flag = -flag</span><br><span class="line">            i += flag</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>.join(res)</span><br></pre></td></tr></table></figure><p>确实是非常巧妙的方法</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;6-Zigzag-Conversion-medium&quot;&gt;&lt;a href=&quot;#6-Zigzag-Conversion-medium&quot; class=&quot;headerlink&quot; title=&quot;6. Zigzag Conversion(medium)&quot;&gt;&lt;/a&gt;6. Zig</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="string" scheme="http://example.com/tags/string/"/>
    
  </entry>
  
  <entry>
    <title>1684. Count the Number of Consistent Strings(easy)</title>
    <link href="http://example.com/2022/11/07/1684/"/>
    <id>http://example.com/2022/11/07/1684/</id>
    <published>2022-11-07T21:56:53.000Z</published>
    <updated>2022-11-08T22:16:45.208Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1684-Count-the-Number-of-Consistent-Strings-easy"><a href="#1684-Count-the-Number-of-Consistent-Strings-easy" class="headerlink" title="1684. Count the Number of Consistent Strings(easy)"></a>1684. Count the Number of Consistent Strings(easy)</h1><h2 id="You-are-given-a-string-allowed-consisting-of-distinct-characters-and-an-array-of-strings-words-A-string-is-consistent-if-all-characters-in-the-string-appear-in-the-string-allowed"><a href="#You-are-given-a-string-allowed-consisting-of-distinct-characters-and-an-array-of-strings-words-A-string-is-consistent-if-all-characters-in-the-string-appear-in-the-string-allowed" class="headerlink" title="You are given a string allowed consisting of distinct characters and an array of strings words. A string is consistent if all characters in the string appear in the string allowed."></a>You are given a string allowed consisting of distinct characters and an array of strings words. A string is consistent if all characters in the string appear in the string allowed.</h2><h2 id="Return-the-number-of-consistent-strings-in-the-array-words"><a href="#Return-the-number-of-consistent-strings-in-the-array-words" class="headerlink" title="Return the number of consistent strings in the array words."></a>Return the number of consistent strings in the array words.</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: allowed = &quot;ab&quot;, words = [&quot;ad&quot;,&quot;bd&quot;,&quot;aaab&quot;,&quot;baa&quot;,&quot;badab&quot;]</span><br><span class="line">Output: 2</span><br><span class="line">Explanation: Strings &quot;aaab&quot; and &quot;baa&quot; are consistent since they only contain characters &#x27;a&#x27; and &#x27;b&#x27;.</span><br></pre></td></tr></table></figure><p>这道题原本是想对words进行set操作的，后面发现对list里的每一个数都操作太麻烦，所以换一个思路，选择从反方向入手。<br>题目是要我们找words里的字母只含有allowed里的字母，所以将allowed去重后，如果words的单词里的字母如果不在allowed里，就记录下来cnt<br>最后输出的是有相同字母的，那么就用words的总个数减去cnt即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">countConsistentStrings</span>(<span class="params">self, allowed: <span class="built_in">str</span>, words: <span class="type">List</span>[<span class="built_in">str</span>]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        allowed=<span class="built_in">set</span>(allowed)</span><br><span class="line">        cnt=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> cha <span class="keyword">in</span> words:</span><br><span class="line">            <span class="keyword">for</span> letter <span class="keyword">in</span> cha:</span><br><span class="line">                <span class="keyword">if</span> letter <span class="keyword">not</span> <span class="keyword">in</span> allowed:</span><br><span class="line">                    cnt+=<span class="number">1</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(words)-cnt</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1684-Count-the-Number-of-Consistent-Strings-easy&quot;&gt;&lt;a href=&quot;#1684-Count-the-Number-of-Consistent-Strings-easy&quot; class=&quot;headerlink&quot; tit</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="string" scheme="http://example.com/tags/string/"/>
    
    <category term="set" scheme="http://example.com/tags/set/"/>
    
  </entry>
  
  <entry>
    <title>1137. N-th Tribonacci Number(easy)</title>
    <link href="http://example.com/2022/11/07/1137/"/>
    <id>http://example.com/2022/11/07/1137/</id>
    <published>2022-11-07T21:41:07.000Z</published>
    <updated>2022-11-08T22:16:28.780Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1137-N-th-Tribonacci-Number-easy"><a href="#1137-N-th-Tribonacci-Number-easy" class="headerlink" title="1137. N-th Tribonacci Number(easy)"></a>1137. N-th Tribonacci Number(easy)</h1><h2 id="The-Tribonacci-sequence-Tn-is-defined-as-follows"><a href="#The-Tribonacci-sequence-Tn-is-defined-as-follows" class="headerlink" title="The Tribonacci sequence Tn is defined as follows:"></a>The Tribonacci sequence Tn is defined as follows:</h2><p>T0 = 0, T1 = 1, T2 = 1, and Tn+3 = Tn + Tn+1 + Tn+2 for n &gt;= 0.</p><p>Given n, return the value of Tn.</p><p>三个数连续相加的斐波那契数列，还是动态规划的思路</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tribonacci</span>(<span class="params">self, n: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        <span class="keyword">if</span> n&lt;<span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        <span class="keyword">elif</span> n==<span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">        dp=[<span class="number">0</span>]*(n+<span class="number">1</span>)</span><br><span class="line">        dp[<span class="number">1</span>]=<span class="number">1</span></span><br><span class="line">        dp[<span class="number">2</span>]=<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>,n+<span class="number">1</span>):</span><br><span class="line">            dp[i]=dp[i-<span class="number">1</span>]+dp[i-<span class="number">2</span>]+dp[i-<span class="number">3</span>]</span><br><span class="line">        <span class="keyword">return</span> dp[n]</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1137-N-th-Tribonacci-Number-easy&quot;&gt;&lt;a href=&quot;#1137-N-th-Tribonacci-Number-easy&quot; class=&quot;headerlink&quot; title=&quot;1137. N-th Tribonacci Number</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="dynamic programming" scheme="http://example.com/tags/dynamic-programming/"/>
    
  </entry>
  
  <entry>
    <title>509. Fibonacci Number(easy)</title>
    <link href="http://example.com/2022/11/07/509/"/>
    <id>http://example.com/2022/11/07/509/</id>
    <published>2022-11-07T21:12:54.000Z</published>
    <updated>2022-11-08T22:16:12.770Z</updated>
    
    <content type="html"><![CDATA[<h1 id="509-Fibonacci-Number-easy"><a href="#509-Fibonacci-Number-easy" class="headerlink" title="509. Fibonacci Number(easy)"></a>509. Fibonacci Number(easy)</h1><h2 id="The-Fibonacci-numbers-commonly-denoted-F-n-form-a-sequence-called-the-Fibonacci-sequence-such-that-each-number-is-the-sum-of-the-two-preceding-ones-starting-from-0-and-1-That-is"><a href="#The-Fibonacci-numbers-commonly-denoted-F-n-form-a-sequence-called-the-Fibonacci-sequence-such-that-each-number-is-the-sum-of-the-two-preceding-ones-starting-from-0-and-1-That-is" class="headerlink" title="The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,"></a>The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">F(0) = 0, F(1) = 1</span><br><span class="line">F(n) = F(n - 1) + F(n - 2), for n &gt; 1.</span><br></pre></td></tr></table></figure><p>Given n, calculate F(n).</p><p>斐波那契数列<br>F(0)=0,F(1)=1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fib</span>(<span class="params">self, n: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        <span class="keyword">if</span> n&lt;<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        dp=[<span class="number">0</span>]*(n+<span class="number">1</span>)</span><br><span class="line">        dp[<span class="number">1</span>]=<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,n+<span class="number">1</span>):</span><br><span class="line">            dp[i]=dp[i-<span class="number">1</span>]+dp[i-<span class="number">2</span>]</span><br><span class="line">        <span class="keyword">return</span> dp[n]</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;509-Fibonacci-Number-easy&quot;&gt;&lt;a href=&quot;#509-Fibonacci-Number-easy&quot; class=&quot;headerlink&quot; title=&quot;509. Fibonacci Number(easy)&quot;&gt;&lt;/a&gt;509. Fibo</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="dynamic programming" scheme="http://example.com/tags/dynamic-programming/"/>
    
  </entry>
  
  <entry>
    <title>1323. Maximum 69 Number(easy)</title>
    <link href="http://example.com/2022/11/06/1323/"/>
    <id>http://example.com/2022/11/06/1323/</id>
    <published>2022-11-07T03:57:00.000Z</published>
    <updated>2022-11-07T03:59:25.023Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1323-Maximum-69-Number-easy"><a href="#1323-Maximum-69-Number-easy" class="headerlink" title="1323. Maximum 69 Number(easy)"></a>1323. Maximum 69 Number(easy)</h1><h2 id="You-are-given-a-positive-integer-num-consisting-only-of-digits-6-and-9"><a href="#You-are-given-a-positive-integer-num-consisting-only-of-digits-6-and-9" class="headerlink" title="You are given a positive integer num consisting only of digits 6 and 9."></a>You are given a positive integer num consisting only of digits 6 and 9.</h2><h2 id="Return-the-maximum-number-you-can-get-by-changing-at-most-one-digit-6-becomes-9-and-9-becomes-6"><a href="#Return-the-maximum-number-you-can-get-by-changing-at-most-one-digit-6-becomes-9-and-9-becomes-6" class="headerlink" title="Return the maximum number you can get by changing at most one digit (6 becomes 9, and 9 becomes 6)."></a>Return the maximum number you can get by changing at most one digit (6 becomes 9, and 9 becomes 6).</h2><p>将num转换为字符串，然后再转换成list<br>判断list有没有6，如果没有直接输出num<br>index(x)返回找到的第一个x<br>最后join把字符串连在一起</p><pre><code class="python">class Solution:    def maximum69Number (self, num: int) -&gt; int:        s=list(str(num))        if &#39;6&#39; not in s:            return num        s[s.index(&#39;6&#39;)]=&#39;9&#39;        return &#39;&#39;.join(s)</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1323-Maximum-69-Number-easy&quot;&gt;&lt;a href=&quot;#1323-Maximum-69-Number-easy&quot; class=&quot;headerlink&quot; title=&quot;1323. Maximum 69 Number(easy)&quot;&gt;&lt;/a&gt;132</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="string" scheme="http://example.com/tags/string/"/>
    
  </entry>
  
  <entry>
    <title>408. Valid Word Abbreviation(easy)</title>
    <link href="http://example.com/2022/11/06/408/"/>
    <id>http://example.com/2022/11/06/408/</id>
    <published>2022-11-07T03:50:54.000Z</published>
    <updated>2022-11-07T03:52:07.012Z</updated>
    
    <content type="html"><![CDATA[<h1 id="408-Valid-Word-Abbreviation-easy"><a href="#408-Valid-Word-Abbreviation-easy" class="headerlink" title="408. Valid Word Abbreviation(easy)"></a>408. Valid Word Abbreviation(easy)</h1><h2 id="A-string-can-be-abbreviated-by-replacing-any-number-of-non-adjacent-non-empty-substrings-with-their-lengths-The-lengths-should-not-have-leading-zeros"><a href="#A-string-can-be-abbreviated-by-replacing-any-number-of-non-adjacent-non-empty-substrings-with-their-lengths-The-lengths-should-not-have-leading-zeros" class="headerlink" title="A string can be abbreviated by replacing any number of non-adjacent, non-empty substrings with their lengths. The lengths should not have leading zeros."></a>A string can be abbreviated by replacing any number of non-adjacent, non-empty substrings with their lengths. The lengths should not have leading zeros.</h2><p>For example, a string such as “substitution” could be abbreviated as (but not limited to):</p><p>“s10n” (“s ubstitutio n”)<br>“sub4u4” (“sub stit u tion”)<br>“12” (“substitution”)<br>“su3i1u2on” (“su bst i t u ti on”)<br>“substitution” (no substrings replaced)<br>The following are not valid abbreviations:</p><p>“s55n” (“s ubsti tutio n”, the replaced substrings are adjacent)<br>“s010n” (has leading zeros)<br>“s0ubstitution” (replaces an empty substring)<br>Given a string word and an abbreviation abbr, return whether the string matches the given abbreviation.</p><p>A substring is a contiguous non-empty sequence of characters within a string.</p><p>这道题就是直接模拟计算<br><a href="https://leetcode.com/problems/valid-word-abbreviation/solutions/144195/python-straightforward-solution-beats-100/">题解</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validWordAbbreviation</span>(<span class="params">self, word, abbr</span>):</span></span><br><span class="line">        i = j = <span class="number">0</span></span><br><span class="line">        m, n = <span class="built_in">len</span>(word), <span class="built_in">len</span>(abbr)</span><br><span class="line">        <span class="keyword">while</span> i &lt; m <span class="keyword">and</span> j &lt; n:</span><br><span class="line">            <span class="keyword">if</span> word[i] == abbr[j]:</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> abbr[j] == <span class="string">&quot;0&quot;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            <span class="keyword">elif</span> abbr[j].isnumeric():</span><br><span class="line">                k = j</span><br><span class="line">                <span class="keyword">while</span> k &lt; n <span class="keyword">and</span> abbr[k].isnumeric():</span><br><span class="line">                    k += <span class="number">1</span></span><br><span class="line">                i += <span class="built_in">int</span>(abbr[j:k])</span><br><span class="line">                j = k</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> i == m <span class="keyword">and</span> j == n</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;408-Valid-Word-Abbreviation-easy&quot;&gt;&lt;a href=&quot;#408-Valid-Word-Abbreviation-easy&quot; class=&quot;headerlink&quot; title=&quot;408. Valid Word Abbreviation</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="string" scheme="http://example.com/tags/string/"/>
    
  </entry>
  
  <entry>
    <title>459. Repeated Substring Pattern(easy)</title>
    <link href="http://example.com/2022/11/06/459/"/>
    <id>http://example.com/2022/11/06/459/</id>
    <published>2022-11-07T03:31:10.000Z</published>
    <updated>2022-11-07T03:41:32.883Z</updated>
    
    <content type="html"><![CDATA[<h1 id="459-Repeated-Substring-Pattern-easy"><a href="#459-Repeated-Substring-Pattern-easy" class="headerlink" title="459. Repeated Substring Pattern(easy)"></a>459. Repeated Substring Pattern(easy)</h1><h2 id="Given-a-string-s-check-if-it-can-be-constructed-by-taking-a-substring-of-it-and-appending-multiple-copies-of-the-substring-together"><a href="#Given-a-string-s-check-if-it-can-be-constructed-by-taking-a-substring-of-it-and-appending-multiple-copies-of-the-substring-together" class="headerlink" title="Given a string s, check if it can be constructed by taking a substring of it and appending multiple copies of the substring together."></a>Given a string s, check if it can be constructed by taking a substring of it and appending multiple copies of the substring together.</h2><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a><a href="https://leetcode.com/problems/repeated-substring-pattern/solutions/94334/easy-python-solution-with-explaination/">题解</a></h3><p>这道题的题解非常有技巧：</p><ol><li>First char of input string is first char of repeated substring</li><li>Last char of input string is last char of repeated substring</li><li>Let S1 = S + S (where S in input string)</li><li>Remove 1 and last char of S1. Let this be S2</li><li>If S exists in S2 then return true else false</li><li>Let i be index in S2 where S starts then repeated substring length i + 1 and repeated substring S[0: i+1]</li></ol><p>这里最基础的一点是，新字符串s2=s+s，s是一开始的字符串。如果s是重复的，那么s2从第二个字符到倒数第二个字符里一定包含了s</p><pre><code class="python">class Solution:    def repeatedSubstringPattern(self, s: str) -&gt; bool:        if not s:            return False        s2=(s+s)[1:-1]        return s2.find(s)!=-1</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;459-Repeated-Substring-Pattern-easy&quot;&gt;&lt;a href=&quot;#459-Repeated-Substring-Pattern-easy&quot; class=&quot;headerlink&quot; title=&quot;459. Repeated Substrin</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="string" scheme="http://example.com/tags/string/"/>
    
  </entry>
  
  <entry>
    <title>422. Valid Word Square(easy)</title>
    <link href="http://example.com/2022/11/06/422/"/>
    <id>http://example.com/2022/11/06/422/</id>
    <published>2022-11-07T03:29:24.000Z</published>
    <updated>2022-11-07T03:41:17.823Z</updated>
    
    <content type="html"><![CDATA[<h1 id="422-Valid-Word-Square-easy"><a href="#422-Valid-Word-Square-easy" class="headerlink" title="422. Valid Word Square(easy)"></a>422. Valid Word Square(easy)</h1><h2 id="Given-an-array-of-strings-words-return-true-if-it-forms-a-valid-word-square"><a href="#Given-an-array-of-strings-words-return-true-if-it-forms-a-valid-word-square" class="headerlink" title="Given an array of strings words, return true if it forms a valid word square."></a>Given an array of strings words, return true if it forms a valid word square.</h2><h2 id="A-sequence-of-strings-forms-a-valid-word-square-if-the-kth-row-and-column-read-the-same-string-where-0-lt-k-lt-max-numRows-numColumns"><a href="#A-sequence-of-strings-forms-a-valid-word-square-if-the-kth-row-and-column-read-the-same-string-where-0-lt-k-lt-max-numRows-numColumns" class="headerlink" title="A sequence of strings forms a valid word square if the kth row and column read the same string, where 0 &lt;= k &lt; max(numRows, numColumns)."></a>A sequence of strings forms a valid word square if the kth row and column read the same string, where 0 &lt;= k &lt; max(numRows, numColumns).</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Input: words = [&quot;abcd&quot;,&quot;bnrt&quot;,&quot;crmy&quot;,&quot;dtye&quot;]</span><br><span class="line">Output: true</span><br><span class="line">Explanation:</span><br><span class="line">The 1st row and 1st column both read &quot;abcd&quot;.</span><br><span class="line">The 2nd row and 2nd column both read &quot;bnrt&quot;.</span><br><span class="line">The 3rd row and 3rd column both read &quot;crmy&quot;.</span><br><span class="line">The 4th row and 4th column both read &quot;dtye&quot;.</span><br><span class="line">Therefore, it is a valid word square.</span><br></pre></td></tr></table></figure><p>找矩阵是否对称</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validWordSquare</span>(<span class="params">self, words: <span class="type">List</span>[<span class="built_in">str</span>]</span>) -&gt; <span class="built_in">bool</span>:</span></span><br><span class="line">        <span class="keyword">if</span> words==<span class="literal">None</span> <span class="keyword">or</span> <span class="built_in">len</span>(words)==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        row=<span class="built_in">len</span>(words)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(row):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(words[i])):</span><br><span class="line">                <span class="keyword">if</span> j&gt;=<span class="built_in">len</span>(words) <span class="keyword">or</span> i &gt;=<span class="built_in">len</span>(words[j]) <span class="keyword">or</span> words[i][j]!=words[j][i]:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;422-Valid-Word-Square-easy&quot;&gt;&lt;a href=&quot;#422-Valid-Word-Square-easy&quot; class=&quot;headerlink&quot; title=&quot;422. Valid Word Square(easy)&quot;&gt;&lt;/a&gt;422. V</summary>
      
    
    
    
    <category term="study" scheme="http://example.com/categories/study/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="string" scheme="http://example.com/tags/string/"/>
    
    <category term="matrix" scheme="http://example.com/tags/matrix/"/>
    
  </entry>
  
</feed>
